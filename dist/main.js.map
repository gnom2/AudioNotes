{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/standardized-audio-context/build/es2019/globals.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/constants.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack:///./node_modules/standardized-audio-context/build/es2019/module.js","webpack:///./node_modules/tone/build/esm/version.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/tone/build/esm/core/util/Debug.js","webpack:///./node_modules/tone/build/esm/core/util/TypeCheck.js","webpack:///./node_modules/tone/build/esm/core/context/AudioContext.js","webpack:///./node_modules/tone/build/esm/core/clock/Ticker.js","webpack:///./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","webpack:///./node_modules/tone/build/esm/core/util/Defaults.js","webpack:///./node_modules/tone/build/esm/core/Tone.js","webpack:///./node_modules/tone/build/esm/core/util/Math.js","webpack:///./node_modules/tone/build/esm/core/util/Timeline.js","webpack:///./node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack:///./node_modules/tone/build/esm/core/util/Emitter.js","webpack:///./node_modules/tone/build/esm/core/context/BaseContext.js","webpack:///./node_modules/tone/build/esm/core/context/Context.js","webpack:///./node_modules/tone/build/esm/core/context/DummyContext.js","webpack:///./node_modules/tone/build/esm/core/util/Interface.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack:///./node_modules/tone/build/esm/core/context/OfflineContext.js","webpack:///./node_modules/tone/build/esm/core/Global.js","webpack:///./node_modules/tone/build/esm/core/type/Conversions.js","webpack:///./node_modules/tone/build/esm/core/type/TimeBase.js","webpack:///./node_modules/tone/build/esm/core/type/Time.js","webpack:///./node_modules/tone/build/esm/core/type/Frequency.js","webpack:///./node_modules/tone/build/esm/core/type/TransportTime.js","webpack:///./node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack:///./node_modules/tone/build/esm/core/util/StateTimeline.js","webpack:///./node_modules/tone/build/esm/core/context/Param.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack:///./node_modules/tone/build/esm/core/context/Gain.js","webpack:///./node_modules/tone/build/esm/source/OneShotSource.js","webpack:///./node_modules/tone/build/esm/signal/ToneConstantSource.js","webpack:///./node_modules/tone/build/esm/signal/Signal.js","webpack:///./node_modules/tone/build/esm/core/clock/TickParam.js","webpack:///./node_modules/tone/build/esm/core/clock/TickSignal.js","webpack:///./node_modules/tone/build/esm/core/clock/TickSource.js","webpack:///./node_modules/tone/build/esm/core/clock/Clock.js","webpack:///./node_modules/tone/build/esm/core/util/TimelineValue.js","webpack:///./node_modules/tone/build/esm/core/type/Ticks.js","webpack:///./node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack:///./node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack:///./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack:///./node_modules/tone/build/esm/core/clock/Transport.js","webpack:///./node_modules/tone/build/esm/core/context/Delay.js","webpack:///./node_modules/tone/build/esm/component/channel/Volume.js","webpack:///./node_modules/tone/build/esm/core/context/Destination.js","webpack:///./node_modules/tone/build/esm/core/context/Offline.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack:///./node_modules/tone/build/esm/core/type/Midi.js","webpack:///./node_modules/tone/build/esm/core/util/Draw.js","webpack:///./node_modules/tone/build/esm/source/Source.js","webpack:///./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","webpack:///./node_modules/tone/build/esm/source/Noise.js","webpack:///./node_modules/tone/build/esm/source/UserMedia.js","webpack:///./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","webpack:///./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","webpack:///./node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack:///./node_modules/tone/build/esm/signal/SignalOperator.js","webpack:///./node_modules/tone/build/esm/signal/WaveShaper.js","webpack:///./node_modules/tone/build/esm/signal/AudioToGain.js","webpack:///./node_modules/tone/build/esm/signal/Multiply.js","webpack:///./node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack:///./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack:///./node_modules/tone/build/esm/signal/Add.js","webpack:///./node_modules/tone/build/esm/signal/Scale.js","webpack:///./node_modules/tone/build/esm/signal/Zero.js","webpack:///./node_modules/tone/build/esm/source/oscillator/LFO.js","webpack:///./node_modules/tone/build/esm/core/util/Decorator.js","webpack:///./node_modules/tone/build/esm/source/buffer/Player.js","webpack:///./node_modules/tone/build/esm/source/buffer/Players.js","webpack:///./node_modules/tone/build/esm/source/buffer/GrainPlayer.js","webpack:///./node_modules/tone/build/esm/signal/Abs.js","webpack:///./node_modules/tone/build/esm/signal/GainToAudio.js","webpack:///./node_modules/tone/build/esm/signal/Negate.js","webpack:///./node_modules/tone/build/esm/signal/Subtract.js","webpack:///./node_modules/tone/build/esm/signal/GreaterThanZero.js","webpack:///./node_modules/tone/build/esm/signal/GreaterThan.js","webpack:///./node_modules/tone/build/esm/signal/Pow.js","webpack:///./node_modules/tone/build/esm/signal/ScaleExp.js","webpack:///./node_modules/tone/build/esm/signal/SyncedSignal.js","webpack:///./node_modules/tone/build/esm/component/envelope/Envelope.js","webpack:///./node_modules/tone/build/esm/instrument/Instrument.js","webpack:///./node_modules/tone/build/esm/instrument/Monophonic.js","webpack:///./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack:///./node_modules/tone/build/esm/instrument/Synth.js","webpack:///./node_modules/tone/build/esm/instrument/ModulationSynth.js","webpack:///./node_modules/tone/build/esm/instrument/AMSynth.js","webpack:///./node_modules/tone/build/esm/component/filter/Filter.js","webpack:///./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","webpack:///./node_modules/tone/build/esm/instrument/MonoSynth.js","webpack:///./node_modules/tone/build/esm/instrument/DuoSynth.js","webpack:///./node_modules/tone/build/esm/instrument/FMSynth.js","webpack:///./node_modules/tone/build/esm/instrument/MetalSynth.js","webpack:///./node_modules/tone/build/esm/instrument/MembraneSynth.js","webpack:///./node_modules/tone/build/esm/instrument/NoiseSynth.js","webpack:///./node_modules/tone/build/esm/core/context/ToneAudioWorklet.js","webpack:///./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js","webpack:///./node_modules/tone/build/esm/component/filter/OnePoleFilter.js","webpack:///./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js","webpack:///./node_modules/tone/build/esm/instrument/PluckSynth.js","webpack:///./node_modules/tone/build/esm/instrument/PolySynth.js","webpack:///./node_modules/tone/build/esm/instrument/Sampler.js","webpack:///./node_modules/tone/build/esm/event/ToneEvent.js","webpack:///./node_modules/tone/build/esm/event/Loop.js","webpack:///./node_modules/tone/build/esm/event/Part.js","webpack:///./node_modules/tone/build/esm/event/PatternGenerator.js","webpack:///./node_modules/tone/build/esm/event/Pattern.js","webpack:///./node_modules/tone/build/esm/event/Sequence.js","webpack:///./node_modules/tone/build/esm/component/channel/CrossFade.js","webpack:///./node_modules/tone/build/esm/effect/Effect.js","webpack:///./node_modules/tone/build/esm/effect/LFOEffect.js","webpack:///./node_modules/tone/build/esm/effect/AutoFilter.js","webpack:///./node_modules/tone/build/esm/component/channel/Panner.js","webpack:///./node_modules/tone/build/esm/effect/AutoPanner.js","webpack:///./node_modules/tone/build/esm/component/analysis/Follower.js","webpack:///./node_modules/tone/build/esm/effect/AutoWah.js","webpack:///./node_modules/tone/build/esm/effect/BitCrusher.js","webpack:///./node_modules/tone/build/esm/effect/Chebyshev.js","webpack:///./node_modules/tone/build/esm/component/channel/Split.js","webpack:///./node_modules/tone/build/esm/component/channel/Merge.js","webpack:///./node_modules/tone/build/esm/effect/StereoEffect.js","webpack:///./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js","webpack:///./node_modules/tone/build/esm/effect/Chorus.js","webpack:///./node_modules/tone/build/esm/effect/Distortion.js","webpack:///./node_modules/tone/build/esm/effect/FeedbackEffect.js","webpack:///./node_modules/tone/build/esm/effect/FeedbackDelay.js","webpack:///./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js","webpack:///./node_modules/tone/build/esm/effect/FrequencyShifter.js","webpack:///./node_modules/tone/build/esm/effect/Freeverb.js","webpack:///./node_modules/tone/build/esm/effect/JCReverb.js","webpack:///./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js","webpack:///./node_modules/tone/build/esm/effect/PingPongDelay.js","webpack:///./node_modules/tone/build/esm/effect/PitchShift.js","webpack:///./node_modules/tone/build/esm/effect/Phaser.js","webpack:///./node_modules/tone/build/esm/effect/Reverb.js","webpack:///./node_modules/tone/build/esm/component/channel/MidSideSplit.js","webpack:///./node_modules/tone/build/esm/component/channel/MidSideMerge.js","webpack:///./node_modules/tone/build/esm/effect/MidSideEffect.js","webpack:///./node_modules/tone/build/esm/effect/StereoWidener.js","webpack:///./node_modules/tone/build/esm/effect/Tremolo.js","webpack:///./node_modules/tone/build/esm/effect/Vibrato.js","webpack:///./node_modules/tone/build/esm/component/analysis/Analyser.js","webpack:///./node_modules/tone/build/esm/component/analysis/MeterBase.js","webpack:///./node_modules/tone/build/esm/component/analysis/Meter.js","webpack:///./node_modules/tone/build/esm/component/analysis/FFT.js","webpack:///./node_modules/tone/build/esm/component/analysis/DCMeter.js","webpack:///./node_modules/tone/build/esm/component/analysis/Waveform.js","webpack:///./node_modules/tone/build/esm/component/channel/Solo.js","webpack:///./node_modules/tone/build/esm/component/channel/PanVol.js","webpack:///./node_modules/tone/build/esm/component/channel/Channel.js","webpack:///./node_modules/tone/build/esm/component/channel/MultibandSplit.js","webpack:///./node_modules/tone/build/esm/core/context/Listener.js","webpack:///./node_modules/tone/build/esm/component/channel/Panner3D.js","webpack:///./node_modules/tone/build/esm/component/channel/Recorder.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Compressor.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Gate.js","webpack:///./node_modules/tone/build/esm/component/dynamics/Limiter.js","webpack:///./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js","webpack:///./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js","webpack:///./node_modules/tone/build/esm/component/filter/EQ3.js","webpack:///./node_modules/tone/build/esm/component/filter/Convolver.js","webpack:///./node_modules/tone/build/esm/index.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack:///./node_modules/automation-events/build/es5/bundle.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack:///./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack:///./node_modules/standardized-audio-context/build/es2019/interfaces/index.js","webpack:///./node_modules/standardized-audio-context/build/es2019/types/index.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack:///./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js","webpack:///./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack:///./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./src/synth.js","webpack:///./src/notes.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","BACKUP_NATIVE_CONTEXT_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","assignNativeAudioNodeOptions","nativeAudioNode","options","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isOwnedByContext","nativeContext","context","assignNativeAudioNodeOption","option","undefined","assignNativeAudioNodeAudioParamValue","audioParam","getNativeAudioNode","audioNode","createInvalidStateError","DOMException","err","code","getAudioNodeConnections","getValueForKey","map","Error","createNotSupportedError","interceptConnections","original","interceptor","connect","disconnect","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","cacheTestResult","Map","window","nativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","nativeAudioContextConstructor","getBackupNativeContext","createNativeAudioNode","createNativeAnalyserNode","getAudioNodeRenderer","renderInputsOfAudioNode","createAnalyserNodeRenderer","auxiliaryGainNodeStore","getNativeContext","audioParamAudioNodeStore","eventTargetConstructor","isNativeAudioContext","isNativeAudioNode","isNativeAudioParam","audioNodeConstructor","analyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","convertNumberToUnsignedLong","Uint32Array","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","createNativeGainNode","addSilentConnection","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","renderInputsOfAudioParam","connectAudioParam","createNativeAudioBufferSourceNode","renderAutomation","createAudioBufferSourceNodeRenderer","createAudioParam","audioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createNativeBiquadFilterNode","createBiquadFilterNodeRenderer","biquadFilterNodeConstructor","monitorConnections","wrapChannelMergerNode","createNativeChannelMergerNode","createChannelMergerNodeRenderer","channelMergerNodeConstructor","createNativeChannelSplitterNode","createChannelSplitterNodeRenderer","channelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","createNativeConstantSourceNode","createConstantSourceNodeRenderer","constantSourceNodeConstructor","createNativeConvolverNodeFaker","createNativeConvolverNode","createConvolverNodeRenderer","convolverNodeConstructor","createNativeDelayNode","createDelayNodeRenderer","delayNodeConstructor","createNativeDynamicsCompressorNode","createDynamicsCompressorNodeRenderer","dynamicsCompressorNodeConstructor","createGainNodeRenderer","gainNodeConstructor","createNativeScriptProcessorNode","createNativeIIRFilterNodeFaker","renderNativeOfflineAudioContext","createIIRFilterNodeRenderer","createNativeIIRFilterNode","iIRFilterNodeConstructor","createAudioListener","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","createNativeWaveShaperNode","createNativePannerNodeFaker","createNativePannerNode","createPannerNodeRenderer","pannerNodeConstructor","createNativePeriodicWave","periodicWaveConstructor","nativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeConstructor","isSecureContext","exposeCurrentFrameAndCurrentTime","addAudioWorkletModule","isNativeContext","decodeAudioData","baseAudioContextConstructor","createNativeMediaElementAudioSourceNode","mediaElementAudioSourceNodeConstructor","createNativeMediaStreamAudioDestinationNode","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioSourceNode","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrackAudioSourceNodeConstructor","audioContextConstructor","getUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","connectMultipleOutputs","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createNativeAudioWorkletNodeFaker","createNativeAudioWorkletNode","nativeAudioWorkletNodeConstructor","createAudioWorkletNodeRenderer","audioWorkletNodeConstructor","createNativeOfflineAudioContext","startRendering","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","isSupported","version","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__decorate","decorators","target","desc","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__values","__read","ar","error","__spread","concat","assert","statement","assertRange","gte","lte","Infinity","RangeError","assertContextRunning","isOffline","state","warn","defaultLogger","console","setLogger","logger","log","args","_i","isUndef","arg","isDefined","isFunction","isNumber","isObject","toString","isBoolean","isArray","isString","isNote","test","createAudioContext","createOfflineAudioContext","channels","sampleRate","theWindow","self","hasAudioContext","Ticker","callback","type","updateInterval","_callback","_type","_updateInterval","_createClock","_createWorker","blob","Blob","toFixed","blobUrl","URL","createObjectURL","worker","Worker","onmessage","_worker","_createTimeout","_this","_timeout","setTimeout","_disposeClock","clearTimeout","terminate","set","interval","Math","max","postMessage","configurable","dispose","isAudioParam","isAudioNode","isOfflineAudioContext","isAudioContext","isAudioBuffer","AudioBuffer","noCopy","deepMerge","_a","_b","sources","source","shift","assign","optionsFromArguments","defaults","argsArray","keys","objKey","opts","from","has","some","splice","indexOf","defaultArg","given","fallback","omitFromObject","obj","omit","forEach","prop","Tone","debug","_wasDisposed","getDefaults","TONE_DEBUG_CLASS","GT","a","GTE","EQ","LT","abs","clamp","min","_super","Timeline","_timeline","memory","increasing","add","event","time","valueOf","lastValue","index","_search","diff","remove","param","peek","getAfter","getBefore","len","cancel","after","slice","cancelBefore","previousEvent","beginning","end","midPoint","floor","event_1","nextEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","startTime","endTime","forEachFrom","forEachAtTime","notifyNewContext","onContextInit","cb","notifyCloseContext","onContextClose","Emitter","on","split","eventName","_events","once","boundCallback","off","eventList","emit","mixin","constr","BaseContext","Context","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_context","_latencyHint","latencyHint","lookAhead","_ticker","clockSource","_timeoutLoop","onstatechange","initialize","ctx","createAnalyser","createOscillator","createBufferSource","createBiquadFilter","createBuffer","numberOfChannels","createChannelMerger","numberOfInputs","createChannelSplitter","numberOfOutputs","createConstantSource","createConvolver","createDelay","maxDelayTime","createDynamicsCompressor","createGain","createIIRFilter","feedForward","feedback","createPanner","createPeriodicWave","real","imag","constraints","createStereoPanner","createWaveShaper","createMediaStreamSource","stream","createMediaStreamDestination","audioData","currentTime","_listener","_transport","_draw","_destination","createAudioWorkletNode","rawContext","url","audioWorklet","addModule","workletsAreReady","promises","promise","all","hint","lookAheadValue","now","immediate","resume","close","getConstant","val","buffer","arr","getChannelData","constant","channelCount","channelCountMode","loop","start","firstEvent","fn","timeout","id","clearInterval","setInterval","intervalFn","DummyContext","_numberOfChannels","_length","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_options","_url","_fn","_id","_interval","_val","_d","readOnly","str","writable","noOp","ToneAudioBuffer","onload","reverse","load","catch","onerror","_buffer","getContext","loaded","_reversed","_reverse","doneLoading","audioBuffer","downloads","fromArray","array","isMultidimensional","multiChannelArray","copyToChannel","toMono","chanNum","toArray","outputArray","Float32Array","numChannels_1","channel","channelArray","sample","ret","duration","startSamples","endSamples","retBuffer","subarray","rev","fromUrl","matches","extensions","extension","extensions_1","extensions_1_1","ext","baseUrl","response","arrayBuffer","e_1","match","supportsType","e_1_1","return","replace","endsWith","fetch","ok","document","createElement","canPlayType","OfflineContext","_currentTime","_duration","_renderClock","asynchronous","yieldEvery","render","dummyContext","globalContext","setContext","TONE_SILENCE_LOGGING","prefix","printString","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","A4","ftom","frequency","round","log2","ftomf","mtof","midi","TimeClass","_getExpressions","method","capture","_now","regexp","quantize","quantTo","_secondsToUnits","transport","nextSubdivision","subdiv","percent","subdivision","toNotation","toSeconds","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","quarterTime","_beatsToUnits","quarters","parseFloat","measures","_getTimeSignature","sixteenths","sixteenthString","join","toTicks","_getPPQ","toMidi","toFrequency","TimeBaseClass","units","defaultUnits","_units","_expressions","hz","_frequencyToUnits","_ticksToUnits","parseInt","dot","numericValue","scalar","number","samples","tr","q","total","fromType","_noArg","trim","typeName","quantity","expr","matching","freq","beats","_getBpm","seconds","ticks","bpm","timeSignature","PPQ","toSamples","toMilliseconds","Time","FrequencyClass","setA4","note","pitch","octave","noteNumber","noteToScaleIndex","toLowerCase","transpose","harmonize","intervals","toNote","scaleIndexToNote","cbb","cx","dbb","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","bx","Frequency","TransportTimeClass","TransportTime","ToneWithContext","defaultContext","_getPartialProperties","props","attribute","member","setValueAtTime","StateTimeline","initial","_initial","setStateAtTime","getValueAtTime","getLastState","getNextState","event_2","Param","overridden","_minOutput","_param","_swappable","swappable","input","_initialValue","defaultValue","convert","_minValue","minValue","_maxValue","maxValue","_toType","cancelScheduledValues","_is","_assertRange","_fromType","computedTime","isFinite","JSON","stringify","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","cancelAndHoldAtTime","linearRampToValueAtTime","exponentialRampToValueAtTime","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","setValueCurveAtTime","values","scaling","startingValue","segTime","valueAtTime","sampleTime","rampTo","subdivisions","setParam","t0","v0","v1","exp","t1","ToneAudioNode","_internalChannels","output","_isAudioNode","node","_getInternalNodes","nodeList","_setChannelProperties","channelInterpretation","_getChannelProperties","destination","outputNum","inputNum","toDestination","toMaster","chain","nodes","connectSeries","fan","first","reduce","prev","current","srcNode","dstNode","outputNumber","inputNumber","Gain","_gainNode","OneShotSource","onended","_startTime","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","curve","_startGain","fadeInTime","stop","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","_onended","ToneConstantSource","_source","offset","Signal","override","_constantSource","connectSignal","signal","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","k","sqrt","sol1","ticksToTime","when","timeToTicks","computedDuration","startTicks","TickSignal","TickSource","_state","_tickOffset","setTicksAtTime","pause","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","forEachTickBetween","lastStateEvent","maxStartTime","ceil","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","TimelineValue","initialValue","TicksClass","Ticks","IntervalTimeline","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","parent","results","search","results_1","results_1_1","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","temp","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","low","allNodes_1","traverse","searchAfter","high","_left","_right","height","point","TransportEvent","_eventId","_once","invoke","clear","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","loopEnd","loopStart","swing","swingSubdivision","tickTime","progress","amount","sin","PI","schedule","_addEvent","scheduleRepeat","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","remainingTicks","syncSignal","ratio","computedFreq","ratioSignal","unsyncSignal","syncedSignal","Delay","maxDelayInSeconds","maxDelay","_maxDelay","delayTime","_delayNode","Volume","volume","_unmutedVolume","mute","Destination","unshift","maxChannelCount","Offline","originalContext","bufferPromise","ToneAudioBuffers","_buffers","_loadingCount","urls","_bufferLoaded","every","MidiClass","Midi","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","draw","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","sched","_start","restart","_stop","sync","stateEvent","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","playbackRate","computedOffset","loopDuration","computedDur","Noise","_playbackRate","_noiseBuffers","rate","random","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","UserMedia","open","labelOrId","devices","mediaStreamNode","supported","enumerateDevices","_device","find","device","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","navigator","mediaDevices","getUserMedia","_mediaStream","getAudioTracks","track","filter","kind","active","groupId","generateWaveform","instance","detune","ToneOscillatorNode","_oscillator","setPeriodicWave","periodicWave","Oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","oscillator","_wave","syncFrequency","unsyncFrequency","_getCachedPeriodicWave","oscProps","_periodicWaveCache","description","_phase","arrayA","arrayB","element","isBasicType","cache","wave","_getRealImaginary","partial","exec","fullPartials_1","periodicWaveSize","fftSize","piFactor","cos","_inverseFFT","sum","getInitialValue","twoPi","asArray","SignalOperator","WaveShaper","_shaper","mapping","setMap","normalized","oversample","oversampling","includes","AudioToGain","_norm","x","Multiply","_mult","factor","AMOscillator","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","FMOscillator","modulationIndex","PulseOscillator","_widthGate","_thresh","width","_triangle","FatOscillator","_oscillators","_spread","spread","count","_forEach","osc","start_1","step_1","PWMOscillator","sourceType","_scale","_pulse","modulationFrequency","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc_1","blockTime","sType","mType","Add","_sum","addend","Scale","_add","_min","_max","_setRange","Zero","_gain","LFO","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","_a2g","_scaler","currentMin","currentMax","range","valueMap","propertyKey","newValue","timeRange","Player","_activeSources","Set","_onload","autostart","_onSourceEnd","delete","size","origDuration","implicitEnd","seek","Players","_players","player","stopAll","GrainPlayer","_tick","grainSize","_grainSize","_overlap","overlap","_onstop","Abs","_abs","GainToAudio","Negate","_multiply","Subtract","_neg","subtrahend","GreaterThanZero","GreaterThan","_subtract","_gtz","comparator","Pow","_exponentScaler","_expFunc","_exponent","exponent","ScaleExp","_exp","SyncedSignal","_lastVal","_onTick","_syncedCallback","_anchorValue","Envelope","_sig","attack","decay","sustain","release","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","EnvelopeCurves","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","currentValue","decayValue","decayStart","triggerRelease","triggerAttackRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","j","bounce","In","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","Monophonic","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","Synth","envelope","computedAttack","computedDecay","ModulationSynth","modulation","modulationEnvelope","AMSynth","Filter","_filters","Q","rolloff","_rolloff","rolloffNum","possibilities","cascadingCount","getFrequencyResponse","totalResponse","freqValues","magValues","phaseValues","filterClone","FrequencyEnvelope","_octaves","octaves","_baseFrequency","baseFrequency","MonoSynth","filterEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","inharmRatios","MetalSynth","_freqMultipliers","_amplitude","_highpass","mult","_filterFreqScaler","resonance","freqMult","MembraneSynth","pitchDecay","hertz","maxNote","NoiseSynth","noise","ToneAudioWorklet","workletOptions","onprocessorerror","_audioWorklet","_audioWorkletName","disposed","_worklet","onReady","FeedbackCombFilter","dummyGain","parameters","OnePoleFilter","_frequency","_createFilter","oldFilter","_filter","a0","fq","LowpassCombFilter","_combFilter","_lowpass","dampening","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","_makeVoiceAvailable","activeVoiceIndex","findIndex","activeVoices","firstAvail","_triggerAttack","notes","midiNote","released","_triggerRelease","_scheduleEvent","durationSeconds","sanitizedOptions","releaseAll","Sampler","urlMap","mid","_findClosest","difference","closestNote","ToneEvent","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","prob","variation","reschedulTime","lastEvent","Loop","_event","iterations","iters","Part","events","computedOffset_1","_startNote","at","timeInTicks","_restartEvent","_setAll","attr","_testLoopBoundries","upPatternGen","clampToArraySize","downPatternGen","infiniteGen","gen","alternatingGenerator","directionUp","jumpUp","stepIndex","jumpDown","randomGen","randomIndex","randomOnce","copy","randVal","randomWalk","PatternGenerator","pattern","Pattern","_values","_pattern","_value","Sequence","_part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","Proxy","_rescheduleSequence","sequence","eventOffset","CrossFade","_panner","_split","_g2a","fade","pan","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","LFOEffect","_lfo","depth","AutoFilter","oct","Panner","AutoPanner","Follower","smoothing","_smoothing","AutoWah","_follower","follower","_sweepRange","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","BitCrusher","_bitCrusherWorklet","bits","frequencyReduction","BitCrusherWorklet","Chebyshev","_order","order","_getCoefficient","degree","memo","Split","_splitter","Merge","_merger","StereoEffect","_merge","connectEffectLeft","connectEffectRight","StereoFeedbackEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","Chorus","_depth","_delayTime","_lfoL","_lfoR","_delayNodeL","_delayNodeR","deviation","Distortion","_distortion","distortion","deg","FeedbackEffect","_feedbackGain","FeedbackDelay","PhaseShiftAllpass","offset90","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","coefficients","FrequencyShifter","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_phaseShifter","combFilterTunings","allpassFilterFrequencies","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","StereoXFeedbackEffect","PingPongDelay","_leftDelay","_rightDelay","_rightPreDelay","PitchShift","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","Reverb","_convolver","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","gainNode","renderPromise","MidSideSplit","_midAdd","SQRT1_2","_sideSubtract","side","MidSideMerge","_leftMult","_rightMult","MidSideEffect","_midSideMerge","_midSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","connectEffectMid","connectEffectSide","StereoWidener","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Analyser","_analysers","getValue","analyser","getFloatFrequencyData","getFloatTimeDomainData","frequencyBinCount","smoothingTimeConstant","MeterBase","_analyser","Meter","_rms","normalRange","getLevel","aValues","vals","totalSquared","rms","FFT","DCMeter","Waveform","Solo","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","Channel","_solo","_panVol","muted","_getBus","buses","send","bus","sendKnob","receive","MultibandSplit","_lowMidFilter","lowFrequency","highFrequency","Listener","positionX","listener","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","Panner3D","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","orientationX","orientationY","orientationZ","setPosition","z","setOrientation","Recorder","_recorder","MediaRecorder","mimeType","startPromise","handleStart","removeEventListener","addEventListener","dataPromise","handleData","data","Compressor","_compressor","threshold","knee","reduction","Gate","_gt","_gate","thresh","smoothingTime","Limiter","MidSideCompressor","MultibandCompressor","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Convolver","normalize","buff","norm","Buffer","Buffers","BufferSource","testPromiseSupport","uint32Array","createIndexSizeError","insertElementInSet","predicate","ignoreDuplicates","lmnt","setInternalStateToActive","eventListener","_slicedToArray","_classCallCheck","_createClass","createExtendedExponentialRampToValueAutomationEvent","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","createSetValueCurveAutomationEvent","getTargetValueAtTime","valueAtStartTime","_ref","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","upperIndex","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","factory","isPartOfACycle","getEventListenersOfAudioNode","setInternalStateToPassive","isAudioNodeOutputConnection","outputConnection","isActiveAudioNode","audioNodeOrAudioParam","nativeAudioNodeOrAudioParam","getAudioParamConnections","getNativeAudioParam","wrapEventListener","descriptor","defineProperties","currentTarget","handleEvent","wrapAudioBufferGetChannelDataMethod","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","disconnectNativeAudioNodeFromNativeAudioNode","copyFromChannel","channelNumber","bufferOffset","byteLength","channelData","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","arrays","createInvalidAccessError","overwriteAccessors","createGetter","createSetter","getPrototypeOf","isValidLatencyHint","ReadOnlyMap","_map","entries","filterBuffer","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","computeBufferSize","baseLatency","createUnknownError","isDCCurve","createAbortError","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNodeRenderer","activeInputs","outputs","passiveInputs","renderer","createAddAudioParamConnections","audioParamConnectionsStore","audioParamRenderer","createAddSilentConnection","nativeGainNode","createAddUnrenderedAudioWorkletNode","audioWorkletNode","DEFAULT_OPTIONS","maxDecibels","minDecibels","createAnalyserNodeConstructor","audionNodeConstructor","mergedOptions","nativeAnalyserNode","super","_nativeAnalyserNode","getByteFrequencyData","getByteTimeDomainData","createAnalyserNodeRendererFactory","renderedNativeAnalyserNodes","proxy","nativeOfflineAudioContext","trace","renderedNativeAnalyserNode","async","createAnalyserNode","createAudioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","createAudioBufferSourceNodeConstructor","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","fill","wrappedListener","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeRendererFactory","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioContextConstructor","nativeAudioContext","_baseLatency","_nativeAudioContext","revokeState","mediaElement","mediaStream","mediaStreamTrack","resolvePromise","suspend","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","nativeAudioDestinationNodePromise","createAudioDestinationNode","createAudioListenerFactory","nativeListener","channelMergerNode","scriptProcessorNode","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","onaudioprocess","inputBuffer","orientation","positon","createFakeAudioParams","createAudioParamFactory","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","nativeAudioParam","automationEventList","flush","previousLastEvent","currentLastEvent","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","outputChannelCount","parameterData","processorOptions","createChannelCount","createAudioWorkletNodeConstructor","nodeNameToProcessorConstructorMap","processorConstructor","nativeAudioWorkletNode","nm","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","port","createBaseAudioContextConstructor","_nativeContext","moduleURL","disableNormalization","successCallback","errorCallback","createBiquadFilterNodeConstructor","nativeBiquadFilterNode","_Q","_detune","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRendererFactory","renderedNativeAudioNodes","renderedNativeAudioNode","createAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRendererFactory","createConnectAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","nativeConvolverNode","_nativeConvolverNode","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDelayNodeConstructor","nativeDelayNode","createDelayNodeRendererFactory","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDeleteUnrenderedAudioWorkletNode","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","destinationOrOutput","createDynamicsCompressorNodeConstructor","nativeDynamicsCompressorNode","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createEncodingError","createEvaluateSource","SyntaxError","head","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","revokeObjectURL","message","src","lineno","colno","location","href","appendChild","createEventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","dispatchEvent","createExposeCurrentFrameAndCurrentTime","currentFrame","createFetchSource","text","createGainNodeConstructor","createGainNodeRendererFactory","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGetAudioNodeRenderer","audioNodeConnections","createGetAudioParamRenderer","audioParamConnections","createGetBackupNativeContext","backupNativeContext","bckpNtveCntxt","createGetNativeContext","contextStore","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createIIRFilterNodeRendererFactory","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","ntvCntxt","partialOfflineAudioContext","renderedBuffer","filteredBuffer","filterFullBuffer","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","AudioNode","createIsNativeAudioParam","AudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","createIsSupportedPromise","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","createMediaElementAudioSourceNodeConstructor","nativeMediaElementAudioSourceNode","_mediaElement","_nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","createMediaStreamAudioSourceNodeConstructor","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","_onstatechange","nativeOnStateChange","createMinimalOfflineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_nativeOfflineAudioContext","createMonitorConnections","whenConnected","whenDisconnected","connections","wasDisconnected","connection","wasConnected","isDisconnected","createNativeAudioBufferConstructor","createNativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","createNativeAudioNodeFactory","factoryFunction","createNativeAudioWorkletNodeConstructor","AudioWorkletNode","createNativeBiquadFilterNodeFactory","createNativeChannelMergerNodeFactory","nativeChannelMergerNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","audioBufferSourceNode","nativeConstantSourceNodeFaker","createNativeConvolverNodeFactory","createNativeConvolverNodeFakerFactory","convolverNode","nativeConvolverNodeFaker","createNativeDelayNodeFactory","createNativeDynamicsCompressorNodeFactory","createNativeGainNodeFactory","createNativeIIRFilterNodeFactory","divide","denominator","evaluatePolynomial","coefficient","createNativeIIRFilterNodeFakerFactory","bufferSize","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","nativeIIRFilterNodeFaker","omega","atan2","createNativeMediaElementAudioSourceNodeFactory","ntvDCntxt","createMediaElementSource","createNativeMediaStreamAudioDestinationNodeFactory","createNativeMediaStreamAudioSourceNodeFactory","audioStreamTracks","filteredAudioStreamTracks","sort","MediaStream","createNativeMediaStreamTrackAudioSourceNodeFactory","createMediaStreamTrackSource","createNativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOscillatorNodeFactory","nativeOscillatorNode","createNativePannerNodeFactory","nativePannerNode","createNativePannerNodeFakerFactory","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePeriodicWaveFactory","wrappedImag","wrappedReal","createNativeScriptProcessorNodeFactory","numberOfInputChannels","numberOfOutputChannels","createScriptProcessor","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","CURVE_SIZE","channelSplitterNode","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","connectGraph","disconnectGraph","isConnected","createNativeWaveShaperNodeFactory","nativeWaveShaperNode","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","outputGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","createOscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createPannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeRendererFactory","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPeriodicWaveConstructor","periodicWaveStore","PeriodicWave","createRenderAutomation","getAudioParamRenderer","replay","createRenderInputsOfAudioNode","nextTrace","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createStartRendering","createStereoPannerNodeConstructor","_pan","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioBufferCopyChannelMethodsSubarraySupport","createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","offlineAudioContext","createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","createTestAudioContextCloseMethodSupport","audioContext","isAudioContextClosable","createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","isPending","createTestAudioContextOptionsSupport","createTestAudioNodeConnectMethodSupport","createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","createTestAudioWorkletProcessorNoOutputsSupport","isCallingProcess","createTestChannelMergerNodeChannelCountSupport","createTestConstantSourceNodeAccurateSchedulingSupport","Number","POSITIVE_INFINITY","createTestConvolverNodeBufferReassignabilitySupport","createTestIsSecureContextSupport","createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","createTestOfflineAudioContextCurrentTimeSupport","createTestStereoPannerNodeDefaultValueSupport","stereoPanner","createWaveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","createWrapChannelMergerNode","monitorConnectionsFunction","ArrayBuffer","port1","port2","MessageChannel","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","isAudioWorkletNode","deleteEventListenerOfAudioNode","isPassiveAudioNode","pickElementFromSet","matchingElements","matchingElement","setInternalStateToPassiveWhenNecessary","testAudioNodeDisconnectMethodSupport","analyzer","dummy","ones","chnnlDt","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","addActiveInputConnectionToAudioNode","activeInputConnection","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioNode","passiveInputConnections","passiveInputConnection","addPassiveInputConnectionToAudioParam","deletePassiveInputConnectionToAudioNode","matchingConnection","deletePassiveInputConnectionToAudioParam","addConnectionToAudioNodeOfAudioContext","eventListeners","isActive","partialConnection","deleteActiveInputConnectionToAudioNode","addConnectionToAudioParamOfAudioContext","deleteActiveInputConnectionToAudioParam","deleteActiveInputConnection","activeInputConnections","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","createAudioNodeConstructor","addAudioNodeConnections","createIncrementCycleCounter","decrementCycleCounter","detectCycles","_nativeAudioNode","returnValue","connectionsToDestination","filteredConnections","wrapAudioNodeDisconnectMethod","auxiliaryGainNodes","addConnectionToAudioNodeOfOfflineAudioContext","addConnectionToAudioParamOfOfflineAudioContext","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioWorkletProcessorPromise","audioWorkletNodeOptions","onmessageerror","cloneAudioWorkletNodeOptions","createNativeAudioWorkletNodeFakerFactory","numberOfParameters","parameterDescriptors","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessor","nodeToProcessorMap","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","prmtrs","disconnectOutputsGraph","outputChannelSplitterNodeOutput","outputChannelMergerNode","potentiallyEmptyInputs","activeSourceFlag","process","ErrorEvent","disconnectFakeGraph","connectFakeGraph","createNativeAudioBufferSourceNodeFactory","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodDurationParameterSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","stopTime","actualStartTime","durationInBufferTime","wrapAudioBufferSourceNodeStartMethodDurationParameter","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","createNativeAnalyserNodeFactory","byteTimeDomainData","Uint8Array","wrapAnalyserNodeGetFloatTimeDomainDataMethod","handler","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","verifyProcessorCtor","processorCtor","constructible","isConstructible","createAddAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","credentials","absoluteUrl","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","rslvdRqstsFCntxt","ngngRqstsFCntxt","createDetectCycles","nextLink","isDelayNode","mergedCycles","nestedCycles","createDecodeAudioData","detachedArrayBuffers","anyContext","complete","detachArrayBuffer","fail","createNativeAudioWorkletNodeFactory","testClonabilityOfAudioWorkletNodeOptions","processBuffer","processedBuffer","getAudioWorkletProcessor","createAudioWorkletNodeRendererFactory","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","createNativeChannelSplitterNodeFactory","nativeChannelSplitterNode","wrapChannelSplitterNode","createIIRFilterNodeConstructor","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","__await","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","iter","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_arr","_n","_e","_s","arrayLikeToArray","minLen","arr2","Constructor","_defineProperties","protoProps","staticProps","synth","check","querySelectorAll","play","querySelector","rows","tempo","checked","spans","span","classList","ToneNote","require","synthNote","gainNote","c4","cSh4","d4","dSh4","e4","f4","fSh4","g4","gSh4","a4","aSh4","c5","cSh5","d5","dSh5","e5","f5","fSh5","g5","gSh5","a5","aSh5","c6"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 687);\n","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap(); // This clunky name is borrowed from the spec. :-)\n\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n  assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n  return nativeAudioNode.context === nativeContext;\n};","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n  const value = options[option];\n\n  if (value !== undefined && value !== nativeAudioNode[option]) {\n    nativeAudioNode[option] = value;\n  }\n};","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n  const value = options[audioParam];\n\n  if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n    nativeAudioNode[audioParam].value = value;\n  }\n};","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = audioNode => {\n  return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};","export const createInvalidStateError = () => {\n  try {\n    return new DOMException('', 'InvalidStateError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 11;\n    err.name = 'InvalidStateError';\n    return err;\n  }\n};","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = audioNode => {\n  return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};","export const getValueForKey = (map, key) => {\n  const value = map.get(key);\n\n  if (value === undefined) {\n    throw new Error('A value with the given key could not be found.');\n  }\n\n  return value;\n};","export const createNotSupportedError = () => {\n  try {\n    return new DOMException('', 'NotSupportedError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 9;\n    err.name = 'NotSupportedError';\n    return err;\n  }\n};","export const interceptConnections = (original, interceptor) => {\n  original.connect = interceptor.connect.bind(interceptor);\n  original.disconnect = interceptor.disconnect.bind(interceptor);\n  return original;\n};","export const isNativeAudioNodeFaker = nativeAudioNodeOrNativeAudioNodeFaker => {\n  return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupNativeContext } from './factories/get-backup-native-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioNodeFactory } from './factories/native-audio-node-factory';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNodeFactory } from './factories/native-biquad-filter-node-factory';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNodeFactory } from './factories/native-channel-splitter-node-factory';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeConvolverNodeFakerFactory } from './factories/native-convolver-node-faker-factory';\nimport { createNativeDelayNodeFactory } from './factories/native-delay-node-factory';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNodeFactory } from './factories/native-gain-node-factory';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNodeFactory } from './factories/native-media-element-audio-source-node-factory';\nimport { createNativeMediaStreamAudioDestinationNodeFactory } from './factories/native-media-stream-audio-destination-node-factory';\nimport { createNativeMediaStreamAudioSourceNodeFactory } from './factories/native-media-stream-audio-source-node-factory';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNodeFactory } from './factories/native-script-processor-node-factory';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './factories/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { createTestAudioBufferSourceNodeStartMethodDurationParameterSupport } from './factories/test-audio-buffer-source-node-start-method-duration-parameter-support';\nimport { createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './factories/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst getBackupNativeContext = createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = createNativeAudioNodeFactory(getBackupNativeContext);\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst auxiliaryGainNodeStore = new WeakMap();\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst createNativeGainNode = createNativeGainNodeFactory(createNativeAudioNode);\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor), createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createNativeBiquadFilterNode = createNativeBiquadFilterNodeFactory(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeChannelSplitterNode = createNativeChannelSplitterNodeFactory(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNodeFaker = createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDelayNode = createNativeDelayNodeFactory(createNativeAudioNode);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeScriptProcessorNode = createNativeScriptProcessorNodeFactory(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(getBackupNativeContext);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet());\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window); // The addAudioWorkletModule() function is only available in a SecureContext.\n\nexport const addAudioWorkletModule = isSecureContext ? createAddAudioWorkletModule(createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), // @todo window is guaranteed to be defined because isSecureContext checks that as well.\nwindow) : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext); // The AudioWorkletNode constructor is only available in a SecureContext.\n\nconst audioWorkletNodeConstructor = isSecureContext ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);","export var version = \"14.6.4\";","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nexport var __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n;\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result.default = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}\nexport function __classPrivateFieldGet(receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n}","import { __read, __spread } from \"tslib\";\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\n\nexport function assert(statement, error) {\n  if (!statement) {\n    throw new Error(error);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertRange(value, gte, lte) {\n  if (lte === void 0) {\n    lte = Infinity;\n  }\n\n  if (!(gte <= value && value <= lte)) {\n    throw new RangeError(\"Value must be within [\" + gte + \", \" + lte + \"], got: \" + value);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\n\nexport function assertContextRunning(context) {\n  // add a warning if the context is not started\n  if (!context.isOffline && context.state !== \"running\") {\n    warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n  }\n}\n/**\n * The default logger is the console\n */\n\nvar defaultLogger = console;\n/**\n * Set the logging interface\n */\n\nexport function setLogger(logger) {\n  defaultLogger = logger;\n}\n/**\n * Log anything\n */\n\nexport function log() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  defaultLogger.log.apply(defaultLogger, __spread(args));\n}\n/**\n * Warn anything\n */\n\nexport function warn() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  defaultLogger.warn.apply(defaultLogger, __spread(args));\n}","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n  return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\n\nexport function isDefined(arg) {\n  return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\n\nexport function isFunction(arg) {\n  return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\n\nexport function isNumber(arg) {\n  return typeof arg === \"number\";\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\n\nexport function isObject(arg) {\n  return Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object;\n}\n/**\n * Test if the argument is a boolean.\n */\n\nexport function isBoolean(arg) {\n  return typeof arg === \"boolean\";\n}\n/**\n * Test if the argument is an Array\n */\n\nexport function isArray(arg) {\n  return Array.isArray(arg);\n}\n/**\n * Test if the argument is a string.\n */\n\nexport function isString(arg) {\n  return typeof arg === \"string\";\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\n\nexport function isNote(arg) {\n  return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\n\nexport function createAudioContext() {\n  return new stdAudioContext();\n}\n/**\n * Create a new OfflineAudioContext\n */\n\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n  return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\n\nexport var theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\n\nexport var hasAudioContext = theWindow && (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n  assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\"); // @ts-ignore\n\n  return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\n\nexport { isSupported as supported } from \"standardized-audio-context\";","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nvar Ticker =\n/** @class */\nfunction () {\n  function Ticker(callback, type, updateInterval) {\n    this._callback = callback;\n    this._type = type;\n    this._updateInterval = updateInterval; // create the clock source for the first time\n\n    this._createClock();\n  }\n  /**\n   * Generate a web worker\n   */\n\n\n  Ticker.prototype._createWorker = function () {\n    var blob = new Blob([\n    /* javascript */\n    \"\\n\\t\\t\\t// the initial timeout time\\n\\t\\t\\tlet timeoutTime =  \" + (this._updateInterval * 1000).toFixed(1) + \";\\n\\t\\t\\t// onmessage callback\\n\\t\\t\\tself.onmessage = function(msg){\\n\\t\\t\\t\\ttimeoutTime = parseInt(msg.data);\\n\\t\\t\\t};\\n\\t\\t\\t// the tick function which posts a message\\n\\t\\t\\t// and schedules a new tick\\n\\t\\t\\tfunction tick(){\\n\\t\\t\\t\\tsetTimeout(tick, timeoutTime);\\n\\t\\t\\t\\tself.postMessage('tick');\\n\\t\\t\\t}\\n\\t\\t\\t// call tick initially\\n\\t\\t\\ttick();\\n\\t\\t\\t\"], {\n      type: \"text/javascript\"\n    });\n    var blobUrl = URL.createObjectURL(blob);\n    var worker = new Worker(blobUrl);\n    worker.onmessage = this._callback.bind(this);\n    this._worker = worker;\n  };\n  /**\n   * Create a timeout loop\n   */\n\n\n  Ticker.prototype._createTimeout = function () {\n    var _this = this;\n\n    this._timeout = setTimeout(function () {\n      _this._createTimeout();\n\n      _this._callback();\n    }, this._updateInterval * 1000);\n  };\n  /**\n   * Create the clock source.\n   */\n\n\n  Ticker.prototype._createClock = function () {\n    if (this._type === \"worker\") {\n      try {\n        this._createWorker();\n      } catch (e) {\n        // workers not supported, fallback to timeout\n        this._type = \"timeout\";\n\n        this._createClock();\n      }\n    } else if (this._type === \"timeout\") {\n      this._createTimeout();\n    }\n  };\n  /**\n   * Clean up the current clock source\n   */\n\n\n  Ticker.prototype._disposeClock = function () {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = 0;\n    }\n\n    if (this._worker) {\n      this._worker.terminate();\n\n      this._worker.onmessage = null;\n    }\n  };\n\n  Object.defineProperty(Ticker.prototype, \"updateInterval\", {\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get: function () {\n      return this._updateInterval;\n    },\n    set: function (interval) {\n      this._updateInterval = Math.max(interval, 128 / 44100);\n\n      if (this._type === \"worker\") {\n        this._worker.postMessage(Math.max(interval * 1000, 1));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Ticker.prototype, \"type\", {\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._disposeClock();\n\n      this._type = type;\n\n      this._createClock();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Ticker.prototype.dispose = function () {\n    this._disposeClock();\n  };\n\n  return Ticker;\n}();\n\nexport { Ticker };","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\n\nexport function isAudioParam(arg) {\n  return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\n\nexport function isAudioNode(arg) {\n  return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\n\nexport function isOfflineAudioContext(arg) {\n  return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\n\nexport function isAudioContext(arg) {\n  return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\n\nexport function isAudioBuffer(arg) {\n  return arg instanceof AudioBuffer;\n}","import { __read, __spread } from \"tslib\";\nimport { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\n\nfunction noCopy(key, arg) {\n  return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\nexport function deepMerge(target) {\n  var _a, _b;\n\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (noCopy(key, source[key])) {\n        target[key] = source[key];\n      } else if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, (_a = {}, _a[key] = {}, _a));\n        }\n\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n      }\n    }\n  } // @ts-ignore\n\n\n  return deepMerge.apply(void 0, __spread([target], sources));\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\n\nexport function deepEquals(arrayA, arrayB) {\n  return arrayA.length === arrayB.length && arrayA.every(function (element, index) {\n    return arrayB[index] === element;\n  });\n}\n/**\n * Convert an args array into an object.\n */\n\nexport function optionsFromArguments(defaults, argsArray, keys, objKey) {\n  var _a;\n\n  if (keys === void 0) {\n    keys = [];\n  }\n\n  var opts = {};\n  var args = Array.from(argsArray); // if the first argument is an object and has an object key\n\n  if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n    // if it's not part of the defaults\n    var partOfDefaults = Object.keys(args[0]).some(function (key) {\n      return Reflect.has(defaults, key);\n    });\n\n    if (!partOfDefaults) {\n      // merge that key\n      deepMerge(opts, (_a = {}, _a[objKey] = args[0], _a)); // remove the obj key from the keys\n\n      keys.splice(keys.indexOf(objKey), 1); // shift the first argument off\n\n      args.shift();\n    }\n  }\n\n  if (args.length === 1 && isObject(args[0])) {\n    deepMerge(opts, args[0]);\n  } else {\n    for (var i = 0; i < keys.length; i++) {\n      if (isDefined(args[i])) {\n        opts[keys[i]] = args[i];\n      }\n    }\n  }\n\n  return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\n\nexport function getDefaultsFromInstance(instance) {\n  return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\n\nexport function defaultArg(given, fallback) {\n  if (isUndef(given)) {\n    return fallback;\n  } else {\n    return given;\n  }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\n\nexport function omitFromObject(obj, omit) {\n  omit.forEach(function (prop) {\n    if (Reflect.has(obj, prop)) {\n      delete obj[prop];\n    }\n  });\n  return obj;\n}","import { __read, __spread } from \"tslib\";\n/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\n\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @constructor\n */\n\nvar Tone =\n/** @class */\nfunction () {\n  function Tone() {\n    //-------------------------------------\n    // \tDEBUGGING\n    //-------------------------------------\n\n    /**\n     * Set this debug flag to log all events that happen in this class.\n     */\n    this.debug = false; //-------------------------------------\n    // \tDISPOSING\n    //-------------------------------------\n\n    /**\n     * Indicates if the instance was disposed\n     */\n\n    this._wasDisposed = false;\n  }\n  /**\n   * Returns all of the default options belonging to the class.\n   */\n\n\n  Tone.getDefaults = function () {\n    return {};\n  };\n  /**\n   * Prints the outputs to the console log for debugging purposes.\n   * Prints the contents only if either the object has a property\n   * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n   * is set to the name of the class.\n   * @example\n   * const osc = new Tone.Oscillator();\n   * // prints all logs originating from this oscillator\n   * osc.debug = true;\n   * // calls to start/stop will print in the console\n   * osc.start();\n   */\n\n\n  Tone.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    } // if the object is either set to debug = true\n    // or if there is a string on the Tone.global.with the class name\n\n\n    if (this.debug || theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS) {\n      log.apply(void 0, __spread([this], args));\n    }\n  };\n  /**\n   * disconnect and dispose.\n   */\n\n\n  Tone.prototype.dispose = function () {\n    this._wasDisposed = true;\n    return this;\n  };\n\n  Object.defineProperty(Tone.prototype, \"disposed\", {\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get: function () {\n      return this._wasDisposed;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Convert the class to a string\n   * @example\n   * const osc = new Tone.Oscillator();\n   * console.log(osc.toString());\n   */\n\n  Tone.prototype.toString = function () {\n    return this.name;\n  };\n  /**\n   * The version number semver\n   */\n\n\n  Tone.version = version;\n  return Tone;\n}();\n\nexport { Tone };","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nvar EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\n\nexport function GT(a, b) {\n  return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\n\nexport function GTE(a, b) {\n  return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\n\nexport function LT(a, b) {\n  return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\n\nexport function EQ(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\n\nexport function clamp(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}","import { __extends } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\n\nvar Timeline =\n/** @class */\nfunction (_super) {\n  __extends(Timeline, _super);\n\n  function Timeline() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"Timeline\";\n    /**\n     * The array of scheduled timeline events\n     */\n\n    _this._timeline = [];\n    var options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n    _this.memory = options.memory;\n    _this.increasing = options.increasing;\n    return _this;\n  }\n\n  Timeline.getDefaults = function () {\n    return {\n      memory: Infinity,\n      increasing: false\n    };\n  };\n\n  Object.defineProperty(Timeline.prototype, \"length\", {\n    /**\n     * The number of items in the timeline.\n     */\n    get: function () {\n      return this._timeline.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n   * @param event  The event object to insert into the timeline.\n   */\n\n  Timeline.prototype.add = function (event) {\n    // the event needs to have a time attribute\n    assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n    event.time = event.time.valueOf();\n\n    if (this.increasing && this.length) {\n      var lastValue = this._timeline[this.length - 1];\n      assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\n      this._timeline.push(event);\n    } else {\n      var index = this._search(event.time);\n\n      this._timeline.splice(index + 1, 0, event);\n    } // if the length is more than the memory, remove the previous ones\n\n\n    if (this.length > this.memory) {\n      var diff = this.length - this.memory;\n\n      this._timeline.splice(0, diff);\n    }\n\n    return this;\n  };\n  /**\n   * Remove an event from the timeline.\n   * @param  {Object}  event  The event object to remove from the list.\n   * @returns {Timeline} this\n   */\n\n\n  Timeline.prototype.remove = function (event) {\n    var index = this._timeline.indexOf(event);\n\n    if (index !== -1) {\n      this._timeline.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * Get the nearest event whose time is less than or equal to the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.get = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    var index = this._search(time, param);\n\n    if (index !== -1) {\n      return this._timeline[index];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Return the first event in the timeline without removing it\n   * @returns {Object} The first event object\n   */\n\n\n  Timeline.prototype.peek = function () {\n    return this._timeline[0];\n  };\n  /**\n   * Return the first event in the timeline and remove it\n   */\n\n\n  Timeline.prototype.shift = function () {\n    return this._timeline.shift();\n  };\n  /**\n   * Get the event which is scheduled after the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.getAfter = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    var index = this._search(time, param);\n\n    if (index + 1 < this._timeline.length) {\n      return this._timeline[index + 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get the event before the event at the given time.\n   * @param  time  The time to query.\n   */\n\n\n  Timeline.prototype.getBefore = function (time) {\n    var len = this._timeline.length; // if it's after the last item, return the last item\n\n    if (len > 0 && this._timeline[len - 1].time < time) {\n      return this._timeline[len - 1];\n    }\n\n    var index = this._search(time);\n\n    if (index - 1 >= 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Cancel events at and after the given time\n   * @param  after  The time to query.\n   */\n\n\n  Timeline.prototype.cancel = function (after) {\n    if (this._timeline.length > 1) {\n      var index = this._search(after);\n\n      if (index >= 0) {\n        if (EQ(this._timeline[index].time, after)) {\n          // get the first item with that time\n          for (var i = index; i >= 0; i--) {\n            if (EQ(this._timeline[i].time, after)) {\n              index = i;\n            } else {\n              break;\n            }\n          }\n\n          this._timeline = this._timeline.slice(0, index);\n        } else {\n          this._timeline = this._timeline.slice(0, index + 1);\n        }\n      } else {\n        this._timeline = [];\n      }\n    } else if (this._timeline.length === 1) {\n      // the first item's time\n      if (GTE(this._timeline[0].time, after)) {\n        this._timeline = [];\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Cancel events before or equal to the given time.\n   * @param  time  The time to cancel before.\n   */\n\n\n  Timeline.prototype.cancelBefore = function (time) {\n    var index = this._search(time);\n\n    if (index >= 0) {\n      this._timeline = this._timeline.slice(index + 1);\n    }\n\n    return this;\n  };\n  /**\n   * Returns the previous event if there is one. null otherwise\n   * @param  event The event to find the previous one of\n   * @return The event right before the given event\n   */\n\n\n  Timeline.prototype.previousEvent = function (event) {\n    var index = this._timeline.indexOf(event);\n\n    if (index > 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Does a binary search on the timeline array and returns the\n   * nearest event index whose time is after or equal to the given time.\n   * If a time is searched before the first index in the timeline, -1 is returned.\n   * If the time is after the end, the index of the last item is returned.\n   */\n\n\n  Timeline.prototype._search = function (time, param) {\n    if (param === void 0) {\n      param = \"time\";\n    }\n\n    if (this._timeline.length === 0) {\n      return -1;\n    }\n\n    var beginning = 0;\n    var len = this._timeline.length;\n    var end = len;\n\n    if (len > 0 && this._timeline[len - 1][param] <= time) {\n      return len - 1;\n    }\n\n    while (beginning < end) {\n      // calculate the midpoint for roughly equal partition\n      var midPoint = Math.floor(beginning + (end - beginning) / 2);\n      var event_1 = this._timeline[midPoint];\n      var nextEvent = this._timeline[midPoint + 1];\n\n      if (EQ(event_1[param], time)) {\n        // choose the last one that has the same time\n        for (var i = midPoint; i < this._timeline.length; i++) {\n          var testEvent = this._timeline[i];\n\n          if (EQ(testEvent[param], time)) {\n            midPoint = i;\n          } else {\n            break;\n          }\n        }\n\n        return midPoint;\n      } else if (LT(event_1[param], time) && GT(nextEvent[param], time)) {\n        return midPoint;\n      } else if (GT(event_1[param], time)) {\n        // search lower\n        end = midPoint;\n      } else {\n        // search upper\n        beginning = midPoint + 1;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Internal iterator. Applies extra safety checks for\n   * removing items from the array.\n   */\n\n\n  Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n    if (lowerBound === void 0) {\n      lowerBound = 0;\n    }\n\n    if (upperBound === void 0) {\n      upperBound = this._timeline.length - 1;\n    }\n\n    this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n  };\n  /**\n   * Iterate over everything in the array\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEach = function (callback) {\n    this._iterate(callback);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at or before the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachBefore = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var upperBound = this._search(time);\n\n    if (upperBound !== -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array after the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachAfter = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var lowerBound = this._search(time);\n\n    this._iterate(callback, lowerBound + 1);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array between the startTime and endTime.\n   * The timerange is inclusive of the startTime, but exclusive of the endTime.\n   * range = [startTime, endTime).\n   * @param  startTime The time to check if items are before\n   * @param  endTime The end of the test interval.\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachBetween = function (startTime, endTime, callback) {\n    var lowerBound = this._search(startTime);\n\n    var upperBound = this._search(endTime);\n\n    if (lowerBound !== -1 && upperBound !== -1) {\n      if (this._timeline[lowerBound].time !== startTime) {\n        lowerBound += 1;\n      } // exclusive of the end time\n\n\n      if (this._timeline[upperBound].time === endTime) {\n        upperBound -= 1;\n      }\n\n      this._iterate(callback, lowerBound, upperBound);\n    } else if (lowerBound === -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at or after the given time. Similar to\n   * forEachAfter, but includes the item(s) at the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachFrom = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var lowerBound = this._search(time); // work backwards until the event time is less than time\n\n\n    while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n      lowerBound--;\n    }\n\n    this._iterate(callback, lowerBound + 1);\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array at the given time\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  Timeline.prototype.forEachAtTime = function (time, callback) {\n    // iterate over the items in reverse so that removing an item doesn't break things\n    var upperBound = this._search(time);\n\n    if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n      var lowerBound = upperBound;\n\n      for (var i = upperBound; i >= 0; i--) {\n        if (EQ(this._timeline[i].time, time)) {\n          lowerBound = i;\n        } else {\n          break;\n        }\n      }\n\n      this._iterate(function (event) {\n        callback(event);\n      }, lowerBound, upperBound);\n    }\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Timeline.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._timeline = [];\n    return this;\n  };\n\n  return Timeline;\n}(Tone);\n\nexport { Timeline };","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\n\nexport function onContextInit(cb) {\n  notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\n\nexport function initializeContext(ctx) {\n  // add any additional modules\n  notifyNewContext.forEach(function (cb) {\n    return cb(ctx);\n  });\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\n\nvar notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\n\nexport function onContextClose(cb) {\n  notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n  // add any additional modules\n  notifyCloseContext.forEach(function (cb) {\n    return cb(ctx);\n  });\n}","import { __extends, __read, __spread } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\n\nvar Emitter =\n/** @class */\nfunction (_super) {\n  __extends(Emitter, _super);\n\n  function Emitter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Emitter\";\n    return _this;\n  }\n  /**\n   * Bind a callback to a specific event.\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n\n\n  Emitter.prototype.on = function (event, callback) {\n    var _this = this; // split the event\n\n\n    var events = event.split(/\\W+/);\n    events.forEach(function (eventName) {\n      if (isUndef(_this._events)) {\n        _this._events = {};\n      }\n\n      if (!_this._events.hasOwnProperty(eventName)) {\n        _this._events[eventName] = [];\n      }\n\n      _this._events[eventName].push(callback);\n    });\n    return this;\n  };\n  /**\n   * Bind a callback which is only invoked once\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n\n\n  Emitter.prototype.once = function (event, callback) {\n    var _this = this;\n\n    var boundCallback = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      } // invoke the callback\n\n\n      callback.apply(void 0, __spread(args)); // remove the event\n\n      _this.off(event, boundCallback);\n    };\n\n    this.on(event, boundCallback);\n    return this;\n  };\n  /**\n   * Remove the event listener.\n   * @param  event     The event to stop listening to.\n   * @param  callback  The callback which was bound to the event with Emitter.on.\n   *                   If no callback is given, all callbacks events are removed.\n   */\n\n\n  Emitter.prototype.off = function (event, callback) {\n    var _this = this;\n\n    var events = event.split(/\\W+/);\n    events.forEach(function (eventName) {\n      if (isUndef(_this._events)) {\n        _this._events = {};\n      }\n\n      if (_this._events.hasOwnProperty(event)) {\n        if (isUndef(callback)) {\n          _this._events[event] = [];\n        } else {\n          var eventList = _this._events[event];\n\n          for (var i = 0; i < eventList.length; i++) {\n            if (eventList[i] === callback) {\n              eventList.splice(i, 1);\n            }\n          }\n        }\n      }\n    });\n    return this;\n  };\n  /**\n   * Invoke all of the callbacks bound to the event\n   * with any arguments passed in.\n   * @param  event  The name of the event.\n   * @param args The arguments to pass to the functions listening.\n   */\n\n\n  Emitter.prototype.emit = function (event) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (this._events) {\n      if (this._events.hasOwnProperty(event)) {\n        var eventList = this._events[event].slice(0);\n\n        for (var i = 0, len = eventList.length; i < len; i++) {\n          eventList[i].apply(this, args);\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Add Emitter functions (on/off/emit) to the object\n   */\n\n\n  Emitter.mixin = function (constr) {\n    // instance._events = {};\n    [\"on\", \"once\", \"off\", \"emit\"].forEach(function (name) {\n      var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n      Object.defineProperty(constr.prototype, name, property);\n    });\n  };\n  /**\n   * Clean up\n   */\n\n\n  Emitter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events = undefined;\n    return this;\n  };\n\n  return Emitter;\n}(Tone);\n\nexport { Emitter };","import { __extends } from \"tslib\";\nimport { Emitter } from \"../util/Emitter\";\n\nvar BaseContext =\n/** @class */\nfunction (_super) {\n  __extends(BaseContext, _super);\n\n  function BaseContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isOffline = false;\n    return _this;\n  }\n\n  return BaseContext;\n}(Emitter);\n\nexport { BaseContext };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\n\nvar Context =\n/** @class */\nfunction (_super) {\n  __extends(Context, _super);\n\n  function Context() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"Context\";\n    /**\n     * An object containing all of the constants AudioBufferSourceNodes\n     */\n\n    _this._constants = new Map();\n    /**\n     * All of the setTimeout events.\n     */\n\n    _this._timeouts = new Timeline();\n    /**\n     * The timeout id counter\n     */\n\n    _this._timeoutIds = 0;\n    /**\n     * Private indicator if the context has been initialized\n     */\n\n    _this._initialized = false;\n    /**\n     * Indicates if the context is an OfflineAudioContext or an AudioContext\n     */\n\n    _this.isOffline = false; //--------------------------------------------\n    // AUDIO WORKLET\n    //--------------------------------------------\n\n    /**\n     * Maps a module name to promise of the addModule method\n     */\n\n    _this._workletModules = new Map();\n    var options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n\n    if (options.context) {\n      _this._context = options.context;\n    } else {\n      _this._context = createAudioContext();\n    }\n\n    _this._latencyHint = options.latencyHint;\n    _this.lookAhead = options.lookAhead;\n    _this._ticker = new Ticker(_this.emit.bind(_this, \"tick\"), options.clockSource, options.updateInterval);\n\n    _this.on(\"tick\", _this._timeoutLoop.bind(_this)); // fwd events from the context\n\n\n    _this._context.onstatechange = function () {\n      _this.emit(\"statechange\", _this.state);\n    };\n\n    return _this;\n  }\n\n  Context.getDefaults = function () {\n    return {\n      clockSource: \"worker\",\n      latencyHint: \"interactive\",\n      lookAhead: 0.1,\n      updateInterval: 0.05\n    };\n  };\n  /**\n   * Finish setting up the context. **You usually do not need to do this manually.**\n   */\n\n\n  Context.prototype.initialize = function () {\n    if (!this._initialized) {\n      // add any additional modules\n      initializeContext(this);\n      this._initialized = true;\n    }\n\n    return this;\n  }; //---------------------------\n  // BASE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  Context.prototype.createAnalyser = function () {\n    return this._context.createAnalyser();\n  };\n\n  Context.prototype.createOscillator = function () {\n    return this._context.createOscillator();\n  };\n\n  Context.prototype.createBufferSource = function () {\n    return this._context.createBufferSource();\n  };\n\n  Context.prototype.createBiquadFilter = function () {\n    return this._context.createBiquadFilter();\n  };\n\n  Context.prototype.createBuffer = function (numberOfChannels, length, sampleRate) {\n    return this._context.createBuffer(numberOfChannels, length, sampleRate);\n  };\n\n  Context.prototype.createChannelMerger = function (numberOfInputs) {\n    return this._context.createChannelMerger(numberOfInputs);\n  };\n\n  Context.prototype.createChannelSplitter = function (numberOfOutputs) {\n    return this._context.createChannelSplitter(numberOfOutputs);\n  };\n\n  Context.prototype.createConstantSource = function () {\n    return this._context.createConstantSource();\n  };\n\n  Context.prototype.createConvolver = function () {\n    return this._context.createConvolver();\n  };\n\n  Context.prototype.createDelay = function (maxDelayTime) {\n    return this._context.createDelay(maxDelayTime);\n  };\n\n  Context.prototype.createDynamicsCompressor = function () {\n    return this._context.createDynamicsCompressor();\n  };\n\n  Context.prototype.createGain = function () {\n    return this._context.createGain();\n  };\n\n  Context.prototype.createIIRFilter = function (feedForward, feedback) {\n    // @ts-ignore\n    return this._context.createIIRFilter(feedForward, feedback);\n  };\n\n  Context.prototype.createPanner = function () {\n    return this._context.createPanner();\n  };\n\n  Context.prototype.createPeriodicWave = function (real, imag, constraints) {\n    return this._context.createPeriodicWave(real, imag, constraints);\n  };\n\n  Context.prototype.createStereoPanner = function () {\n    return this._context.createStereoPanner();\n  };\n\n  Context.prototype.createWaveShaper = function () {\n    return this._context.createWaveShaper();\n  };\n\n  Context.prototype.createMediaStreamSource = function (stream) {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    var context = this._context;\n    return context.createMediaStreamSource(stream);\n  };\n\n  Context.prototype.createMediaStreamDestination = function () {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    var context = this._context;\n    return context.createMediaStreamDestination();\n  };\n\n  Context.prototype.decodeAudioData = function (audioData) {\n    return this._context.decodeAudioData(audioData);\n  };\n\n  Object.defineProperty(Context.prototype, \"currentTime\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.currentTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"state\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"sampleRate\", {\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get: function () {\n      return this._context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"listener\", {\n    /**\n     * The listener\n     */\n    get: function () {\n      this.initialize();\n      return this._listener;\n    },\n    set: function (l) {\n      assert(!this._initialized, \"The listener cannot be set after initialization.\");\n      this._listener = l;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"transport\", {\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get: function () {\n      this.initialize();\n      return this._transport;\n    },\n    set: function (t) {\n      assert(!this._initialized, \"The transport cannot be set after initialization.\");\n      this._transport = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"draw\", {\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get: function () {\n      this.initialize();\n      return this._draw;\n    },\n    set: function (d) {\n      assert(!this._initialized, \"Draw cannot be set after initialization.\");\n      this._draw = d;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"destination\", {\n    /**\n     * A reference to the Context's destination node.\n     */\n    get: function () {\n      this.initialize();\n      return this._destination;\n    },\n    set: function (d) {\n      assert(!this._initialized, \"The destination cannot be set after initialization.\");\n      this._destination = d;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create an audio worklet node from a name and options. The module\n   * must first be loaded using [[addAudioWorkletModule]].\n   */\n\n  Context.prototype.createAudioWorkletNode = function (name, options) {\n    return createAudioWorkletNode(this.rawContext, name, options);\n  };\n  /**\n   * Add an AudioWorkletProcessor module\n   * @param url The url of the module\n   * @param name The name of the module\n   */\n\n\n  Context.prototype.addAudioWorkletModule = function (url, name) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n\n            if (!this._workletModules.has(name)) {\n              this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n\n            return [4\n            /*yield*/\n            , this._workletModules.get(name)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Returns a promise which resolves when all of the worklets have been loaded on this context\n   */\n\n\n  Context.prototype.workletsAreReady = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n\n            this._workletModules.forEach(function (promise) {\n              return promises.push(promise);\n            });\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Context.prototype, \"updateInterval\", {\n    //---------------------------\n    // TICKER\n    //---------------------------\n\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get: function () {\n      return this._ticker.updateInterval;\n    },\n    set: function (interval) {\n      this._ticker.updateInterval = interval;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"clockSource\", {\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get: function () {\n      return this._ticker.type;\n    },\n    set: function (type) {\n      this._ticker.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"latencyHint\", {\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n     * @example\n     * // set the latencyHint to prioritize smooth playback at the expensive of latency\n     * Tone.context.latencyHint = \"playback\";\n     */\n    get: function () {\n      return this._latencyHint;\n    },\n    set: function (hint) {\n      var lookAheadValue = 0;\n      this._latencyHint = hint;\n\n      if (isString(hint)) {\n        switch (hint) {\n          case \"interactive\":\n            lookAheadValue = 0.1;\n            break;\n\n          case \"playback\":\n            lookAheadValue = 0.8;\n            break;\n\n          case \"balanced\":\n            lookAheadValue = 0.25;\n            break;\n\n          case \"fastest\":\n            lookAheadValue = 0.01;\n            break;\n        }\n      }\n\n      this.lookAhead = lookAheadValue;\n      this.updateInterval = lookAheadValue / 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Context.prototype, \"rawContext\", {\n    /**\n     * The unwrapped AudioContext.\n     */\n    get: function () {\n      return this._context;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * The current audio context time plus a short [[lookAhead]].\n   */\n\n  Context.prototype.now = function () {\n    return this._context.currentTime + this.lookAhead;\n  };\n  /**\n   * The current audio context time without the [[lookAhead]].\n   * In most cases it is better to use [[now]] instead of [[immediate]] since\n   * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n   * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n   * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n   */\n\n\n  Context.prototype.immediate = function () {\n    return this._context.currentTime;\n  };\n  /**\n   * Starts the audio context from a suspended state. This is required\n   * to initially start the AudioContext.\n   */\n\n\n  Context.prototype.resume = function () {\n    if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n      return this._context.resume();\n    } else {\n      return Promise.resolve();\n    }\n  };\n  /**\n   * Promise which is invoked when the context is running.\n   * Tries to resume the context if it's not started.\n   */\n\n\n  Context.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!isAudioContext(this._context)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._context.close()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (this._initialized) {\n              closeContext(this);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Generate a looped buffer at some constant value.\n   */\n\n\n  Context.prototype.getConstant = function (val) {\n    if (this._constants.has(val)) {\n      return this._constants.get(val);\n    } else {\n      var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\n      var arr = buffer.getChannelData(0);\n\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = val;\n      }\n\n      var constant = this._context.createBufferSource();\n\n      constant.channelCount = 1;\n      constant.channelCountMode = \"explicit\";\n      constant.buffer = buffer;\n      constant.loop = true;\n      constant.start(0);\n\n      this._constants.set(val, constant);\n\n      return constant;\n    }\n  };\n  /**\n   * Clean up. Also closes the audio context.\n   */\n\n\n  Context.prototype.dispose = function () {\n    var _this = this;\n\n    _super.prototype.dispose.call(this);\n\n    this._ticker.dispose();\n\n    this._timeouts.dispose();\n\n    Object.keys(this._constants).map(function (val) {\n      return _this._constants[val].disconnect();\n    });\n    return this;\n  }; //---------------------------\n  // TIMEOUTS\n  //---------------------------\n\n  /**\n   * The private loop which keeps track of the context scheduled timeouts\n   * Is invoked from the clock source\n   */\n\n\n  Context.prototype._timeoutLoop = function () {\n    var now = this.now();\n\n    var firstEvent = this._timeouts.peek();\n\n    while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n      // invoke the callback\n      firstEvent.callback(); // shift the first event off\n\n      this._timeouts.shift(); // get the next one\n\n\n      firstEvent = this._timeouts.peek();\n    }\n  };\n  /**\n   * A setTimeout which is guaranteed by the clock source.\n   * Also runs in the offline context.\n   * @param  fn       The callback to invoke\n   * @param  timeout  The timeout in seconds\n   * @returns ID to use when invoking Context.clearTimeout\n   */\n\n\n  Context.prototype.setTimeout = function (fn, timeout) {\n    this._timeoutIds++;\n    var now = this.now();\n\n    this._timeouts.add({\n      callback: fn,\n      id: this._timeoutIds,\n      time: now + timeout\n    });\n\n    return this._timeoutIds;\n  };\n  /**\n   * Clears a previously scheduled timeout with Tone.context.setTimeout\n   * @param  id  The ID returned from setTimeout\n   */\n\n\n  Context.prototype.clearTimeout = function (id) {\n    var _this = this;\n\n    this._timeouts.forEach(function (event) {\n      if (event.id === id) {\n        _this._timeouts.remove(event);\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Clear the function scheduled by [[setInterval]]\n   */\n\n\n  Context.prototype.clearInterval = function (id) {\n    return this.clearTimeout(id);\n  };\n  /**\n   * Adds a repeating event to the context's callback clock\n   */\n\n\n  Context.prototype.setInterval = function (fn, interval) {\n    var _this = this;\n\n    var id = ++this._timeoutIds;\n\n    var intervalFn = function () {\n      var now = _this.now();\n\n      _this._timeouts.add({\n        callback: function () {\n          // invoke the callback\n          fn(); // invoke the event to repeat it\n\n          intervalFn();\n        },\n        id: id,\n        time: now + interval\n      });\n    }; // kick it off\n\n\n    intervalFn();\n    return id;\n  };\n\n  return Context;\n}(BaseContext);\n\nexport { Context };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\n\nvar DummyContext =\n/** @class */\nfunction (_super) {\n  __extends(DummyContext, _super);\n\n  function DummyContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.lookAhead = 0;\n    _this.latencyHint = 0;\n    _this.isOffline = false;\n    return _this;\n  } //---------------------------\n  // BASE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  DummyContext.prototype.createAnalyser = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createOscillator = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBufferSource = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBiquadFilter = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createBuffer = function (_numberOfChannels, _length, _sampleRate) {\n    return {};\n  };\n\n  DummyContext.prototype.createChannelMerger = function (_numberOfInputs) {\n    return {};\n  };\n\n  DummyContext.prototype.createChannelSplitter = function (_numberOfOutputs) {\n    return {};\n  };\n\n  DummyContext.prototype.createConstantSource = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createConvolver = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createDelay = function (_maxDelayTime) {\n    return {};\n  };\n\n  DummyContext.prototype.createDynamicsCompressor = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createGain = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createIIRFilter = function (_feedForward, _feedback) {\n    return {};\n  };\n\n  DummyContext.prototype.createPanner = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createPeriodicWave = function (_real, _imag, _constraints) {\n    return {};\n  };\n\n  DummyContext.prototype.createStereoPanner = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createWaveShaper = function () {\n    return {};\n  };\n\n  DummyContext.prototype.createMediaStreamSource = function (_stream) {\n    return {};\n  };\n\n  DummyContext.prototype.createMediaStreamDestination = function () {\n    return {};\n  };\n\n  DummyContext.prototype.decodeAudioData = function (_audioData) {\n    return Promise.resolve({});\n  }; //---------------------------\n  // TONE AUDIO CONTEXT METHODS\n  //---------------------------\n\n\n  DummyContext.prototype.createAudioWorkletNode = function (_name, _options) {\n    return {};\n  };\n\n  Object.defineProperty(DummyContext.prototype, \"rawContext\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DummyContext.prototype.addAudioWorkletModule = function (_url, _name) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  };\n\n  DummyContext.prototype.resume = function () {\n    return Promise.resolve();\n  };\n\n  DummyContext.prototype.setTimeout = function (_fn, _timeout) {\n    return 0;\n  };\n\n  DummyContext.prototype.clearTimeout = function (_id) {\n    return this;\n  };\n\n  DummyContext.prototype.setInterval = function (_fn, _interval) {\n    return 0;\n  };\n\n  DummyContext.prototype.clearInterval = function (_id) {\n    return this;\n  };\n\n  DummyContext.prototype.getConstant = function (_val) {\n    return {};\n  };\n\n  Object.defineProperty(DummyContext.prototype, \"currentTime\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"state\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"sampleRate\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"listener\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"transport\", {\n    get: function () {\n      return {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"draw\", {\n    get: function () {\n      return {};\n    },\n    set: function (_d) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DummyContext.prototype, \"destination\", {\n    get: function () {\n      return {};\n    },\n    set: function (_d) {},\n    enumerable: true,\n    configurable: true\n  });\n\n  DummyContext.prototype.now = function () {\n    return 0;\n  };\n\n  DummyContext.prototype.immediate = function () {\n    return 0;\n  };\n\n  return DummyContext;\n}(BaseContext);\n\nexport { DummyContext };","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\n\nexport function readOnly(target, property) {\n  if (isArray(property)) {\n    property.forEach(function (str) {\n      return readOnly(target, str);\n    });\n  } else {\n    Object.defineProperty(target, property, {\n      enumerable: true,\n      writable: false\n    });\n  }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\n\nexport function writable(target, property) {\n  if (isArray(property)) {\n    property.forEach(function (str) {\n      return writable(target, str);\n    });\n  } else {\n    Object.defineProperty(target, property, {\n      writable: true\n    });\n  }\n}\nexport var noOp = function () {// no operation here!\n};","import { __awaiter, __extends, __generator, __values } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\n\nvar ToneAudioBuffer =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioBuffer, _super);\n\n  function ToneAudioBuffer() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"ToneAudioBuffer\";\n    /**\n     * Callback when the buffer is loaded.\n     */\n\n    _this.onload = noOp;\n    var options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n    _this.reverse = options.reverse;\n    _this.onload = options.onload;\n\n    if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n      _this.set(options.url);\n    } else if (isString(options.url)) {\n      // initiate the download\n      _this.load(options.url).catch(options.onerror);\n    }\n\n    return _this;\n  }\n\n  ToneAudioBuffer.getDefaults = function () {\n    return {\n      onerror: noOp,\n      onload: noOp,\n      reverse: false\n    };\n  };\n\n  Object.defineProperty(ToneAudioBuffer.prototype, \"sampleRate\", {\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.sampleRate;\n      } else {\n        return getContext().sampleRate;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n   */\n\n  ToneAudioBuffer.prototype.set = function (buffer) {\n    var _this = this;\n\n    if (buffer instanceof ToneAudioBuffer) {\n      // if it's loaded, set it\n      if (buffer.loaded) {\n        this._buffer = buffer.get();\n      } else {\n        // otherwise when it's loaded, invoke it's callback\n        buffer.onload = function () {\n          _this.set(buffer);\n\n          _this.onload(_this);\n        };\n      }\n    } else {\n      this._buffer = buffer;\n    } // reverse it initially\n\n\n    if (this._reversed) {\n      this._reverse();\n    }\n\n    return this;\n  };\n  /**\n   * The audio buffer stored in the object.\n   */\n\n\n  ToneAudioBuffer.prototype.get = function () {\n    return this._buffer;\n  };\n  /**\n   * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n   * Invokes the callback once the audio buffer loads.\n   * @param url The url of the buffer to load. filetype support depends on the browser.\n   * @returns A Promise which resolves with this ToneAudioBuffer\n   */\n\n\n  ToneAudioBuffer.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var doneLoading, index;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            doneLoading = ToneAudioBuffer.load(url).then(function (audioBuffer) {\n              _this.set(audioBuffer); // invoke the onload method\n\n\n              _this.onload(_this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n\n            return [4\n            /*yield*/\n            , doneLoading];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n            ToneAudioBuffer.downloads.splice(index, 1);\n            return [7\n            /*endfinally*/\n            ];\n\n          case 4:\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * clean up\n   */\n\n\n  ToneAudioBuffer.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffer = undefined;\n    return this;\n  };\n  /**\n   * Set the audio buffer from the array.\n   * To create a multichannel AudioBuffer, pass in a multidimensional array.\n   * @param array The array to fill the audio buffer\n   */\n\n\n  ToneAudioBuffer.prototype.fromArray = function (array) {\n    var isMultidimensional = isArray(array) && array[0].length > 0;\n    var channels = isMultidimensional ? array.length : 1;\n    var len = isMultidimensional ? array[0].length : array.length;\n    var context = getContext();\n    var buffer = context.createBuffer(channels, len, context.sampleRate);\n    var multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;\n\n    for (var c = 0; c < channels; c++) {\n      buffer.copyToChannel(multiChannelArray[c], c);\n    }\n\n    this._buffer = buffer;\n    return this;\n  };\n  /**\n   * Sums multiple channels into 1 channel\n   * @param chanNum Optionally only copy a single channel from the array.\n   */\n\n\n  ToneAudioBuffer.prototype.toMono = function (chanNum) {\n    if (isNumber(chanNum)) {\n      this.fromArray(this.toArray(chanNum));\n    } else {\n      var outputArray = new Float32Array(this.length);\n      var numChannels_1 = this.numberOfChannels;\n\n      for (var channel = 0; channel < numChannels_1; channel++) {\n        var channelArray = this.toArray(channel);\n\n        for (var i = 0; i < channelArray.length; i++) {\n          outputArray[i] += channelArray[i];\n        }\n      } // divide by the number of channels\n\n\n      outputArray = outputArray.map(function (sample) {\n        return sample / numChannels_1;\n      });\n      this.fromArray(outputArray);\n    }\n\n    return this;\n  };\n  /**\n   * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n   * Float32Array, and multichannel buffers will return multidimensional arrays.\n   * @param channel Optionally only copy a single channel from the array.\n   */\n\n\n  ToneAudioBuffer.prototype.toArray = function (channel) {\n    if (isNumber(channel)) {\n      return this.getChannelData(channel);\n    } else if (this.numberOfChannels === 1) {\n      return this.toArray(0);\n    } else {\n      var ret = [];\n\n      for (var c = 0; c < this.numberOfChannels; c++) {\n        ret[c] = this.getChannelData(c);\n      }\n\n      return ret;\n    }\n  };\n  /**\n   * Returns the Float32Array representing the PCM audio data for the specific channel.\n   * @param  channel  The channel number to return\n   * @return The audio as a TypedArray\n   */\n\n\n  ToneAudioBuffer.prototype.getChannelData = function (channel) {\n    if (this._buffer) {\n      return this._buffer.getChannelData(channel);\n    } else {\n      return new Float32Array(0);\n    }\n  };\n  /**\n   * Cut a subsection of the array and return a buffer of the\n   * subsection. Does not modify the original buffer\n   * @param start The time to start the slice\n   * @param end The end time to slice. If none is given will default to the end of the buffer\n   */\n\n\n  ToneAudioBuffer.prototype.slice = function (start, end) {\n    if (end === void 0) {\n      end = this.duration;\n    }\n\n    var startSamples = Math.floor(start * this.sampleRate);\n    var endSamples = Math.floor(end * this.sampleRate);\n    assert(startSamples < endSamples, \"The start time must be less than the end time\");\n    var length = endSamples - startSamples;\n    var retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n\n    for (var channel = 0; channel < this.numberOfChannels; channel++) {\n      retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n    }\n\n    return new ToneAudioBuffer(retBuffer);\n  };\n  /**\n   * Reverse the buffer.\n   */\n\n\n  ToneAudioBuffer.prototype._reverse = function () {\n    if (this.loaded) {\n      for (var i = 0; i < this.numberOfChannels; i++) {\n        this.getChannelData(i).reverse();\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(ToneAudioBuffer.prototype, \"loaded\", {\n    /**\n     * If the buffer is loaded or not\n     */\n    get: function () {\n      return this.length > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"duration\", {\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.duration;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"length\", {\n    /**\n     * The length of the buffer in samples\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.length;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"numberOfChannels\", {\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get: function () {\n      if (this._buffer) {\n        return this._buffer.numberOfChannels;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioBuffer.prototype, \"reverse\", {\n    /**\n     * Reverse the buffer.\n     */\n    get: function () {\n      return this._reversed;\n    },\n    set: function (rev) {\n      if (this._reversed !== rev) {\n        this._reversed = rev;\n\n        this._reverse();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n   * pass in a multidimensional array.\n   * @param array The array to fill the audio buffer\n   * @return A ToneAudioBuffer created from the array\n   */\n\n  ToneAudioBuffer.fromArray = function (array) {\n    return new ToneAudioBuffer().fromArray(array);\n  };\n  /**\n   * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n   * @param  url The url to load.\n   * @return A promise which resolves to a ToneAudioBuffer\n   */\n\n\n  ToneAudioBuffer.fromUrl = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            buffer = new ToneAudioBuffer();\n            return [4\n            /*yield*/\n            , buffer.load(url)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Loads a url using fetch and returns the AudioBuffer.\n   */\n\n\n  ToneAudioBuffer.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var matches, extensions, extension, extensions_1, extensions_1_1, ext, baseUrl, response, arrayBuffer, audioBuffer;\n\n      var e_1, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            matches = url.match(/\\[(.+\\|?)+\\]$/);\n\n            if (matches) {\n              extensions = matches[1].split(\"|\");\n              extension = extensions[0];\n\n              try {\n                for (extensions_1 = __values(extensions), extensions_1_1 = extensions_1.next(); !extensions_1_1.done; extensions_1_1 = extensions_1.next()) {\n                  ext = extensions_1_1.value;\n\n                  if (ToneAudioBuffer.supportsType(ext)) {\n                    extension = ext;\n                    break;\n                  }\n                }\n              } catch (e_1_1) {\n                e_1 = {\n                  error: e_1_1\n                };\n              } finally {\n                try {\n                  if (extensions_1_1 && !extensions_1_1.done && (_a = extensions_1.return)) _a.call(extensions_1);\n                } finally {\n                  if (e_1) throw e_1.error;\n                }\n              }\n\n              url = url.replace(matches[0], extension);\n            }\n\n            baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            return [4\n            /*yield*/\n            , fetch(baseUrl + url)];\n\n          case 1:\n            response = _b.sent();\n\n            if (!response.ok) {\n              throw new Error(\"could not load url: \" + url);\n            }\n\n            return [4\n            /*yield*/\n            , response.arrayBuffer()];\n\n          case 2:\n            arrayBuffer = _b.sent();\n            return [4\n            /*yield*/\n            , getContext().decodeAudioData(arrayBuffer)];\n\n          case 3:\n            audioBuffer = _b.sent();\n            return [2\n            /*return*/\n            , audioBuffer];\n        }\n      });\n    });\n  };\n  /**\n   * Checks a url's extension to see if the current browser can play that file type.\n   * @param url The url/extension to test\n   * @return If the file extension can be played\n   * @static\n   * @example\n   * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n   * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n   */\n\n\n  ToneAudioBuffer.supportsType = function (url) {\n    var extensions = url.split(\".\");\n    var extension = extensions[extensions.length - 1];\n    var response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n    return response !== \"\";\n  };\n  /**\n   * Returns a Promise which resolves when all of the buffers have loaded\n   */\n\n\n  ToneAudioBuffer.loaded = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // this makes sure that the function is always async\n            return [4\n            /*yield*/\n            , Promise.resolve()];\n\n          case 1:\n            // this makes sure that the function is always async\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (!ToneAudioBuffer.downloads.length) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , ToneAudioBuffer.downloads[0]];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 2];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; //-------------------------------------\n  // STATIC METHODS\n  //-------------------------------------\n\n  /**\n   * A path which is prefixed before every url.\n   */\n\n\n  ToneAudioBuffer.baseUrl = \"\";\n  /**\n   * All of the downloads\n   */\n\n  ToneAudioBuffer.downloads = [];\n  return ToneAudioBuffer;\n}(Tone);\n\nexport { ToneAudioBuffer };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n */\n\nvar OfflineContext =\n/** @class */\nfunction (_super) {\n  __extends(OfflineContext, _super);\n\n  function OfflineContext() {\n    var _this = _super.call(this, {\n      clockSource: \"offline\",\n      context: isOfflineAudioContext(arguments[0]) ? arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n      lookAhead: 0,\n      updateInterval: isOfflineAudioContext(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]\n    }) || this;\n\n    _this.name = \"OfflineContext\";\n    /**\n     * An artificial clock source\n     */\n\n    _this._currentTime = 0;\n    _this.isOffline = true;\n    _this._duration = isOfflineAudioContext(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];\n    return _this;\n  }\n  /**\n   * Override the now method to point to the internal clock time\n   */\n\n\n  OfflineContext.prototype.now = function () {\n    return this._currentTime;\n  };\n\n  Object.defineProperty(OfflineContext.prototype, \"currentTime\", {\n    /**\n     * Same as this.now()\n     */\n    get: function () {\n      return this._currentTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Render just the clock portion of the audio context.\n   */\n\n  OfflineContext.prototype._renderClock = function (asynchronous) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, yieldEvery;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            index = 0;\n            _a.label = 1;\n\n          case 1:\n            if (!(this._duration - this._currentTime >= 0)) return [3\n            /*break*/\n            , 4]; // invoke all the callbacks on that time\n\n            this.emit(\"tick\"); // increment the clock in block-sized chunks\n\n            this._currentTime += 128 / this.sampleRate; // yield once a second of audio\n\n            index++;\n            yieldEvery = Math.floor(this.sampleRate / 128);\n            if (!(asynchronous && index % yieldEvery === 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , new Promise(function (done) {\n              return setTimeout(done, 1);\n            })];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Render the output of the OfflineContext\n   * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n   */\n\n\n  OfflineContext.prototype.render = function (asynchronous) {\n    if (asynchronous === void 0) {\n      asynchronous = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.workletsAreReady()];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._renderClock(asynchronous)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._context.startRendering()];\n\n          case 3:\n            buffer = _a.sent();\n            return [2\n            /*return*/\n            , new ToneAudioBuffer(buffer)];\n        }\n      });\n    });\n  };\n  /**\n   * Close the context\n   */\n\n\n  OfflineContext.prototype.close = function () {\n    return Promise.resolve();\n  };\n\n  return OfflineContext;\n}(Context);\n\nexport { OfflineContext };","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\n\nvar dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\n\nvar globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\n\nexport function getContext() {\n  if (globalContext === dummyContext && hasAudioContext) {\n    setContext(new Context());\n  }\n\n  return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\n\nexport function setContext(context) {\n  if (isAudioContext(context)) {\n    globalContext = new Context(context);\n  } else if (isOfflineAudioContext(context)) {\n    globalContext = new OfflineContext(context);\n  } else {\n    globalContext = context;\n  }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\n\nexport function start() {\n  return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\n\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n  var prefix = \"v\";\n\n  if (version === \"dev\") {\n    prefix = \"\";\n  }\n\n  var printString = \" * Tone.js \" + prefix + version + \" * \"; // eslint-disable-next-line no-console\n\n  console.log(\"%c\" + printString, \"background: #000; color: #fff\");\n}","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n  var piFactor = 0.5 * Math.PI;\n  return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\n\nexport function dbToGain(db) {\n  return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\n\nexport function gainToDb(gain) {\n  return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\n\nexport function intervalToFrequencyRatio(interval) {\n  return Math.pow(2, interval / 12);\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\n\nvar A4 = 440;\nexport function getA4() {\n  return A4;\n}\nexport function setA4(freq) {\n  A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\n\nexport function ftom(frequency) {\n  return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\n\nexport function ftomf(frequency) {\n  return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\n\nexport function mtof(midi) {\n  return A4 * Math.pow(2, (midi - 69) / 12);\n}","import { __extends } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\n\nvar TimeBaseClass =\n/** @class */\nfunction (_super) {\n  __extends(TimeBaseClass, _super);\n  /**\n   * @param context The context associated with the time value. Used to compute\n   * Transport and context-relative timing.\n   * @param  value  The time value as a number, string or object\n   * @param  units  Unit values\n   */\n\n\n  function TimeBaseClass(context, value, units) {\n    var _this = _super.call(this) || this;\n    /**\n     * The default units\n     */\n\n\n    _this.defaultUnits = \"s\";\n    _this._val = value;\n    _this._units = units;\n    _this.context = context;\n    _this._expressions = _this._getExpressions();\n    return _this;\n  }\n  /**\n   * All of the time encoding expressions\n   */\n\n\n  TimeBaseClass.prototype._getExpressions = function () {\n    var _this = this;\n\n    return {\n      hz: {\n        method: function (value) {\n          return _this._frequencyToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)hz$/i\n      },\n      i: {\n        method: function (value) {\n          return _this._ticksToUnits(parseInt(value, 10));\n        },\n        regexp: /^(\\d+)i$/i\n      },\n      m: {\n        method: function (value) {\n          return _this._beatsToUnits(parseInt(value, 10) * _this._getTimeSignature());\n        },\n        regexp: /^(\\d+)m$/i\n      },\n      n: {\n        method: function (value, dot) {\n          var numericValue = parseInt(value, 10);\n          var scalar = dot === \".\" ? 1.5 : 1;\n\n          if (numericValue === 1) {\n            return _this._beatsToUnits(_this._getTimeSignature()) * scalar;\n          } else {\n            return _this._beatsToUnits(4 / numericValue) * scalar;\n          }\n        },\n        regexp: /^(\\d+)n(\\.?)$/i\n      },\n      number: {\n        method: function (value) {\n          return _this._expressions[_this.defaultUnits].method.call(_this, value);\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)$/\n      },\n      s: {\n        method: function (value) {\n          return _this._secondsToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)s$/\n      },\n      samples: {\n        method: function (value) {\n          return parseInt(value, 10) / _this.context.sampleRate;\n        },\n        regexp: /^(\\d+)samples$/\n      },\n      t: {\n        method: function (value) {\n          var numericValue = parseInt(value, 10);\n          return _this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n        },\n        regexp: /^(\\d+)t$/i\n      },\n      tr: {\n        method: function (m, q, s) {\n          var total = 0;\n\n          if (m && m !== \"0\") {\n            total += _this._beatsToUnits(_this._getTimeSignature() * parseFloat(m));\n          }\n\n          if (q && q !== \"0\") {\n            total += _this._beatsToUnits(parseFloat(q));\n          }\n\n          if (s && s !== \"0\") {\n            total += _this._beatsToUnits(parseFloat(s) / 4);\n          }\n\n          return total;\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/\n      }\n    };\n  }; //-------------------------------------\n  // \tVALUE OF\n  //-------------------------------------\n\n  /**\n   * Evaluate the time value. Returns the time in seconds.\n   */\n\n\n  TimeBaseClass.prototype.valueOf = function () {\n    if (this._val instanceof TimeBaseClass) {\n      this.fromType(this._val);\n    }\n\n    if (isUndef(this._val)) {\n      return this._noArg();\n    } else if (isString(this._val) && isUndef(this._units)) {\n      for (var units in this._expressions) {\n        if (this._expressions[units].regexp.test(this._val.trim())) {\n          this._units = units;\n          break;\n        }\n      }\n    } else if (isObject(this._val)) {\n      var total = 0;\n\n      for (var typeName in this._val) {\n        if (isDefined(this._val[typeName])) {\n          var quantity = this._val[typeName]; // @ts-ignore\n\n          var time = new this.constructor(this.context, typeName).valueOf() * quantity;\n          total += time;\n        }\n      }\n\n      return total;\n    }\n\n    if (isDefined(this._units)) {\n      var expr = this._expressions[this._units];\n\n      var matching = this._val.toString().trim().match(expr.regexp);\n\n      if (matching) {\n        return expr.method.apply(this, matching.slice(1));\n      } else {\n        return expr.method.call(this, this._val);\n      }\n    } else if (isString(this._val)) {\n      return parseFloat(this._val);\n    } else {\n      return this._val;\n    }\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  TimeBaseClass.prototype._frequencyToUnits = function (freq) {\n    return 1 / freq;\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  TimeBaseClass.prototype._beatsToUnits = function (beats) {\n    return 60 / this._getBpm() * beats;\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  TimeBaseClass.prototype._secondsToUnits = function (seconds) {\n    return seconds;\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  TimeBaseClass.prototype._ticksToUnits = function (ticks) {\n    return ticks * this._beatsToUnits(1) / this._getPPQ();\n  };\n  /**\n   * With no arguments, return 'now'\n   */\n\n\n  TimeBaseClass.prototype._noArg = function () {\n    return this._now();\n  }; //-------------------------------------\n  // \tTEMPO CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Return the bpm\n   */\n\n\n  TimeBaseClass.prototype._getBpm = function () {\n    return this.context.transport.bpm.value;\n  };\n  /**\n   * Return the timeSignature\n   */\n\n\n  TimeBaseClass.prototype._getTimeSignature = function () {\n    return this.context.transport.timeSignature;\n  };\n  /**\n   * Return the PPQ or 192 if Transport is not available\n   */\n\n\n  TimeBaseClass.prototype._getPPQ = function () {\n    return this.context.transport.PPQ;\n  }; //-------------------------------------\n  // \tCONVERSION INTERFACE\n  //-------------------------------------\n\n  /**\n   * Coerce a time type into this units type.\n   * @param type Any time type units\n   */\n\n\n  TimeBaseClass.prototype.fromType = function (type) {\n    this._units = undefined;\n\n    switch (this.defaultUnits) {\n      case \"s\":\n        this._val = type.toSeconds();\n        break;\n\n      case \"i\":\n        this._val = type.toTicks();\n        break;\n\n      case \"hz\":\n        this._val = type.toFrequency();\n        break;\n\n      case \"midi\":\n        this._val = type.toMidi();\n        break;\n    }\n\n    return this;\n  };\n  /**\n   * Return the value in hertz\n   */\n\n\n  TimeBaseClass.prototype.toFrequency = function () {\n    return 1 / this.toSeconds();\n  };\n  /**\n   * Return the time in samples\n   */\n\n\n  TimeBaseClass.prototype.toSamples = function () {\n    return this.toSeconds() * this.context.sampleRate;\n  };\n  /**\n   * Return the time in milliseconds.\n   */\n\n\n  TimeBaseClass.prototype.toMilliseconds = function () {\n    return this.toSeconds() * 1000;\n  };\n\n  return TimeBaseClass;\n}(Tone);\n\nexport { TimeBaseClass };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\n\nvar TimeClass =\n/** @class */\nfunction (_super) {\n  __extends(TimeClass, _super);\n\n  function TimeClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"TimeClass\";\n    return _this;\n  }\n\n  TimeClass.prototype._getExpressions = function () {\n    var _this = this;\n\n    return Object.assign(_super.prototype._getExpressions.call(this), {\n      now: {\n        method: function (capture) {\n          return _this._now() + new _this.constructor(_this.context, capture).valueOf();\n        },\n        regexp: /^\\+(.+)/\n      },\n      quantize: {\n        method: function (capture) {\n          var quantTo = new TimeClass(_this.context, capture).valueOf();\n          return _this._secondsToUnits(_this.context.transport.nextSubdivision(quantTo));\n        },\n        regexp: /^@(.+)/\n      }\n    });\n  };\n  /**\n   * Quantize the time by the given subdivision. Optionally add a\n   * percentage which will move the time value towards the ideal\n   * quantized value by that percentage.\n   * @param  subdiv    The subdivision to quantize to\n   * @param  percent  Move the time value towards the quantized value by a percentage.\n   * @example\n   * Tone.Time(21).quantize(2); // returns 22\n   * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n   */\n\n\n  TimeClass.prototype.quantize = function (subdiv, percent) {\n    if (percent === void 0) {\n      percent = 1;\n    }\n\n    var subdivision = new this.constructor(this.context, subdiv).valueOf();\n    var value = this.valueOf();\n    var multiple = Math.round(value / subdivision);\n    var ideal = multiple * subdivision;\n    var diff = ideal - value;\n    return value + diff * percent;\n  }; //-------------------------------------\n  // CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Convert a Time to Notation. The notation values are will be the\n   * closest representation between 1m to 128th note.\n   * @return {Notation}\n   * @example\n   * // if the Transport is at 120bpm:\n   * Tone.Time(2).toNotation(); // returns \"1m\"\n   */\n\n\n  TimeClass.prototype.toNotation = function () {\n    var _this = this;\n\n    var time = this.toSeconds();\n    var testNotations = [\"1m\"];\n\n    for (var power = 1; power < 9; power++) {\n      var subdiv = Math.pow(2, power);\n      testNotations.push(subdiv + \"n.\");\n      testNotations.push(subdiv + \"n\");\n      testNotations.push(subdiv + \"t\");\n    }\n\n    testNotations.push(\"0\"); // find the closets notation representation\n\n    var closest = testNotations[0];\n    var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n    testNotations.forEach(function (notation) {\n      var notationSeconds = new TimeClass(_this.context, notation).toSeconds();\n\n      if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n        closest = notation;\n        closestSeconds = notationSeconds;\n      }\n    });\n    return closest;\n  };\n  /**\n   * Return the time encoded as Bars:Beats:Sixteenths.\n   */\n\n\n  TimeClass.prototype.toBarsBeatsSixteenths = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    quarters = parseFloat(quarters.toFixed(4));\n    var measures = Math.floor(quarters / this._getTimeSignature());\n    var sixteenths = quarters % 1 * 4;\n    quarters = Math.floor(quarters) % this._getTimeSignature();\n    var sixteenthString = sixteenths.toString();\n\n    if (sixteenthString.length > 3) {\n      // the additional parseFloat removes insignificant trailing zeroes\n      sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n    }\n\n    var progress = [measures, quarters, sixteenths];\n    return progress.join(\":\");\n  };\n  /**\n   * Return the time in ticks.\n   */\n\n\n  TimeClass.prototype.toTicks = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    return Math.round(quarters * this._getPPQ());\n  };\n  /**\n   * Return the time in seconds.\n   */\n\n\n  TimeClass.prototype.toSeconds = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the value as a midi note.\n   */\n\n\n  TimeClass.prototype.toMidi = function () {\n    return ftom(this.toFrequency());\n  };\n\n  TimeClass.prototype._now = function () {\n    return this.context.now();\n  };\n\n  return TimeClass;\n}(TimeBaseClass);\n\nexport { TimeClass };\n/**\n * Create a TimeClass from a time string or number.\n * @param value A value which reprsents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n */\n\nexport function Time(value, units) {\n  return new TimeClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `eval` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\n\nvar FrequencyClass =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyClass, _super);\n\n  function FrequencyClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Frequency\";\n    _this.defaultUnits = \"hz\";\n    return _this;\n  }\n\n  Object.defineProperty(FrequencyClass, \"A4\", {\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    get: function () {\n      return getA4();\n    },\n    set: function (freq) {\n      setA4(freq);\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tAUGMENT BASE EXPRESSIONS\n  //-------------------------------------\n\n  FrequencyClass.prototype._getExpressions = function () {\n    return Object.assign({}, _super.prototype._getExpressions.call(this), {\n      midi: {\n        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n        method: function (value) {\n          if (this.defaultUnits === \"midi\") {\n            return value;\n          } else {\n            return FrequencyClass.mtof(value);\n          }\n        }\n      },\n      note: {\n        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n        method: function (pitch, octave) {\n          var index = noteToScaleIndex[pitch.toLowerCase()];\n          var noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\n          if (this.defaultUnits === \"midi\") {\n            return noteNumber;\n          } else {\n            return FrequencyClass.mtof(noteNumber);\n          }\n        }\n      },\n      tr: {\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n        method: function (m, q, s) {\n          var total = 1;\n\n          if (m && m !== \"0\") {\n            total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n          }\n\n          if (q && q !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(q));\n          }\n\n          if (s && s !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(s) / 4);\n          }\n\n          return total;\n        }\n      }\n    });\n  }; //-------------------------------------\n  // \tEXPRESSIONS\n  //-------------------------------------\n\n  /**\n   * Transposes the frequency by the given number of semitones.\n   * @return  A new transposed frequency\n   * @example\n   * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n   */\n\n\n  FrequencyClass.prototype.transpose = function (interval) {\n    return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n  };\n  /**\n   * Takes an array of semitone intervals and returns\n   * an array of frequencies transposed by those intervals.\n   * @return  Returns an array of Frequencies\n   * @example\n   * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n   */\n\n\n  FrequencyClass.prototype.harmonize = function (intervals) {\n    var _this = this;\n\n    return intervals.map(function (interval) {\n      return _this.transpose(interval);\n    });\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS\n  //-------------------------------------\n\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Frequency(\"C4\").toMidi(); // 60\n   */\n\n\n  FrequencyClass.prototype.toMidi = function () {\n    return ftom(this.valueOf());\n  };\n  /**\n   * Return the value of the frequency in Scientific Pitch Notation\n   * @example\n   * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n   */\n\n\n  FrequencyClass.prototype.toNote = function () {\n    var freq = this.toFrequency();\n    var log = Math.log2(freq / FrequencyClass.A4);\n    var noteNumber = Math.round(12 * log) + 57;\n    var octave = Math.floor(noteNumber / 12);\n\n    if (octave < 0) {\n      noteNumber += -12 * octave;\n    }\n\n    var noteName = scaleIndexToNote[noteNumber % 12];\n    return noteName + octave.toString();\n  };\n  /**\n   * Return the duration of one cycle in seconds.\n   */\n\n\n  FrequencyClass.prototype.toSeconds = function () {\n    return 1 / _super.prototype.toSeconds.call(this);\n  };\n  /**\n   * Return the duration of one cycle in ticks\n   */\n\n\n  FrequencyClass.prototype.toTicks = function () {\n    var quarterTime = this._beatsToUnits(1);\n\n    var quarters = this.valueOf() / quarterTime;\n    return Math.floor(quarters * this._getPPQ());\n  }; //-------------------------------------\n  // \tUNIT CONVERSIONS HELPERS\n  //-------------------------------------\n\n  /**\n   * With no arguments, return 0\n   */\n\n\n  FrequencyClass.prototype._noArg = function () {\n    return 0;\n  };\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  FrequencyClass.prototype._frequencyToUnits = function (freq) {\n    return freq;\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  FrequencyClass.prototype._ticksToUnits = function (ticks) {\n    return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  FrequencyClass.prototype._beatsToUnits = function (beats) {\n    return 1 / _super.prototype._beatsToUnits.call(this, beats);\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  FrequencyClass.prototype._secondsToUnits = function (seconds) {\n    return 1 / seconds;\n  };\n  /**\n   * Convert a MIDI note to frequency value.\n   * @param  midi The midi number to convert.\n   * @return The corresponding frequency value\n   */\n\n\n  FrequencyClass.mtof = function (midi) {\n    return mtof(midi);\n  };\n  /**\n   * Convert a frequency value to a MIDI note.\n   * @param frequency The value to frequency value to convert.\n   */\n\n\n  FrequencyClass.ftom = function (frequency) {\n    return ftom(frequency);\n  };\n\n  return FrequencyClass;\n}(TimeClass);\n\nexport { FrequencyClass }; //-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index.\n * @hidden\n */\n\nvar noteToScaleIndex = {\n  cbb: -2,\n  cb: -1,\n  c: 0,\n  \"c#\": 1,\n  cx: 2,\n  dbb: 0,\n  db: 1,\n  d: 2,\n  \"d#\": 3,\n  dx: 4,\n  ebb: 2,\n  eb: 3,\n  e: 4,\n  \"e#\": 5,\n  ex: 6,\n  fbb: 3,\n  fb: 4,\n  f: 5,\n  \"f#\": 6,\n  fx: 7,\n  gbb: 5,\n  gb: 6,\n  g: 7,\n  \"g#\": 8,\n  gx: 9,\n  abb: 7,\n  ab: 8,\n  a: 9,\n  \"a#\": 10,\n  ax: 11,\n  bbb: 9,\n  bb: 10,\n  b: 11,\n  \"b#\": 12,\n  bx: 13\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\n\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\n\nexport function Frequency(value, units) {\n  return new FrequencyClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\n\nvar TransportTimeClass =\n/** @class */\nfunction (_super) {\n  __extends(TransportTimeClass, _super);\n\n  function TransportTimeClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"TransportTime\";\n    return _this;\n  }\n  /**\n   * Return the current time in whichever context is relevant\n   */\n\n\n  TransportTimeClass.prototype._now = function () {\n    return this.context.transport.seconds;\n  };\n\n  return TransportTimeClass;\n}(TimeClass);\n\nexport { TransportTimeClass };\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\n\nexport function TransportTime(value, units) {\n  return new TransportTimeClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\n\nvar ToneWithContext =\n/** @class */\nfunction (_super) {\n  __extends(ToneWithContext, _super);\n\n  function ToneWithContext() {\n    var _this = _super.call(this) || this;\n\n    var options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\n    if (_this.defaultContext) {\n      _this.context = _this.defaultContext;\n    } else {\n      _this.context = options.context;\n    }\n\n    return _this;\n  }\n\n  ToneWithContext.getDefaults = function () {\n    return {\n      context: getContext()\n    };\n  };\n  /**\n   * Return the current time of the Context clock plus the lookAhead.\n   * @example\n   * setInterval(() => {\n   * \tconsole.log(Tone.now());\n   * }, 100)\n   */\n\n\n  ToneWithContext.prototype.now = function () {\n    return this.context.currentTime + this.context.lookAhead;\n  };\n  /**\n   * Return the current time of the Context clock without any lookAhead.\n   * @example\n   * setInterval(() => {\n   * \tconsole.log(Tone.immediate());\n   * }, 100)\n   */\n\n\n  ToneWithContext.prototype.immediate = function () {\n    return this.context.currentTime;\n  };\n\n  Object.defineProperty(ToneWithContext.prototype, \"sampleTime\", {\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get: function () {\n      return 1 / this.context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneWithContext.prototype, \"blockTime\", {\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get: function () {\n      return 128 / this.context.sampleRate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Convert the incoming time to seconds\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toSeconds(\"4n\"));\n   */\n\n  ToneWithContext.prototype.toSeconds = function (time) {\n    return new TimeClass(this.context, time).toSeconds();\n  };\n  /**\n   * Convert the input to a frequency number\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toFrequency(\"4n\"));\n   */\n\n\n  ToneWithContext.prototype.toFrequency = function (freq) {\n    return new FrequencyClass(this.context, freq).toFrequency();\n  };\n  /**\n   * Convert the input time into ticks\n   * @example\n   * const gain = new Tone.Gain();\n   * console.log(gain.toTicks(\"4n\"));\n   */\n\n\n  ToneWithContext.prototype.toTicks = function (time) {\n    return new TransportTimeClass(this.context, time).toTicks();\n  }; //-------------------------------------\n  // \tGET/SET\n  //-------------------------------------\n\n  /**\n   * Get a subset of the properties which are in the partial props\n   */\n\n\n  ToneWithContext.prototype._getPartialProperties = function (props) {\n    var options = this.get(); // remove attributes from the prop that are not in the partial\n\n    Object.keys(options).forEach(function (name) {\n      if (isUndef(props[name])) {\n        delete options[name];\n      }\n    });\n    return options;\n  };\n  /**\n   * Get the object's attributes.\n   * @example\n   * const osc = new Tone.Oscillator();\n   * console.log(osc.get());\n   */\n\n\n  ToneWithContext.prototype.get = function () {\n    var _this = this;\n\n    var defaults = getDefaultsFromInstance(this);\n    Object.keys(defaults).forEach(function (attribute) {\n      if (Reflect.has(_this, attribute)) {\n        var member = _this[attribute];\n\n        if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n          defaults[attribute] = member.value;\n        } else if (member instanceof ToneWithContext) {\n          defaults[attribute] = member._getPartialProperties(defaults[attribute]); // otherwise make sure it's a serializable type\n        } else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n          defaults[attribute] = member;\n        } else {\n          // remove all undefined and unserializable attributes\n          delete defaults[attribute];\n        }\n      }\n    });\n    return defaults;\n  };\n  /**\n   * Set multiple properties at once with an object.\n   * @example\n   * const filter = new Tone.Filter();\n   * // set values using an object\n   * filter.set({\n   * \tfrequency: 300,\n   * \ttype: \"highpass\"\n   * });\n   */\n\n\n  ToneWithContext.prototype.set = function (props) {\n    var _this = this;\n\n    Object.keys(props).forEach(function (attribute) {\n      if (Reflect.has(_this, attribute) && isDefined(_this[attribute])) {\n        if (_this[attribute] && isDefined(_this[attribute].value) && isDefined(_this[attribute].setValueAtTime)) {\n          // small optimization\n          if (_this[attribute].value !== props[attribute]) {\n            _this[attribute].value = props[attribute];\n          }\n        } else if (_this[attribute] instanceof ToneWithContext) {\n          _this[attribute].set(props[attribute]);\n        } else {\n          _this[attribute] = props[attribute];\n        }\n      }\n    });\n    return this;\n  };\n\n  return ToneWithContext;\n}(Tone);\n\nexport { ToneWithContext };","import { __extends } from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\n\nvar StateTimeline =\n/** @class */\nfunction (_super) {\n  __extends(StateTimeline, _super);\n\n  function StateTimeline(initial) {\n    if (initial === void 0) {\n      initial = \"stopped\";\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.name = \"StateTimeline\";\n    _this._initial = initial;\n\n    _this.setStateAtTime(_this._initial, 0);\n\n    return _this;\n  }\n  /**\n   * Returns the scheduled state scheduled before or at\n   * the given time.\n   * @param  time  The time to query.\n   * @return  The name of the state input in setStateAtTime.\n   */\n\n\n  StateTimeline.prototype.getValueAtTime = function (time) {\n    var event = this.get(time);\n\n    if (event !== null) {\n      return event.state;\n    } else {\n      return this._initial;\n    }\n  };\n  /**\n   * Add a state to the timeline.\n   * @param  state The name of the state to set.\n   * @param  time  The time to query.\n   * @param options Any additional options that are needed in the timeline.\n   */\n\n\n  StateTimeline.prototype.setStateAtTime = function (state, time, options) {\n    assertRange(time, 0);\n    this.add(Object.assign({}, options, {\n      state: state,\n      time: time\n    }));\n    return this;\n  };\n  /**\n   * Return the event before the time with the given state\n   * @param  state The state to look for\n   * @param  time  When to check before\n   * @return  The event with the given state before the time\n   */\n\n\n  StateTimeline.prototype.getLastState = function (state, time) {\n    // time = this.toSeconds(time);\n    var index = this._search(time);\n\n    for (var i = index; i >= 0; i--) {\n      var event_1 = this._timeline[i];\n\n      if (event_1.state === state) {\n        return event_1;\n      }\n    }\n  };\n  /**\n   * Return the event after the time with the given state\n   * @param  state The state to look for\n   * @param  time  When to check from\n   * @return  The event with the given state after the time\n   */\n\n\n  StateTimeline.prototype.getNextState = function (state, time) {\n    // time = this.toSeconds(time);\n    var index = this._search(time);\n\n    if (index !== -1) {\n      for (var i = index; i < this._timeline.length; i++) {\n        var event_2 = this._timeline[i];\n\n        if (event_2.state === state) {\n          return event_2;\n        }\n      }\n    }\n  };\n\n  return StateTimeline;\n}(Timeline);\n\nexport { StateTimeline };","import { __extends } from \"tslib\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\n\nvar Param =\n/** @class */\nfunction (_super) {\n  __extends(Param, _super);\n\n  function Param() {\n    var _this = _super.call(this, optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"])) || this;\n\n    _this.name = \"Param\";\n    _this.overridden = false;\n    /**\n     * The minimum output value\n     */\n\n    _this._minOutput = 1e-7;\n    var options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n    assert(isDefined(options.param) && (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n    while (!isAudioParam(options.param)) {\n      options.param = options.param._param;\n    }\n\n    _this._swappable = isDefined(options.swappable) ? options.swappable : false;\n\n    if (_this._swappable) {\n      _this.input = _this.context.createGain(); // initialize\n\n      _this._param = options.param;\n\n      _this.input.connect(_this._param);\n    } else {\n      _this._param = _this.input = options.param;\n    }\n\n    _this._events = new Timeline(1000);\n    _this._initialValue = _this._param.defaultValue;\n    _this.units = options.units;\n    _this.convert = options.convert;\n    _this._minValue = options.minValue;\n    _this._maxValue = options.maxValue; // if the value is defined, set it immediately\n\n    if (isDefined(options.value) && options.value !== _this._toType(_this._initialValue)) {\n      _this.setValueAtTime(options.value, 0);\n    }\n\n    return _this;\n  }\n\n  Param.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      convert: true,\n      units: \"number\"\n    });\n  };\n\n  Object.defineProperty(Param.prototype, \"value\", {\n    get: function () {\n      var now = this.now();\n      return this.getValueAtTime(now);\n    },\n    set: function (value) {\n      this.cancelScheduledValues(this.now());\n      this.setValueAtTime(value, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Param.prototype, \"minValue\", {\n    get: function () {\n      // if it's not the default minValue, return it\n      if (isDefined(this._minValue)) {\n        return this._minValue;\n      } else if (this.units === \"time\" || this.units === \"frequency\" || this.units === \"normalRange\" || this.units === \"positive\" || this.units === \"transportTime\" || this.units === \"ticks\" || this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n        return 0;\n      } else if (this.units === \"audioRange\") {\n        return -1;\n      } else if (this.units === \"decibels\") {\n        return -Infinity;\n      } else {\n        return this._param.minValue;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Param.prototype, \"maxValue\", {\n    get: function () {\n      if (isDefined(this._maxValue)) {\n        return this._maxValue;\n      } else if (this.units === \"normalRange\" || this.units === \"audioRange\") {\n        return 1;\n      } else {\n        return this._param.maxValue;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Type guard based on the unit name\n   */\n\n  Param.prototype._is = function (arg, type) {\n    return this.units === type;\n  };\n  /**\n   * Make sure the value is always in the defined range\n   */\n\n\n  Param.prototype._assertRange = function (value) {\n    if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n      assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n    }\n\n    return value;\n  };\n  /**\n   * Convert the given value from the type specified by Param.units\n   * into the destination value (such as Gain or Frequency).\n   */\n\n\n  Param.prototype._fromType = function (val) {\n    if (this.convert && !this.overridden) {\n      if (this._is(val, \"time\")) {\n        return this.toSeconds(val);\n      } else if (this._is(val, \"decibels\")) {\n        return dbToGain(val);\n      } else if (this._is(val, \"frequency\")) {\n        return this.toFrequency(val);\n      } else {\n        return val;\n      }\n    } else if (this.overridden) {\n      // if it's overridden, should only schedule 0s\n      return 0;\n    } else {\n      return val;\n    }\n  };\n  /**\n   * Convert the parameters value into the units specified by Param.units.\n   */\n\n\n  Param.prototype._toType = function (val) {\n    if (this.convert && this.units === \"decibels\") {\n      return gainToDb(val);\n    } else {\n      return val;\n    }\n  }; //-------------------------------------\n  // ABSTRACT PARAM INTERFACE\n  // all docs are generated from ParamInterface.ts\n  //-------------------------------------\n\n\n  Param.prototype.setValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    var numericValue = this._fromType(value);\n\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(time));\n\n    this._assertRange(numericValue);\n\n    this.log(this.units, \"setValueAtTime\", value, computedTime);\n\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: numericValue\n    });\n\n    this._param.setValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.getValueAtTime = function (time) {\n    var computedTime = Math.max(this.toSeconds(time), 0);\n\n    var after = this._events.getAfter(computedTime);\n\n    var before = this._events.get(computedTime);\n\n    var value = this._initialValue; // if it was set by\n\n    if (before === null) {\n      value = this._initialValue;\n    } else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n      var previous = this._events.getBefore(before.time);\n\n      var previousVal = void 0;\n\n      if (previous === null) {\n        previousVal = this._initialValue;\n      } else {\n        previousVal = previous.value;\n      }\n\n      if (before.type === \"setTargetAtTime\") {\n        value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n      }\n    } else if (after === null) {\n      value = before.value;\n    } else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n      var beforeValue = before.value;\n\n      if (before.type === \"setTargetAtTime\") {\n        var previous = this._events.getBefore(before.time);\n\n        if (previous === null) {\n          beforeValue = this._initialValue;\n        } else {\n          beforeValue = previous.value;\n        }\n      }\n\n      if (after.type === \"linearRampToValueAtTime\") {\n        value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      } else {\n        value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      }\n    } else {\n      value = before.value;\n    }\n\n    return this._toType(value);\n  };\n\n  Param.prototype.setRampPoint = function (time) {\n    time = this.toSeconds(time);\n    var currentVal = this.getValueAtTime(time);\n    this.cancelAndHoldAtTime(time);\n\n    if (this._fromType(currentVal) === 0) {\n      currentVal = this._toType(this._minOutput);\n    }\n\n    this.setValueAtTime(currentVal, time);\n    return this;\n  };\n\n  Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n    var numericValue = this._fromType(value);\n\n    var computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to linearRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n\n    this._assertRange(numericValue);\n\n    this._events.add({\n      time: computedTime,\n      type: \"linearRampToValueAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\n    this._param.linearRampToValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n    var numericValue = this._fromType(value);\n\n    numericValue = Math.max(this._minOutput, numericValue);\n\n    this._assertRange(numericValue);\n\n    var computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to exponentialRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime)); // store the event\n\n    this._events.add({\n      time: computedTime,\n      type: \"exponentialRampToValueAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\n    this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  };\n\n  Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  };\n\n  Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialApproachValueAtTime(value, startTime, rampTime);\n    return this;\n  };\n\n  Param.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n    time = this.toSeconds(time);\n    rampTime = this.toSeconds(rampTime);\n    var timeConstant = Math.log(rampTime + 1) / Math.log(200);\n    this.setTargetAtTime(value, time, timeConstant); // at 90% start a linear ramp to the final value\n\n    this.cancelAndHoldAtTime(time + rampTime * 0.9);\n    this.linearRampToValueAtTime(value, time + rampTime);\n    return this;\n  };\n\n  Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    var numericValue = this._fromType(value); // The value will never be able to approach without timeConstant > 0.\n\n\n    assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n    var computedTime = this.toSeconds(startTime);\n\n    this._assertRange(numericValue);\n\n    assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setTargetAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(startTime));\n\n    this._events.add({\n      constant: timeConstant,\n      time: computedTime,\n      type: \"setTargetAtTime\",\n      value: numericValue\n    });\n\n    this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\n    this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\n    return this;\n  };\n\n  Param.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    if (scaling === void 0) {\n      scaling = 1;\n    }\n\n    duration = this.toSeconds(duration);\n    startTime = this.toSeconds(startTime);\n    var startingValue = this._fromType(values[0]) * scaling;\n    this.setValueAtTime(this._toType(startingValue), startTime);\n    var segTime = duration / (values.length - 1);\n\n    for (var i = 1; i < values.length; i++) {\n      var numericValue = this._fromType(values[i]) * scaling;\n      this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n    }\n\n    return this;\n  };\n\n  Param.prototype.cancelScheduledValues = function (time) {\n    var computedTime = this.toSeconds(time);\n    assert(isFinite(computedTime), \"Invalid argument to cancelScheduledValues: \" + JSON.stringify(time));\n\n    this._events.cancel(computedTime);\n\n    this._param.cancelScheduledValues(computedTime);\n\n    this.log(this.units, \"cancelScheduledValues\", computedTime);\n    return this;\n  };\n\n  Param.prototype.cancelAndHoldAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    var valueAtTime = this._fromType(this.getValueAtTime(computedTime)); // remove the schedule events\n\n\n    assert(isFinite(computedTime), \"Invalid argument to cancelAndHoldAtTime: \" + JSON.stringify(time));\n    this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime); // if there is an event at the given computedTime\n    // and that even is not a \"set\"\n\n    var before = this._events.get(computedTime);\n\n    var after = this._events.getAfter(computedTime);\n\n    if (before && EQ(before.time, computedTime)) {\n      // remove everything after\n      if (after) {\n        this._param.cancelScheduledValues(after.time);\n\n        this._events.cancel(after.time);\n      } else {\n        this._param.cancelAndHoldAtTime(computedTime);\n\n        this._events.cancel(computedTime + this.sampleTime);\n      }\n    } else if (after) {\n      this._param.cancelScheduledValues(after.time); // cancel the next event(s)\n\n\n      this._events.cancel(after.time);\n\n      if (after.type === \"linearRampToValueAtTime\") {\n        this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      } else if (after.type === \"exponentialRampToValueAtTime\") {\n        this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      }\n    } // set the value at the given time\n\n\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: valueAtTime\n    });\n\n    this._param.setValueAtTime(valueAtTime, computedTime);\n\n    return this;\n  };\n\n  Param.prototype.rampTo = function (value, rampTime, startTime) {\n    if (rampTime === void 0) {\n      rampTime = 0.1;\n    }\n\n    if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n      this.exponentialRampTo(value, rampTime, startTime);\n    } else {\n      this.linearRampTo(value, rampTime, startTime);\n    }\n\n    return this;\n  };\n  /**\n   * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n   * The applied values will start at the context's current time and schedule\n   * all of the events which are scheduled on this Param onto the passed in param.\n   */\n\n\n  Param.prototype.apply = function (param) {\n    var now = this.context.currentTime; // set the param's value at the current time and schedule everything else\n\n    param.setValueAtTime(this.getValueAtTime(now), now); // if the previous event was a curve, then set the rest of it\n\n    var previousEvent = this._events.get(now);\n\n    if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n      // approx it until the next event with linear ramps\n      var nextEvent = this._events.getAfter(previousEvent.time); // or for 2 seconds if there is no event\n\n\n      var endTime = nextEvent ? nextEvent.time : now + 2;\n      var subdivisions = (endTime - now) / 10;\n\n      for (var i = now; i < endTime; i += subdivisions) {\n        param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n      }\n    }\n\n    this._events.forEachAfter(this.context.currentTime, function (event) {\n      if (event.type === \"cancelScheduledValues\") {\n        param.cancelScheduledValues(event.time);\n      } else if (event.type === \"setTargetAtTime\") {\n        param.setTargetAtTime(event.value, event.time, event.constant);\n      } else {\n        param[event.type](event.value, event.time);\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Replace the Param's internal AudioParam. Will apply scheduled curves\n   * onto the parameter and replace the connections.\n   */\n\n\n  Param.prototype.setParam = function (param) {\n    assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n    var input = this.input;\n    input.disconnect(this._param);\n    this.apply(param);\n    this._param = param;\n    input.connect(this._param);\n    return this;\n  };\n\n  Param.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events.dispose();\n\n    return this;\n  };\n\n  Object.defineProperty(Param.prototype, \"defaultValue\", {\n    get: function () {\n      return this._toType(this._param.defaultValue);\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tAUTOMATION CURVE CALCULATIONS\n  // \tMIT License, copyright (c) 2014 Jordan Santell\n  //-------------------------------------\n  // Calculates the the value along the curve produced by setTargetAtTime\n\n  Param.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n    return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n  }; // Calculates the the value along the curve produced by linearRampToValueAtTime\n\n\n  Param.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n    return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n  }; // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\n\n  Param.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n    return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n  };\n\n  return Param;\n}(ToneWithContext);\n\nexport { Param };","import { __extends, __read, __spread } from \"tslib\";\nimport { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\n\nvar ToneAudioNode =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioNode, _super);\n\n  function ToneAudioNode() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * The name of the class\n     */\n\n\n    _this.name = \"ToneAudioNode\";\n    /**\n     * List all of the node that must be set to match the ChannelProperties\n     */\n\n    _this._internalChannels = [];\n    return _this;\n  }\n\n  Object.defineProperty(ToneAudioNode.prototype, \"numberOfInputs\", {\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get: function () {\n      if (isDefined(this.input)) {\n        if (isAudioParam(this.input) || this.input instanceof Param) {\n          return 1;\n        } else {\n          return this.input.numberOfInputs;\n        }\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"numberOfOutputs\", {\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get: function () {\n      if (isDefined(this.output)) {\n        return this.output.numberOfOutputs;\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // AUDIO PROPERTIES\n  //-------------------------------------\n\n  /**\n   * Used to decide which nodes to get/set properties on\n   */\n\n  ToneAudioNode.prototype._isAudioNode = function (node) {\n    return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n  };\n  /**\n   * Get all of the audio nodes (either internal or input/output) which together\n   * make up how the class node responds to channel input/output\n   */\n\n\n  ToneAudioNode.prototype._getInternalNodes = function () {\n    var nodeList = this._internalChannels.slice(0);\n\n    if (this._isAudioNode(this.input)) {\n      nodeList.push(this.input);\n    }\n\n    if (this._isAudioNode(this.output)) {\n      if (this.input !== this.output) {\n        nodeList.push(this.output);\n      }\n    }\n\n    return nodeList;\n  };\n  /**\n   * Set the audio options for this node such as channelInterpretation\n   * channelCount, etc.\n   * @param options\n   */\n\n\n  ToneAudioNode.prototype._setChannelProperties = function (options) {\n    var nodeList = this._getInternalNodes();\n\n    nodeList.forEach(function (node) {\n      node.channelCount = options.channelCount;\n      node.channelCountMode = options.channelCountMode;\n      node.channelInterpretation = options.channelInterpretation;\n    });\n  };\n  /**\n   * Get the current audio options for this node such as channelInterpretation\n   * channelCount, etc.\n   */\n\n\n  ToneAudioNode.prototype._getChannelProperties = function () {\n    var nodeList = this._getInternalNodes();\n\n    assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\"); // use the first node to get properties\n    // they should all be the same\n\n    var node = nodeList[0];\n    return {\n      channelCount: node.channelCount,\n      channelCountMode: node.channelCountMode,\n      channelInterpretation: node.channelInterpretation\n    };\n  };\n\n  Object.defineProperty(ToneAudioNode.prototype, \"channelCount\", {\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get: function () {\n      return this._getChannelProperties().channelCount;\n    },\n    set: function (channelCount) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelCount: channelCount\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"channelCountMode\", {\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get: function () {\n      return this._getChannelProperties().channelCountMode;\n    },\n    set: function (channelCountMode) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelCountMode: channelCountMode\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneAudioNode.prototype, \"channelInterpretation\", {\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get: function () {\n      return this._getChannelProperties().channelInterpretation;\n    },\n    set: function (channelInterpretation) {\n      var props = this._getChannelProperties(); // merge it with the other properties\n\n\n      this._setChannelProperties(Object.assign(props, {\n        channelInterpretation: channelInterpretation\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // CONNECTIONS\n  //-------------------------------------\n\n  /**\n   * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n   * @param destination The output to connect to\n   * @param outputNum The output to connect from\n   * @param inputNum The input to connect to\n   */\n\n  ToneAudioNode.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    connect(this, destination, outputNum, inputNum);\n    return this;\n  };\n  /**\n   * Connect the output to the context's destination node.\n   * @example\n   * const osc = new Tone.Oscillator().start();\n   * osc.toDestination();\n   */\n\n\n  ToneAudioNode.prototype.toDestination = function () {\n    this.connect(this.context.destination);\n    return this;\n  };\n  /**\n   * Connect the output to the context's destination node.\n   * See [[toDestination]]\n   * @deprecated\n   */\n\n\n  ToneAudioNode.prototype.toMaster = function () {\n    warn(\"toMaster() has been renamed toDestination()\");\n    return this.toDestination();\n  };\n  /**\n   * disconnect the output\n   */\n\n\n  ToneAudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    disconnect(this, destination, outputNum, inputNum);\n    return this;\n  };\n  /**\n   * Connect the output of this node to the rest of the nodes in series.\n   * @example\n   * const osc = new Tone.Oscillator().start();\n   * const filter = new Tone.Filter();\n   * const volume = new Tone.Volume(-8);\n   * // connect a node to the filter, volume and then to the master output\n   * osc.chain(filter, volume, Tone.Destination);\n   */\n\n\n  ToneAudioNode.prototype.chain = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    connectSeries.apply(void 0, __spread([this], nodes));\n    return this;\n  };\n  /**\n   * connect the output of this node to the rest of the nodes in parallel.\n   */\n\n\n  ToneAudioNode.prototype.fan = function () {\n    var _this = this;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    nodes.forEach(function (node) {\n      return _this.connect(node);\n    });\n    return this;\n  };\n  /**\n   * Dispose and disconnect\n   */\n\n\n  ToneAudioNode.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (isDefined(this.input)) {\n      if (this.input instanceof ToneAudioNode) {\n        this.input.dispose();\n      } else if (isAudioNode(this.input)) {\n        this.input.disconnect();\n      }\n    }\n\n    if (isDefined(this.output)) {\n      if (this.output instanceof ToneAudioNode) {\n        this.output.dispose();\n      } else if (isAudioNode(this.output)) {\n        this.output.disconnect();\n      }\n    }\n\n    this._internalChannels = [];\n    return this;\n  };\n\n  return ToneAudioNode;\n}(ToneWithContext);\n\nexport { ToneAudioNode }; //-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\n\nexport function connectSeries() {\n  var nodes = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nodes[_i] = arguments[_i];\n  }\n\n  var first = nodes.shift();\n  nodes.reduce(function (prev, current) {\n    if (prev instanceof ToneAudioNode) {\n      prev.connect(current);\n    } else if (isAudioNode(prev)) {\n      connect(prev, current);\n    }\n\n    return current;\n  }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\n\nexport function connect(srcNode, dstNode, outputNumber, inputNumber) {\n  if (outputNumber === void 0) {\n    outputNumber = 0;\n  }\n\n  if (inputNumber === void 0) {\n    inputNumber = 0;\n  }\n\n  assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n  assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n  if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n    assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n  }\n\n  assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\"); // resolve the input of the dstNode\n\n  while (dstNode instanceof ToneAudioNode || dstNode instanceof Param) {\n    if (isDefined(dstNode.input)) {\n      dstNode = dstNode.input;\n    }\n  }\n\n  while (srcNode instanceof ToneAudioNode) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  } // make the connection\n\n\n  if (isAudioParam(dstNode)) {\n    srcNode.connect(dstNode, outputNumber);\n  } else {\n    srcNode.connect(dstNode, outputNumber, inputNumber);\n  }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\n\nexport function disconnect(srcNode, dstNode, outputNumber, inputNumber) {\n  if (outputNumber === void 0) {\n    outputNumber = 0;\n  }\n\n  if (inputNumber === void 0) {\n    inputNumber = 0;\n  } // resolve the destination node\n\n\n  if (isDefined(dstNode)) {\n    while (dstNode instanceof ToneAudioNode) {\n      dstNode = dstNode.input;\n    }\n  } // resolve the src node\n\n\n  while (!isAudioNode(srcNode)) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  }\n\n  if (isAudioParam(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber);\n  } else if (isAudioNode(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber, inputNumber);\n  } else {\n    srcNode.disconnect();\n  }\n}","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n */\n\nvar Gain =\n/** @class */\nfunction (_super) {\n  __extends(Gain, _super);\n\n  function Gain() {\n    var _this = _super.call(this, optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n\n    _this.name = \"Gain\";\n    /**\n     * The wrapped GainNode.\n     */\n\n    _this._gainNode = _this.context.createGain(); // input = output\n\n    _this.input = _this._gainNode;\n    _this.output = _this._gainNode;\n    var options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n    _this.gain = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._gainNode.gain,\n      units: options.units,\n      value: options.gain,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    readOnly(_this, \"gain\");\n    return _this;\n  }\n\n  Gain.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      gain: 1,\n      units: \"gain\"\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Gain.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.disconnect();\n\n    this.gain.dispose();\n    return this;\n  };\n\n  return Gain;\n}(ToneAudioNode);\n\nexport { Gain };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\n\nvar OneShotSource =\n/** @class */\nfunction (_super) {\n  __extends(OneShotSource, _super);\n\n  function OneShotSource(options) {\n    var _this = _super.call(this, options) || this;\n    /**\n     * The callback to invoke after the\n     * source is done playing.\n     */\n\n\n    _this.onended = noOp;\n    /**\n     * The start time\n     */\n\n    _this._startTime = -1;\n    /**\n     * The stop time\n     */\n\n    _this._stopTime = -1;\n    /**\n     * The id of the timeout\n     */\n\n    _this._timeout = -1;\n    /**\n     * The public output node\n     */\n\n    _this.output = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The output gain node.\n     */\n\n    _this._gainNode = _this.output;\n    /**\n     * Get the playback state at the given time\n     */\n\n    _this.getStateAtTime = function (time) {\n      var computedTime = this.toSeconds(time);\n\n      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {\n        return \"started\";\n      } else {\n        return \"stopped\";\n      }\n    };\n\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    _this._curve = options.curve;\n    _this.onended = options.onended;\n    return _this;\n  }\n\n  OneShotSource.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      curve: \"linear\",\n      fadeIn: 0,\n      fadeOut: 0,\n      onended: noOp\n    });\n  };\n  /**\n   * Start the source at the given time\n   * @param  time When to start the source\n   */\n\n\n  OneShotSource.prototype._startGain = function (time, gain) {\n    if (gain === void 0) {\n      gain = 1;\n    }\n\n    assert(this._startTime === -1, \"Source cannot be started more than once\"); // apply a fade in envelope\n\n    var fadeInTime = this.toSeconds(this._fadeIn); // record the start time\n\n    this._startTime = time + fadeInTime;\n    this._startTime = Math.max(this._startTime, this.context.currentTime); // schedule the envelope\n\n    if (fadeInTime > 0) {\n      this._gainNode.gain.setValueAtTime(0, time);\n\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n      } else {\n        this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n      }\n    } else {\n      this._gainNode.gain.setValueAtTime(gain, time);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the source node at the given time.\n   * @param time When to stop the source\n   */\n\n\n  OneShotSource.prototype.stop = function (time) {\n    this.log(\"stop\", time);\n\n    this._stopGain(this.toSeconds(time));\n\n    return this;\n  };\n  /**\n   * Stop the source at the given time\n   * @param  time When to stop the source\n   */\n\n\n  OneShotSource.prototype._stopGain = function (time) {\n    var _this = this;\n\n    assert(this._startTime !== -1, \"'start' must be called before 'stop'\"); // cancel the previous stop\n\n    this.cancelStop(); // the fadeOut time\n\n    var fadeOutTime = this.toSeconds(this._fadeOut); // schedule the stop callback\n\n    this._stopTime = this.toSeconds(time) + fadeOutTime;\n    this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\n    if (fadeOutTime > 0) {\n      // start the fade out curve at the given time\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n      } else {\n        this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n      }\n    } else {\n      // stop any ongoing ramps, and set the value to 0\n      this._gainNode.gain.cancelAndHoldAtTime(time);\n\n      this._gainNode.gain.setValueAtTime(0, time);\n    }\n\n    this.context.clearTimeout(this._timeout);\n    this._timeout = this.context.setTimeout(function () {\n      // allow additional time for the exponential curve to fully decay\n      var additionalTail = _this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\n      _this._stopSource(_this.now() + additionalTail);\n\n      _this._onended();\n    }, this._stopTime - this.context.currentTime);\n    return this;\n  };\n  /**\n   * Invoke the onended callback\n   */\n\n\n  OneShotSource.prototype._onended = function () {\n    var _this = this;\n\n    if (this.onended !== noOp) {\n      this.onended(this); // overwrite onended to make sure it only is called once\n\n      this.onended = noOp; // dispose when it's ended to free up for garbage collection only in the online context\n\n      if (!this.context.isOffline) {\n        setTimeout(function () {\n          return _this.dispose();\n        }, 1000);\n      }\n    }\n  };\n\n  Object.defineProperty(OneShotSource.prototype, \"state\", {\n    /**\n     * Get the playback state at the current time\n     */\n    get: function () {\n      return this.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Cancel a scheduled stop event\n   */\n\n  OneShotSource.prototype.cancelStop = function () {\n    this.log(\"cancelStop\");\n    assert(this._startTime !== -1, \"Source is not started\"); // cancel the stop envelope\n\n    this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\n    this.context.clearTimeout(this._timeout);\n    this._stopTime = -1;\n    return this;\n  };\n\n  OneShotSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.disconnect();\n\n    return this;\n  };\n\n  return OneShotSource;\n}(ToneAudioNode);\n\nexport { OneShotSource };","import { __extends } from \"tslib\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\n\nvar ToneConstantSource =\n/** @class */\nfunction (_super) {\n  __extends(ToneConstantSource, _super);\n\n  function ToneConstantSource() {\n    var _this = _super.call(this, optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"])) || this;\n\n    _this.name = \"ToneConstantSource\";\n    /**\n     * The signal generator\n     */\n\n    _this._source = _this.context.createConstantSource();\n    var options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n    connect(_this._source, _this._gainNode);\n    _this.offset = new Param({\n      context: _this.context,\n      convert: options.convert,\n      param: _this._source.offset,\n      units: options.units,\n      value: options.offset,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    return _this;\n  }\n\n  ToneConstantSource.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      convert: true,\n      offset: 1,\n      units: \"number\"\n    });\n  };\n  /**\n   * Start the source node at the given time\n   * @param  time When to start the source\n   */\n\n\n  ToneConstantSource.prototype.start = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    this._startGain(computedTime);\n\n    this._source.start(computedTime);\n\n    return this;\n  };\n\n  ToneConstantSource.prototype._stopSource = function (time) {\n    this._source.stop(time);\n  };\n\n  ToneConstantSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this.state === \"started\") {\n      this.stop();\n    }\n\n    this._source.disconnect();\n\n    this.offset.dispose();\n    return this;\n  };\n\n  return ToneConstantSource;\n}(OneShotSource);\n\nexport { ToneConstantSource };","import { __extends } from \"tslib\";\nimport { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\n\nvar Signal =\n/** @class */\nfunction (_super) {\n  __extends(Signal, _super);\n\n  function Signal() {\n    var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n\n    _this.name = \"Signal\";\n    /**\n     * Indicates if the value should be overridden on connection.\n     */\n\n    _this.override = true;\n    var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    _this.output = _this._constantSource = new ToneConstantSource({\n      context: _this.context,\n      convert: options.convert,\n      offset: options.value,\n      units: options.units,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n\n    _this._constantSource.start(0);\n\n    _this.input = _this._param = _this._constantSource.offset;\n    return _this;\n  }\n\n  Signal.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      units: \"number\",\n      value: 0\n    });\n  };\n\n  Signal.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    } // start it only when connected to something\n\n\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  };\n\n  Signal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._param.dispose();\n\n    this._constantSource.dispose();\n\n    return this;\n  }; //-------------------------------------\n  // ABSTRACT PARAM INTERFACE\n  // just a proxy for the ConstantSourceNode's offset AudioParam\n  // all docs are generated from AbstractParam.ts\n  //-------------------------------------\n\n\n  Signal.prototype.setValueAtTime = function (value, time) {\n    this._param.setValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.getValueAtTime = function (time) {\n    return this._param.getValueAtTime(time);\n  };\n\n  Signal.prototype.setRampPoint = function (time) {\n    this._param.setRampPoint(time);\n\n    return this;\n  };\n\n  Signal.prototype.linearRampToValueAtTime = function (value, time) {\n    this._param.linearRampToValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialRampToValueAtTime = function (value, time) {\n    this._param.exponentialRampToValueAtTime(value, time);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    this._param.exponentialRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.linearRampTo = function (value, rampTime, startTime) {\n    this._param.linearRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.targetRampTo = function (value, rampTime, startTime) {\n    this._param.targetRampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Signal.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n    this._param.exponentialApproachValueAtTime(value, time, rampTime);\n\n    return this;\n  };\n\n  Signal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    this._param.setTargetAtTime(value, startTime, timeConstant);\n\n    return this;\n  };\n\n  Signal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\n    return this;\n  };\n\n  Signal.prototype.cancelScheduledValues = function (time) {\n    this._param.cancelScheduledValues(time);\n\n    return this;\n  };\n\n  Signal.prototype.cancelAndHoldAtTime = function (time) {\n    this._param.cancelAndHoldAtTime(time);\n\n    return this;\n  };\n\n  Signal.prototype.rampTo = function (value, rampTime, startTime) {\n    this._param.rampTo(value, rampTime, startTime);\n\n    return this;\n  };\n\n  Object.defineProperty(Signal.prototype, \"value\", {\n    get: function () {\n      return this._param.value;\n    },\n    set: function (value) {\n      this._param.value = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"convert\", {\n    get: function () {\n      return this._param.convert;\n    },\n    set: function (convert) {\n      this._param.convert = convert;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"units\", {\n    get: function () {\n      return this._param.units;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"overridden\", {\n    get: function () {\n      return this._param.overridden;\n    },\n    set: function (overridden) {\n      this._param.overridden = overridden;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"maxValue\", {\n    get: function () {\n      return this._param.maxValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Signal.prototype, \"minValue\", {\n    get: function () {\n      return this._param.minValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * See [[Param.apply]].\n   */\n\n  Signal.prototype.apply = function (param) {\n    this._param.apply(param);\n\n    return this;\n  };\n\n  return Signal;\n}(ToneAudioNode);\n\nexport { Signal };\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\n\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n  if (destination instanceof Param || isAudioParam(destination) || destination instanceof Signal && destination.override) {\n    // cancel changes\n    destination.cancelScheduledValues(0); // reset the value\n\n    destination.setValueAtTime(0, 0); // mark the value as overridden\n\n    if (destination instanceof Signal) {\n      destination.overridden = true;\n    }\n  }\n\n  connect(signal, destination, outputNum, inputNum);\n}","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\n\nvar TickParam =\n/** @class */\nfunction (_super) {\n  __extends(TickParam, _super);\n\n  function TickParam() {\n    var _this = _super.call(this, optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"])) || this;\n\n    _this.name = \"TickParam\";\n    /**\n     * The timeline which tracks all of the automations.\n     */\n\n    _this._events = new Timeline(Infinity);\n    /**\n     * The internal holder for the multiplier value\n     */\n\n    _this._multiplier = 1;\n    var options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]); // set the multiplier\n\n    _this._multiplier = options.multiplier; // clear the ticks from the beginning\n\n    _this._events.cancel(0); // set an initial event\n\n\n    _this._events.add({\n      ticks: 0,\n      time: 0,\n      type: \"setValueAtTime\",\n      value: _this._fromType(options.value)\n    });\n\n    _this.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n\n  TickParam.getDefaults = function () {\n    return Object.assign(Param.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  };\n\n  TickParam.prototype.setTargetAtTime = function (value, time, constant) {\n    // approximate it with multiple linear ramps\n    time = this.toSeconds(time);\n    this.setRampPoint(time);\n\n    var computedValue = this._fromType(value); // start from previously scheduled value\n\n\n    var prevEvent = this._events.get(time);\n\n    var segments = Math.round(Math.max(1 / constant, 1));\n\n    for (var i = 0; i <= segments; i++) {\n      var segTime = constant * i + time;\n\n      var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n\n    return this;\n  };\n\n  TickParam.prototype.setValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    _super.prototype.setValueAtTime.call(this, value, time);\n\n    var event = this._events.get(computedTime);\n\n    var previousEvent = this._events.previousEvent(event);\n\n    var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  };\n\n  TickParam.prototype.linearRampToValueAtTime = function (value, time) {\n    var computedTime = this.toSeconds(time);\n\n    _super.prototype.linearRampToValueAtTime.call(this, value, time);\n\n    var event = this._events.get(computedTime);\n\n    var previousEvent = this._events.previousEvent(event);\n\n    var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  };\n\n  TickParam.prototype.exponentialRampToValueAtTime = function (value, time) {\n    // aproximate it with multiple linear ramps\n    time = this.toSeconds(time);\n\n    var computedVal = this._fromType(value); // start from previously scheduled value\n\n\n    var prevEvent = this._events.get(time); // approx 10 segments per second\n\n\n    var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n    var segmentDur = (time - prevEvent.time) / segments;\n\n    for (var i = 0; i <= segments; i++) {\n      var segTime = segmentDur * i + prevEvent.time;\n\n      var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n\n    return this;\n  };\n  /**\n   * Returns the tick value at the time. Takes into account\n   * any automation curves scheduled on the signal.\n   * @param  event The time to get the tick count at\n   * @return The number of ticks which have elapsed at the time given any automations.\n   */\n\n\n  TickParam.prototype._getTicksUntilEvent = function (event, time) {\n    if (event === null) {\n      event = {\n        ticks: 0,\n        time: 0,\n        type: \"setValueAtTime\",\n        value: 0\n      };\n    } else if (isUndef(event.ticks)) {\n      var previousEvent = this._events.previousEvent(event);\n\n      event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n    }\n\n    var val0 = this._fromType(this.getValueAtTime(event.time));\n\n    var val1 = this._fromType(this.getValueAtTime(time)); // if it's right on the line, take the previous value\n\n\n    var onTheLineEvent = this._events.get(time);\n\n    if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n      val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n    }\n\n    return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n  };\n  /**\n   * Returns the tick value at the time. Takes into account\n   * any automation curves scheduled on the signal.\n   * @param  time The time to get the tick count at\n   * @return The number of ticks which have elapsed at the time given any automations.\n   */\n\n\n  TickParam.prototype.getTicksAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    var event = this._events.get(computedTime);\n\n    return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n  };\n  /**\n   * Return the elapsed time of the number of ticks from the given time\n   * @param ticks The number of ticks to calculate\n   * @param  time The time to get the next tick from\n   * @return The duration of the number of ticks from the given time in seconds\n   */\n\n\n  TickParam.prototype.getDurationOfTicks = function (ticks, time) {\n    var computedTime = this.toSeconds(time);\n    var currentTick = this.getTicksAtTime(time);\n    return this.getTimeOfTick(currentTick + ticks) - computedTime;\n  };\n  /**\n   * Given a tick, returns the time that tick occurs at.\n   * @return The time that the tick occurs.\n   */\n\n\n  TickParam.prototype.getTimeOfTick = function (tick) {\n    var before = this._events.get(tick, \"ticks\");\n\n    var after = this._events.getAfter(tick, \"ticks\");\n\n    if (before && before.ticks === tick) {\n      return before.time;\n    } else if (before && after && after.type === \"linearRampToValueAtTime\" && before.value !== after.value) {\n      var val0 = this._fromType(this.getValueAtTime(before.time));\n\n      var val1 = this._fromType(this.getValueAtTime(after.time));\n\n      var delta = (val1 - val0) / (after.time - before.time);\n      var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n      var sol1 = (-val0 + k) / delta;\n      var sol2 = (-val0 - k) / delta;\n      return (sol1 > 0 ? sol1 : sol2) + before.time;\n    } else if (before) {\n      if (before.value === 0) {\n        return Infinity;\n      } else {\n        return before.time + (tick - before.ticks) / before.value;\n      }\n    } else {\n      return tick / this._initialValue;\n    }\n  };\n  /**\n   * Convert some number of ticks their the duration in seconds accounting\n   * for any automation curves starting at the given time.\n   * @param  ticks The number of ticks to convert to seconds.\n   * @param  when  When along the automation timeline to convert the ticks.\n   * @return The duration in seconds of the ticks.\n   */\n\n\n  TickParam.prototype.ticksToTime = function (ticks, when) {\n    return this.getDurationOfTicks(ticks, when);\n  };\n  /**\n   * The inverse of [[ticksToTime]]. Convert a duration in\n   * seconds to the corresponding number of ticks accounting for any\n   * automation curves starting at the given time.\n   * @param  duration The time interval to convert to ticks.\n   * @param  when When along the automation timeline to convert the ticks.\n   * @return The duration in ticks.\n   */\n\n\n  TickParam.prototype.timeToTicks = function (duration, when) {\n    var computedTime = this.toSeconds(when);\n    var computedDuration = this.toSeconds(duration);\n    var startTicks = this.getTicksAtTime(computedTime);\n    var endTicks = this.getTicksAtTime(computedTime + computedDuration);\n    return endTicks - startTicks;\n  };\n  /**\n   * Convert from the type when the unit value is BPM\n   */\n\n\n  TickParam.prototype._fromType = function (val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return 1 / (60 / val / this.multiplier);\n    } else {\n      return _super.prototype._fromType.call(this, val);\n    }\n  };\n  /**\n   * Special case of type conversion where the units === \"bpm\"\n   */\n\n\n  TickParam.prototype._toType = function (val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return val / this.multiplier * 60;\n    } else {\n      return _super.prototype._toType.call(this, val);\n    }\n  };\n\n  Object.defineProperty(TickParam.prototype, \"multiplier\", {\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get: function () {\n      return this._multiplier;\n    },\n    set: function (m) {\n      // get and reset the current value with the new multiplier\n      // might be necessary to clear all the previous values\n      var currentVal = this.value;\n      this._multiplier = m;\n      this.cancelScheduledValues(0);\n      this.setValueAtTime(currentVal, 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TickParam;\n}(Param);\n\nexport { TickParam };","import { __extends } from \"tslib\";\nimport { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\n\nvar TickSignal =\n/** @class */\nfunction (_super) {\n  __extends(TickSignal, _super);\n\n  function TickSignal() {\n    var _this = _super.call(this, optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"])) || this;\n\n    _this.name = \"TickSignal\";\n    var options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n    _this.input = _this._param = new TickParam({\n      context: _this.context,\n      convert: options.convert,\n      multiplier: options.multiplier,\n      param: _this._constantSource.offset,\n      units: options.units,\n      value: options.value\n    });\n    return _this;\n  }\n\n  TickSignal.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  };\n\n  TickSignal.prototype.ticksToTime = function (ticks, when) {\n    return this._param.ticksToTime(ticks, when);\n  };\n\n  TickSignal.prototype.timeToTicks = function (duration, when) {\n    return this._param.timeToTicks(duration, when);\n  };\n\n  TickSignal.prototype.getTimeOfTick = function (tick) {\n    return this._param.getTimeOfTick(tick);\n  };\n\n  TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n    return this._param.getDurationOfTicks(ticks, time);\n  };\n\n  TickSignal.prototype.getTicksAtTime = function (time) {\n    return this._param.getTicksAtTime(time);\n  };\n\n  Object.defineProperty(TickSignal.prototype, \"multiplier\", {\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get: function () {\n      return this._param.multiplier;\n    },\n    set: function (m) {\n      this._param.multiplier = m;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TickSignal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._param.dispose();\n\n    return this;\n  };\n\n  return TickSignal;\n}(Signal);\n\nexport { TickSignal };","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\n\nvar TickSource =\n/** @class */\nfunction (_super) {\n  __extends(TickSource, _super);\n\n  function TickSource() {\n    var _this = _super.call(this, optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"TickSource\";\n    /**\n     * The state timeline\n     */\n\n    _this._state = new StateTimeline();\n    /**\n     * The offset values of the ticks\n     */\n\n    _this._tickOffset = new Timeline();\n    var options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n    _this.frequency = new TickSignal({\n      context: _this.context,\n      units: options.units,\n      value: options.frequency\n    });\n    readOnly(_this, \"frequency\"); // set the initial state\n\n    _this._state.setStateAtTime(\"stopped\", 0); // add the first event\n\n\n    _this.setTicksAtTime(0, 0);\n\n    return _this;\n  }\n\n  TickSource.getDefaults = function () {\n    return Object.assign({\n      frequency: 1,\n      units: \"hertz\"\n    }, ToneWithContext.getDefaults());\n  };\n\n  Object.defineProperty(TickSource.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get: function () {\n      return this.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the clock at the given time. Optionally pass in an offset\n   * of where to start the tick counter from.\n   * @param  time    The time the clock should start\n   * @param offset The number of ticks to start the source at\n   */\n\n  TickSource.prototype.start = function (time, offset) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      if (isDefined(offset)) {\n        this.setTicksAtTime(offset, computedTime);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Stop the clock. Stopping the clock resets the tick counter to 0.\n   * @param time The time when the clock should stop.\n   */\n\n\n  TickSource.prototype.stop = function (time) {\n    var computedTime = this.toSeconds(time); // cancel the previous stop\n\n    if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n      var event_1 = this._state.get(computedTime);\n\n      if (event_1 && event_1.time > 0) {\n        this._tickOffset.cancel(event_1.time);\n\n        this._state.cancel(event_1.time);\n      }\n    }\n\n    this._state.cancel(computedTime);\n\n    this._state.setStateAtTime(\"stopped\", computedTime);\n\n    this.setTicksAtTime(0, computedTime);\n    return this;\n  };\n  /**\n   * Pause the clock. Pausing does not reset the tick counter.\n   * @param time The time when the clock should stop.\n   */\n\n\n  TickSource.prototype.pause = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n   * @param time When to clear the events after\n   */\n\n\n  TickSource.prototype.cancel = function (time) {\n    time = this.toSeconds(time);\n\n    this._state.cancel(time);\n\n    this._tickOffset.cancel(time);\n\n    return this;\n  };\n  /**\n   * Get the elapsed ticks at the given time\n   * @param  time  When to get the tick value\n   * @return The number of ticks\n   */\n\n\n  TickSource.prototype.getTicksAtTime = function (time) {\n    var _this = this;\n\n    var computedTime = this.toSeconds(time);\n\n    var stopEvent = this._state.getLastState(\"stopped\", computedTime); // this event allows forEachBetween to iterate until the current time\n\n\n    var tmpEvent = {\n      state: \"paused\",\n      time: computedTime\n    };\n\n    this._state.add(tmpEvent); // keep track of the previous offset event\n\n\n    var lastState = stopEvent;\n    var elapsedTicks = 0; // iterate through all the events since the last stop\n\n    this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {\n      var periodStartTime = lastState.time; // if there is an offset event in this period use that\n\n      var offsetEvent = _this._tickOffset.get(e.time);\n\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedTicks = offsetEvent.ticks;\n        periodStartTime = offsetEvent.time;\n      }\n\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedTicks += _this.frequency.getTicksAtTime(e.time) - _this.frequency.getTicksAtTime(periodStartTime);\n      }\n\n      lastState = e;\n    }); // remove the temporary event\n\n\n    this._state.remove(tmpEvent); // return the ticks\n\n\n    return elapsedTicks;\n  };\n\n  Object.defineProperty(TickSource.prototype, \"ticks\", {\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get: function () {\n      return this.getTicksAtTime(this.now());\n    },\n    set: function (t) {\n      this.setTicksAtTime(t, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TickSource.prototype, \"seconds\", {\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get: function () {\n      return this.getSecondsAtTime(this.now());\n    },\n    set: function (s) {\n      var now = this.now();\n      var ticks = this.frequency.timeToTicks(s, now);\n      this.setTicksAtTime(ticks, now);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n  TickSource.prototype.getSecondsAtTime = function (time) {\n    var _this = this;\n\n    time = this.toSeconds(time);\n\n    var stopEvent = this._state.getLastState(\"stopped\", time); // this event allows forEachBetween to iterate until the current time\n\n\n    var tmpEvent = {\n      state: \"paused\",\n      time: time\n    };\n\n    this._state.add(tmpEvent); // keep track of the previous offset event\n\n\n    var lastState = stopEvent;\n    var elapsedSeconds = 0; // iterate through all the events since the last stop\n\n    this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {\n      var periodStartTime = lastState.time; // if there is an offset event in this period use that\n\n      var offsetEvent = _this._tickOffset.get(e.time);\n\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedSeconds = offsetEvent.seconds;\n        periodStartTime = offsetEvent.time;\n      }\n\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedSeconds += e.time - periodStartTime;\n      }\n\n      lastState = e;\n    }); // remove the temporary event\n\n\n    this._state.remove(tmpEvent); // return the ticks\n\n\n    return elapsedSeconds;\n  };\n  /**\n   * Set the clock's ticks at the given time.\n   * @param  ticks The tick value to set\n   * @param  time  When to set the tick value\n   */\n\n\n  TickSource.prototype.setTicksAtTime = function (ticks, time) {\n    time = this.toSeconds(time);\n\n    this._tickOffset.cancel(time);\n\n    this._tickOffset.add({\n      seconds: this.frequency.getDurationOfTicks(ticks, time),\n      ticks: ticks,\n      time: time\n    });\n\n    return this;\n  };\n  /**\n   * Returns the scheduled state at the given time.\n   * @param  time  The time to query.\n   */\n\n\n  TickSource.prototype.getStateAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this._state.getValueAtTime(time);\n  };\n  /**\n   * Get the time of the given tick. The second argument\n   * is when to test before. Since ticks can be set (with setTicksAtTime)\n   * there may be multiple times for a given tick value.\n   * @param  tick The tick number.\n   * @param  before When to measure the tick value from.\n   * @return The time of the tick\n   */\n\n\n  TickSource.prototype.getTimeOfTick = function (tick, before) {\n    if (before === void 0) {\n      before = this.now();\n    }\n\n    var offset = this._tickOffset.get(before);\n\n    var event = this._state.get(before);\n\n    var startTime = Math.max(offset.time, event.time);\n    var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n    return this.frequency.getTimeOfTick(absoluteTicks);\n  };\n  /**\n   * Invoke the callback event at all scheduled ticks between the\n   * start time and the end time\n   * @param  startTime  The beginning of the search range\n   * @param  endTime    The end of the search range\n   * @param  callback   The callback to invoke with each tick\n   */\n\n\n  TickSource.prototype.forEachTickBetween = function (startTime, endTime, callback) {\n    var _this = this; // only iterate through the sections where it is \"started\"\n\n\n    var lastStateEvent = this._state.get(startTime);\n\n    this._state.forEachBetween(startTime, endTime, function (event) {\n      if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n        _this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - _this.sampleTime, callback);\n      }\n\n      lastStateEvent = event;\n    });\n\n    var error = null;\n\n    if (lastStateEvent && lastStateEvent.state === \"started\") {\n      var maxStartTime = Math.max(lastStateEvent.time, startTime); // figure out the difference between the frequency ticks and the\n\n      var startTicks = this.frequency.getTicksAtTime(maxStartTime);\n      var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n      var diff = startTicks - ticksAtStart;\n      var offset = Math.ceil(diff) - diff; // guard against floating point issues\n\n      offset = EQ(offset, 1) ? 0 : offset;\n      var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\n      while (nextTickTime < endTime) {\n        try {\n          callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n        } catch (e) {\n          error = e;\n          break;\n        }\n\n        nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n      }\n    }\n\n    if (error) {\n      throw error;\n    }\n\n    return this;\n  };\n  /**\n   * Clean up\n   */\n\n\n  TickSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._state.dispose();\n\n    this._tickOffset.dispose();\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return TickSource;\n}(ToneWithContext);\n\nexport { TickSource };","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\n\nvar Clock =\n/** @class */\nfunction (_super) {\n  __extends(Clock, _super);\n\n  function Clock() {\n    var _this = _super.call(this, optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"])) || this;\n\n    _this.name = \"Clock\";\n    /**\n     * The callback function to invoke at the scheduled tick.\n     */\n\n    _this.callback = noOp;\n    /**\n     * The last time the loop callback was invoked\n     */\n\n    _this._lastUpdate = 0;\n    /**\n     * Keep track of the playback state\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * Context bound reference to the _loop method\n     * This is necessary to remove the event in the end.\n     */\n\n    _this._boundLoop = _this._loop.bind(_this);\n    var options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n    _this.callback = options.callback;\n    _this._tickSource = new TickSource({\n      context: _this.context,\n      frequency: options.frequency,\n      units: options.units\n    });\n    _this._lastUpdate = 0;\n    _this.frequency = _this._tickSource.frequency;\n    readOnly(_this, \"frequency\"); // add an initial state\n\n    _this._state.setStateAtTime(\"stopped\", 0); // bind a callback to the worker thread\n\n\n    _this.context.on(\"tick\", _this._boundLoop);\n\n    return _this;\n  }\n\n  Clock.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      frequency: 1,\n      units: \"hertz\"\n    });\n  };\n\n  Object.defineProperty(Clock.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get: function () {\n      return this._state.getValueAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the clock at the given time. Optionally pass in an offset\n   * of where to start the tick counter from.\n   * @param  time    The time the clock should start\n   * @param offset  Where the tick counter starts counting from.\n   */\n\n  Clock.prototype.start = function (time, offset) {\n    // make sure the context is running\n    assertContextRunning(this.context); // start the loop\n\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      this._tickSource.start(computedTime, offset);\n\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"start\", computedTime, offset);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Stop the clock. Stopping the clock resets the tick counter to 0.\n   * @param time The time when the clock should stop.\n   * @example\n   * const clock = new Tone.Clock(time => {\n   * \tconsole.log(time);\n   * }, 1);\n   * clock.start();\n   * // stop the clock after 10 seconds\n   * clock.stop(\"+10\");\n   */\n\n\n  Clock.prototype.stop = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"stop\", computedTime);\n\n    this._state.cancel(computedTime);\n\n    this._state.setStateAtTime(\"stopped\", computedTime);\n\n    this._tickSource.stop(computedTime);\n\n    if (computedTime < this._lastUpdate) {\n      this.emit(\"stop\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Pause the clock. Pausing does not reset the tick counter.\n   * @param time The time when the clock should stop.\n   */\n\n\n  Clock.prototype.pause = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n\n      this._tickSource.pause(computedTime);\n\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"pause\", computedTime);\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Clock.prototype, \"ticks\", {\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get: function () {\n      return Math.ceil(this.getTicksAtTime(this.now()));\n    },\n    set: function (t) {\n      this._tickSource.ticks = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Clock.prototype, \"seconds\", {\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get: function () {\n      return this._tickSource.seconds;\n    },\n    set: function (s) {\n      this._tickSource.seconds = s;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n  Clock.prototype.getSecondsAtTime = function (time) {\n    return this._tickSource.getSecondsAtTime(time);\n  };\n  /**\n   * Set the clock's ticks at the given time.\n   * @param  ticks The tick value to set\n   * @param  time  When to set the tick value\n   */\n\n\n  Clock.prototype.setTicksAtTime = function (ticks, time) {\n    this._tickSource.setTicksAtTime(ticks, time);\n\n    return this;\n  };\n  /**\n   * Get the time of the given tick. The second argument\n   * is when to test before. Since ticks can be set (with setTicksAtTime)\n   * there may be multiple times for a given tick value.\n   * @param  tick The tick number.\n   * @param  before When to measure the tick value from.\n   * @return The time of the tick\n   */\n\n\n  Clock.prototype.getTimeOfTick = function (tick, before) {\n    if (before === void 0) {\n      before = this.now();\n    }\n\n    return this._tickSource.getTimeOfTick(tick, before);\n  };\n  /**\n   * Get the clock's ticks at the given time.\n   * @param  time  When to get the tick value\n   * @return The tick value at the given time.\n   */\n\n\n  Clock.prototype.getTicksAtTime = function (time) {\n    return this._tickSource.getTicksAtTime(time);\n  };\n  /**\n   * Get the time of the next tick\n   * @param  offset The tick number.\n   */\n\n\n  Clock.prototype.nextTickTime = function (offset, when) {\n    var computedTime = this.toSeconds(when);\n    var currentTick = this.getTicksAtTime(computedTime);\n    return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n  };\n  /**\n   * The scheduling loop.\n   */\n\n\n  Clock.prototype._loop = function () {\n    var _this = this;\n\n    var startTime = this._lastUpdate;\n    var endTime = this.now();\n    this._lastUpdate = endTime;\n    this.log(\"loop\", startTime, endTime);\n\n    if (startTime !== endTime) {\n      // the state change events\n      this._state.forEachBetween(startTime, endTime, function (e) {\n        switch (e.state) {\n          case \"started\":\n            var offset = _this._tickSource.getTicksAtTime(e.time);\n\n            _this.emit(\"start\", e.time, offset);\n\n            break;\n\n          case \"stopped\":\n            if (e.time !== 0) {\n              _this.emit(\"stop\", e.time);\n            }\n\n            break;\n\n          case \"paused\":\n            _this.emit(\"pause\", e.time);\n\n            break;\n        }\n      }); // the tick callbacks\n\n\n      this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {\n        _this.callback(time, ticks);\n      });\n    }\n  };\n  /**\n   * Returns the scheduled state at the given time.\n   * @param  time  The time to query.\n   * @return  The name of the state input in setStateAtTime.\n   * @example\n   * const clock = new Tone.Clock();\n   * clock.start(\"+0.1\");\n   * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n   */\n\n\n  Clock.prototype.getStateAtTime = function (time) {\n    var computedTime = this.toSeconds(time);\n    return this._state.getValueAtTime(computedTime);\n  };\n  /**\n   * Clean up\n   */\n\n\n  Clock.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.context.off(\"tick\", this._boundLoop);\n\n    this._tickSource.dispose();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return Clock;\n}(ToneWithContext);\n\nexport { Clock };\nEmitter.mixin(Clock);","import { __extends } from \"tslib\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nvar TimelineValue =\n/** @class */\nfunction (_super) {\n  __extends(TimelineValue, _super);\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n\n\n  function TimelineValue(initialValue) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    _this._timeline = new Timeline({\n      memory: 10\n    });\n    _this._initialValue = initialValue;\n    return _this;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  TimelineValue.prototype.set = function (value, time) {\n    this._timeline.add({\n      value: value,\n      time: time\n    });\n\n    return this;\n  };\n  /**\n   * Get the value at the given time\n   */\n\n\n  TimelineValue.prototype.get = function (time) {\n    var event = this._timeline.get(time);\n\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  };\n\n  return TimelineValue;\n}(Tone);\n\nexport { TimelineValue };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\n\nvar TicksClass =\n/** @class */\nfunction (_super) {\n  __extends(TicksClass, _super);\n\n  function TicksClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Ticks\";\n    _this.defaultUnits = \"i\";\n    return _this;\n  }\n  /**\n   * Get the current time in the given units\n   */\n\n\n  TicksClass.prototype._now = function () {\n    return this.context.transport.ticks;\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  TicksClass.prototype._beatsToUnits = function (beats) {\n    return this._getPPQ() * beats;\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  TicksClass.prototype._secondsToUnits = function (seconds) {\n    return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  TicksClass.prototype._ticksToUnits = function (ticks) {\n    return ticks;\n  };\n  /**\n   * Return the time in ticks\n   */\n\n\n  TicksClass.prototype.toTicks = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the time in seconds\n   */\n\n\n  TicksClass.prototype.toSeconds = function () {\n    return this.valueOf() / this._getPPQ() * (60 / this._getBpm());\n  };\n\n  return TicksClass;\n}(TransportTimeClass);\n\nexport { TicksClass };\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\n\nexport function Ticks(value, units) {\n  return new TicksClass(getContext(), value, units);\n}","import { __extends, __values } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\n\nvar IntervalTimeline =\n/** @class */\nfunction (_super) {\n  __extends(IntervalTimeline, _super);\n\n  function IntervalTimeline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"IntervalTimeline\";\n    /**\n     * The root node of the inteval tree\n     */\n\n    _this._root = null;\n    /**\n     * Keep track of the length of the timeline.\n     */\n\n    _this._length = 0;\n    return _this;\n  }\n  /**\n   * The event to add to the timeline. All events must\n   * have a time and duration value\n   * @param  event  The event to add to the timeline\n   */\n\n\n  IntervalTimeline.prototype.add = function (event) {\n    assert(isDefined(event.time), \"Events must have a time property\");\n    assert(isDefined(event.duration), \"Events must have a duration parameter\");\n    event.time = event.time.valueOf();\n    var node = new IntervalNode(event.time, event.time + event.duration, event);\n\n    if (this._root === null) {\n      this._root = node;\n    } else {\n      this._root.insert(node);\n    }\n\n    this._length++; // Restructure tree to be balanced\n\n    while (node !== null) {\n      node.updateHeight();\n      node.updateMax();\n\n      this._rebalance(node);\n\n      node = node.parent;\n    }\n\n    return this;\n  };\n  /**\n   * Remove an event from the timeline.\n   * @param  event  The event to remove from the timeline\n   */\n\n\n  IntervalTimeline.prototype.remove = function (event) {\n    var e_1, _a;\n\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(event.time, results);\n\n      try {\n        for (var results_1 = __values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {\n          var node = results_1_1.value;\n\n          if (node.event === event) {\n            this._removeNode(node);\n\n            this._length--;\n            break;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(IntervalTimeline.prototype, \"length\", {\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get: function () {\n      return this._length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Remove events whose time time is after the given time\n   * @param  after  The time to query.\n   */\n\n  IntervalTimeline.prototype.cancel = function (after) {\n    var _this = this;\n\n    this.forEachFrom(after, function (event) {\n      return _this.remove(event);\n    });\n    return this;\n  };\n  /**\n   * Set the root node as the given node\n   */\n\n\n  IntervalTimeline.prototype._setRoot = function (node) {\n    this._root = node;\n\n    if (this._root !== null) {\n      this._root.parent = null;\n    }\n  };\n  /**\n   * Replace the references to the node in the node's parent\n   * with the replacement node.\n   */\n\n\n  IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n    if (node.parent !== null) {\n      if (node.isLeftChild()) {\n        node.parent.left = replacement;\n      } else {\n        node.parent.right = replacement;\n      }\n\n      this._rebalance(node.parent);\n    } else {\n      this._setRoot(replacement);\n    }\n  };\n  /**\n   * Remove the node from the tree and replace it with\n   * a successor which follows the schema.\n   */\n\n\n  IntervalTimeline.prototype._removeNode = function (node) {\n    if (node.left === null && node.right === null) {\n      this._replaceNodeInParent(node, null);\n    } else if (node.right === null) {\n      this._replaceNodeInParent(node, node.left);\n    } else if (node.left === null) {\n      this._replaceNodeInParent(node, node.right);\n    } else {\n      var balance = node.getBalance();\n      var replacement = void 0;\n      var temp = null;\n\n      if (balance > 0) {\n        if (node.left.right === null) {\n          replacement = node.left;\n          replacement.right = node.right;\n          temp = replacement;\n        } else {\n          replacement = node.left.right;\n\n          while (replacement.right !== null) {\n            replacement = replacement.right;\n          }\n\n          if (replacement.parent) {\n            replacement.parent.right = replacement.left;\n            temp = replacement.parent;\n            replacement.left = node.left;\n            replacement.right = node.right;\n          }\n        }\n      } else if (node.right.left === null) {\n        replacement = node.right;\n        replacement.left = node.left;\n        temp = replacement;\n      } else {\n        replacement = node.right.left;\n\n        while (replacement.left !== null) {\n          replacement = replacement.left;\n        }\n\n        if (replacement.parent) {\n          replacement.parent.left = replacement.right;\n          temp = replacement.parent;\n          replacement.left = node.left;\n          replacement.right = node.right;\n        }\n      }\n\n      if (node.parent !== null) {\n        if (node.isLeftChild()) {\n          node.parent.left = replacement;\n        } else {\n          node.parent.right = replacement;\n        }\n      } else {\n        this._setRoot(replacement);\n      }\n\n      if (temp) {\n        this._rebalance(temp);\n      }\n    }\n\n    node.dispose();\n  };\n  /**\n   * Rotate the tree to the left\n   */\n\n\n  IntervalTimeline.prototype._rotateLeft = function (node) {\n    var parent = node.parent;\n    var isLeftChild = node.isLeftChild(); // Make node.right the new root of this sub tree (instead of node)\n\n    var pivotNode = node.right;\n\n    if (pivotNode) {\n      node.right = pivotNode.left;\n      pivotNode.left = node;\n    }\n\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  };\n  /**\n   * Rotate the tree to the right\n   */\n\n\n  IntervalTimeline.prototype._rotateRight = function (node) {\n    var parent = node.parent;\n    var isLeftChild = node.isLeftChild(); // Make node.left the new root of this sub tree (instead of node)\n\n    var pivotNode = node.left;\n\n    if (pivotNode) {\n      node.left = pivotNode.right;\n      pivotNode.right = node;\n    }\n\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  };\n  /**\n   * Balance the BST\n   */\n\n\n  IntervalTimeline.prototype._rebalance = function (node) {\n    var balance = node.getBalance();\n\n    if (balance > 1 && node.left) {\n      if (node.left.getBalance() < 0) {\n        this._rotateLeft(node.left);\n      } else {\n        this._rotateRight(node);\n      }\n    } else if (balance < -1 && node.right) {\n      if (node.right.getBalance() > 0) {\n        this._rotateRight(node.right);\n      } else {\n        this._rotateLeft(node);\n      }\n    }\n  };\n  /**\n   * Get an event whose time and duration span the give time. Will\n   * return the match whose \"time\" value is closest to the given time.\n   * @return  The event which spans the desired time\n   */\n\n\n  IntervalTimeline.prototype.get = function (time) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(time, results);\n\n      if (results.length > 0) {\n        var max = results[0];\n\n        for (var i = 1; i < results.length; i++) {\n          if (results[i].low > max.low) {\n            max = results[i];\n          }\n        }\n\n        return max.event;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Iterate over everything in the timeline.\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEach = function (callback) {\n    if (this._root !== null) {\n      var allNodes_1 = [];\n\n      this._root.traverse(function (node) {\n        return allNodes_1.push(node);\n      });\n\n      allNodes_1.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array in which the given time\n   * overlaps with the time and duration time of the event.\n   * @param  time The time to check if items are overlapping\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.search(time, results);\n\n      results.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over everything in the array in which the time is greater\n   * than or equal to the given time.\n   * @param  time The time to check if items are before\n   * @param  callback The callback to invoke with every item\n   */\n\n\n  IntervalTimeline.prototype.forEachFrom = function (time, callback) {\n    if (this._root !== null) {\n      var results = [];\n\n      this._root.searchAfter(time, results);\n\n      results.forEach(function (node) {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Clean up\n   */\n\n\n  IntervalTimeline.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._root !== null) {\n      this._root.traverse(function (node) {\n        return node.dispose();\n      });\n    }\n\n    this._root = null;\n    return this;\n  };\n\n  return IntervalTimeline;\n}(Tone);\n\nexport { IntervalTimeline }; //-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\n\nvar IntervalNode =\n/** @class */\nfunction () {\n  function IntervalNode(low, high, event) {\n    // the nodes to the left\n    this._left = null; // the nodes to the right\n\n    this._right = null; // the parent node\n\n    this.parent = null; // the number of child nodes\n\n    this.height = 0;\n    this.event = event; // the low value\n\n    this.low = low; // the high value\n\n    this.high = high; // the high value for this and all child nodes\n\n    this.max = this.high;\n  }\n  /**\n   * Insert a node into the correct spot in the tree\n   */\n\n\n  IntervalNode.prototype.insert = function (node) {\n    if (node.low <= this.low) {\n      if (this.left === null) {\n        this.left = node;\n      } else {\n        this.left.insert(node);\n      }\n    } else if (this.right === null) {\n      this.right = node;\n    } else {\n      this.right.insert(node);\n    }\n  };\n  /**\n   * Search the tree for nodes which overlap\n   * with the given point\n   * @param  point  The point to query\n   * @param  results  The array to put the results\n   */\n\n\n  IntervalNode.prototype.search = function (point, results) {\n    // If p is to the right of the rightmost point of any interval\n    // in this node and all children, there won't be any matches.\n    if (point > this.max) {\n      return;\n    } // Search left children\n\n\n    if (this.left !== null) {\n      this.left.search(point, results);\n    } // Check this node\n\n\n    if (this.low <= point && this.high > point) {\n      results.push(this);\n    } // If p is to the left of the time of this interval,\n    // then it can't be in any child to the right.\n\n\n    if (this.low > point) {\n      return;\n    } // Search right children\n\n\n    if (this.right !== null) {\n      this.right.search(point, results);\n    }\n  };\n  /**\n   * Search the tree for nodes which are less\n   * than the given point\n   * @param  point  The point to query\n   * @param  results  The array to put the results\n   */\n\n\n  IntervalNode.prototype.searchAfter = function (point, results) {\n    // Check this node\n    if (this.low >= point) {\n      results.push(this);\n\n      if (this.left !== null) {\n        this.left.searchAfter(point, results);\n      }\n    } // search the right side\n\n\n    if (this.right !== null) {\n      this.right.searchAfter(point, results);\n    }\n  };\n  /**\n   * Invoke the callback on this element and both it's branches\n   * @param  {Function}  callback\n   */\n\n\n  IntervalNode.prototype.traverse = function (callback) {\n    callback(this);\n\n    if (this.left !== null) {\n      this.left.traverse(callback);\n    }\n\n    if (this.right !== null) {\n      this.right.traverse(callback);\n    }\n  };\n  /**\n   * Update the height of the node\n   */\n\n\n  IntervalNode.prototype.updateHeight = function () {\n    if (this.left !== null && this.right !== null) {\n      this.height = Math.max(this.left.height, this.right.height) + 1;\n    } else if (this.right !== null) {\n      this.height = this.right.height + 1;\n    } else if (this.left !== null) {\n      this.height = this.left.height + 1;\n    } else {\n      this.height = 0;\n    }\n  };\n  /**\n   * Update the height of the node\n   */\n\n\n  IntervalNode.prototype.updateMax = function () {\n    this.max = this.high;\n\n    if (this.left !== null) {\n      this.max = Math.max(this.max, this.left.max);\n    }\n\n    if (this.right !== null) {\n      this.max = Math.max(this.max, this.right.max);\n    }\n  };\n  /**\n   * The balance is how the leafs are distributed on the node\n   * @return  Negative numbers are balanced to the right\n   */\n\n\n  IntervalNode.prototype.getBalance = function () {\n    var balance = 0;\n\n    if (this.left !== null && this.right !== null) {\n      balance = this.left.height - this.right.height;\n    } else if (this.left !== null) {\n      balance = this.left.height + 1;\n    } else if (this.right !== null) {\n      balance = -(this.right.height + 1);\n    }\n\n    return balance;\n  };\n  /**\n   * @returns true if this node is the left child of its parent\n   */\n\n\n  IntervalNode.prototype.isLeftChild = function () {\n    return this.parent !== null && this.parent.left === this;\n  };\n\n  Object.defineProperty(IntervalNode.prototype, \"left\", {\n    /**\n     * get/set the left node\n     */\n    get: function () {\n      return this._left;\n    },\n    set: function (node) {\n      this._left = node;\n\n      if (node !== null) {\n        node.parent = this;\n      }\n\n      this.updateHeight();\n      this.updateMax();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IntervalNode.prototype, \"right\", {\n    /**\n     * get/set the right node\n     */\n    get: function () {\n      return this._right;\n    },\n    set: function (node) {\n      this._right = node;\n\n      if (node !== null) {\n        node.parent = this;\n      }\n\n      this.updateHeight();\n      this.updateMax();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * null out references.\n   */\n\n  IntervalNode.prototype.dispose = function () {\n    this.parent = null;\n    this._left = null;\n    this._right = null;\n    this.event = null;\n  };\n\n  return IntervalNode;\n}();","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\n\nvar TransportEvent =\n/** @class */\nfunction () {\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n  function TransportEvent(transport, opts) {\n    /**\n     * The unique id of the event\n     */\n    this.id = TransportEvent._eventId++;\n    var options = Object.assign(TransportEvent.getDefaults(), opts);\n    this.transport = transport;\n    this.callback = options.callback;\n    this._once = options.once;\n    this.time = options.time;\n  }\n\n  TransportEvent.getDefaults = function () {\n    return {\n      callback: noOp,\n      once: false,\n      time: 0\n    };\n  };\n  /**\n   * Invoke the event callback.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n\n\n  TransportEvent.prototype.invoke = function (time) {\n    if (this.callback) {\n      this.callback(time);\n\n      if (this._once) {\n        this.transport.clear(this.id);\n      }\n    }\n  };\n  /**\n   * Clean up\n   */\n\n\n  TransportEvent.prototype.dispose = function () {\n    this.callback = undefined;\n    return this;\n  };\n  /**\n   * Current ID counter\n   */\n\n\n  TransportEvent._eventId = 0;\n  return TransportEvent;\n}();\n\nexport { TransportEvent };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\n\nvar TransportRepeatEvent =\n/** @class */\nfunction (_super) {\n  __extends(TransportRepeatEvent, _super);\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n\n\n  function TransportRepeatEvent(transport, opts) {\n    var _this = _super.call(this, transport, opts) || this;\n    /**\n     * The ID of the current timeline event\n     */\n\n\n    _this._currentId = -1;\n    /**\n     * The ID of the next timeline event\n     */\n\n    _this._nextId = -1;\n    /**\n     * The time of the next event\n     */\n\n    _this._nextTick = _this.time;\n    /**\n     * a reference to the bound start method\n     */\n\n    _this._boundRestart = _this._restart.bind(_this);\n    var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n    _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n    _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n    _this._nextTick = options.time;\n\n    _this.transport.on(\"start\", _this._boundRestart);\n\n    _this.transport.on(\"loopStart\", _this._boundRestart);\n\n    _this.context = _this.transport.context;\n\n    _this._restart();\n\n    return _this;\n  }\n\n  TransportRepeatEvent.getDefaults = function () {\n    return Object.assign({}, TransportEvent.getDefaults(), {\n      duration: Infinity,\n      interval: 1,\n      once: false\n    });\n  };\n  /**\n   * Invoke the callback. Returns the tick time which\n   * the next event should be scheduled at.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n\n\n  TransportRepeatEvent.prototype.invoke = function (time) {\n    // create more events if necessary\n    this._createEvents(time); // call the super class\n\n\n    _super.prototype.invoke.call(this, time);\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._createEvents = function (time) {\n    // schedule the next event\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n      this._nextTick += this._interval;\n      this._currentId = this._nextId;\n      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n  };\n  /**\n   * Push more events onto the timeline to keep up with the position of the timeline\n   */\n\n\n  TransportRepeatEvent.prototype._restart = function (time) {\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this._nextTick = this.time;\n    var ticks = this.transport.getTicksAtTime(time);\n\n    if (ticks > this.time) {\n      this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n    }\n\n    this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    this._nextTick += this._interval;\n    this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n  };\n  /**\n   * Clean up\n   */\n\n\n  TransportRepeatEvent.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this.transport.off(\"start\", this._boundRestart);\n    this.transport.off(\"loopStart\", this._boundRestart);\n    return this;\n  };\n\n  return TransportRepeatEvent;\n}(TransportEvent);\n\nexport { TransportRepeatEvent };","import { __extends } from \"tslib\";\nimport { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\n\nvar Transport =\n/** @class */\nfunction (_super) {\n  __extends(Transport, _super);\n\n  function Transport() {\n    var _this = _super.call(this, optionsFromArguments(Transport.getDefaults(), arguments)) || this;\n\n    _this.name = \"Transport\"; //-------------------------------------\n    // \tLOOPING\n    //-------------------------------------\n\n    /**\n     * If the transport loops or not.\n     */\n\n    _this._loop = new TimelineValue(false);\n    /**\n     * The loop start position in ticks\n     */\n\n    _this._loopStart = 0;\n    /**\n     * The loop end position in ticks\n     */\n\n    _this._loopEnd = 0; //-------------------------------------\n    // \tTIMELINE EVENTS\n    //-------------------------------------\n\n    /**\n     * All the events in an object to keep track by ID\n     */\n\n    _this._scheduledEvents = {};\n    /**\n     * The scheduled events.\n     */\n\n    _this._timeline = new Timeline();\n    /**\n     * Repeated events\n     */\n\n    _this._repeatedEvents = new IntervalTimeline();\n    /**\n     * All of the synced Signals\n     */\n\n    _this._syncedSignals = [];\n    /**\n     * The swing amount\n     */\n\n    _this._swingAmount = 0;\n    var options = optionsFromArguments(Transport.getDefaults(), arguments); // CLOCK/TEMPO\n\n    _this._ppq = options.ppq;\n    _this._clock = new Clock({\n      callback: _this._processTick.bind(_this),\n      context: _this.context,\n      frequency: 0,\n      units: \"bpm\"\n    });\n\n    _this._bindClockEvents();\n\n    _this.bpm = _this._clock.frequency;\n    _this._clock.frequency.multiplier = options.ppq;\n\n    _this.bpm.setValueAtTime(options.bpm, 0);\n\n    readOnly(_this, \"bpm\");\n    _this._timeSignature = options.timeSignature; // SWING\n\n    _this._swingTicks = options.ppq / 2; // 8n\n\n    return _this;\n  }\n\n  Transport.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      bpm: 120,\n      loopEnd: \"4m\",\n      loopStart: 0,\n      ppq: 192,\n      swing: 0,\n      swingSubdivision: \"8n\",\n      timeSignature: 4\n    });\n  }; //-------------------------------------\n  // \tTICKS\n  //-------------------------------------\n\n  /**\n   * called on every tick\n   * @param  tickTime clock relative tick time\n   */\n\n\n  Transport.prototype._processTick = function (tickTime, ticks) {\n    // handle swing\n    if (this._swingAmount > 0 && ticks % this._ppq !== 0 && // not on a downbeat\n    ticks % (this._swingTicks * 2) !== 0) {\n      // add some swing\n      var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\n      var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\n      tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n    } // do the loop test\n\n\n    if (this._loop.get(tickTime)) {\n      if (ticks >= this._loopEnd) {\n        this.emit(\"loopEnd\", tickTime);\n\n        this._clock.setTicksAtTime(this._loopStart, tickTime);\n\n        ticks = this._loopStart;\n        this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n        this.emit(\"loop\", tickTime);\n      }\n    } // invoke the timeline events scheduled on this tick\n\n\n    this._timeline.forEachAtTime(ticks, function (event) {\n      return event.invoke(tickTime);\n    });\n  }; //-------------------------------------\n  // \tSCHEDULABLE EVENTS\n  //-------------------------------------\n\n  /**\n   * Schedule an event along the timeline.\n   * @param callback The callback to be invoked at the time.\n   * @param time The time to invoke the callback at.\n   * @return The id of the event which can be used for canceling the event.\n   * @example\n   * // schedule an event on the 16th measure\n   * Tone.Transport.schedule((time) => {\n   * \t// invoked on measure 16\n   * \tconsole.log(\"measure 16!\");\n   * }, \"16:0:0\");\n   */\n\n\n  Transport.prototype.schedule = function (callback, time) {\n    var event = new TransportEvent(this, {\n      callback: callback,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  };\n  /**\n   * Schedule a repeated event along the timeline. The event will fire\n   * at the `interval` starting at the `startTime` and for the specified\n   * `duration`.\n   * @param  callback   The callback to invoke.\n   * @param  interval   The duration between successive callbacks. Must be a positive number.\n   * @param  startTime  When along the timeline the events should start being invoked.\n   * @param  duration How long the event should repeat.\n   * @return  The ID of the scheduled event. Use this to cancel the event.\n   * @example\n   * const osc = new Tone.Oscillator().toDestination().start();\n   * // a callback invoked every eighth note after the first measure\n   * Tone.Transport.scheduleRepeat((time) => {\n   * \tosc.start(time).stop(time + 0.1);\n   * }, \"8n\", \"1m\");\n   */\n\n\n  Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n    if (duration === void 0) {\n      duration = Infinity;\n    }\n\n    var event = new TransportRepeatEvent(this, {\n      callback: callback,\n      duration: new TimeClass(this.context, duration).toTicks(),\n      interval: new TimeClass(this.context, interval).toTicks(),\n      time: new TransportTimeClass(this.context, startTime).toTicks()\n    }); // kick it off if the Transport is started\n    // @ts-ignore\n\n    return this._addEvent(event, this._repeatedEvents);\n  };\n  /**\n   * Schedule an event that will be removed after it is invoked.\n   * @param callback The callback to invoke once.\n   * @param time The time the callback should be invoked.\n   * @returns The ID of the scheduled event.\n   */\n\n\n  Transport.prototype.scheduleOnce = function (callback, time) {\n    var event = new TransportEvent(this, {\n      callback: callback,\n      once: true,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  };\n  /**\n   * Clear the passed in event id from the timeline\n   * @param eventId The id of the event.\n   */\n\n\n  Transport.prototype.clear = function (eventId) {\n    if (this._scheduledEvents.hasOwnProperty(eventId)) {\n      var item = this._scheduledEvents[eventId.toString()];\n\n      item.timeline.remove(item.event);\n      item.event.dispose();\n      delete this._scheduledEvents[eventId.toString()];\n    }\n\n    return this;\n  };\n  /**\n   * Add an event to the correct timeline. Keep track of the\n   * timeline it was added to.\n   * @returns the event id which was just added\n   */\n\n\n  Transport.prototype._addEvent = function (event, timeline) {\n    this._scheduledEvents[event.id.toString()] = {\n      event: event,\n      timeline: timeline\n    };\n    timeline.add(event);\n    return event.id;\n  };\n  /**\n   * Remove scheduled events from the timeline after\n   * the given time. Repeated events will be removed\n   * if their startTime is after the given time\n   * @param after Clear all events after this time.\n   */\n\n\n  Transport.prototype.cancel = function (after) {\n    var _this = this;\n\n    if (after === void 0) {\n      after = 0;\n    }\n\n    var computedAfter = this.toTicks(after);\n\n    this._timeline.forEachFrom(computedAfter, function (event) {\n      return _this.clear(event.id);\n    });\n\n    this._repeatedEvents.forEachFrom(computedAfter, function (event) {\n      return _this.clear(event.id);\n    });\n\n    return this;\n  }; //-------------------------------------\n  // \tSTART/STOP/PAUSE\n  //-------------------------------------\n\n  /**\n   * Bind start/stop/pause events from the clock and emit them.\n   */\n\n\n  Transport.prototype._bindClockEvents = function () {\n    var _this = this;\n\n    this._clock.on(\"start\", function (time, offset) {\n      offset = new TicksClass(_this.context, offset).toSeconds();\n\n      _this.emit(\"start\", time, offset);\n    });\n\n    this._clock.on(\"stop\", function (time) {\n      _this.emit(\"stop\", time);\n    });\n\n    this._clock.on(\"pause\", function (time) {\n      _this.emit(\"pause\", time);\n    });\n  };\n\n  Object.defineProperty(Transport.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get: function () {\n      return this._clock.getStateAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the transport and all sources synced to the transport.\n   * @param  time The time when the transport should start.\n   * @param  offset The timeline offset to start the transport.\n   * @example\n   * // start the transport in one second starting at beginning of the 5th measure.\n   * Tone.Transport.start(\"+1\", \"4:0:0\");\n   */\n\n  Transport.prototype.start = function (time, offset) {\n    var offsetTicks;\n\n    if (isDefined(offset)) {\n      offsetTicks = this.toTicks(offset);\n    } // start the clock\n\n\n    this._clock.start(time, offsetTicks);\n\n    return this;\n  };\n  /**\n   * Stop the transport and all sources synced to the transport.\n   * @param time The time when the transport should stop.\n   * @example\n   * Tone.Transport.stop();\n   */\n\n\n  Transport.prototype.stop = function (time) {\n    this._clock.stop(time);\n\n    return this;\n  };\n  /**\n   * Pause the transport and all sources synced to the transport.\n   */\n\n\n  Transport.prototype.pause = function (time) {\n    this._clock.pause(time);\n\n    return this;\n  };\n  /**\n   * Toggle the current state of the transport. If it is\n   * started, it will stop it, otherwise it will start the Transport.\n   * @param  time The time of the event\n   */\n\n\n  Transport.prototype.toggle = function (time) {\n    time = this.toSeconds(time);\n\n    if (this._clock.getStateAtTime(time) !== \"started\") {\n      this.start(time);\n    } else {\n      this.stop(time);\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Transport.prototype, \"timeSignature\", {\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get: function () {\n      return this._timeSignature;\n    },\n    set: function (timeSig) {\n      if (isArray(timeSig)) {\n        timeSig = timeSig[0] / timeSig[1] * 4;\n      }\n\n      this._timeSignature = timeSig;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loopStart\", {\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get: function () {\n      return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    },\n    set: function (startPosition) {\n      this._loopStart = this.toTicks(startPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loopEnd\", {\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get: function () {\n      return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    },\n    set: function (endPosition) {\n      this._loopEnd = this.toTicks(endPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"loop\", {\n    /**\n     * If the transport loops or not.\n     */\n    get: function () {\n      return this._loop.get(this.now());\n    },\n    set: function (loop) {\n      this._loop.set(loop, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Set the loop start and stop at the same time.\n   * @example\n   * // loop over the first measure\n   * Tone.Transport.setLoopPoints(0, \"1m\");\n   * Tone.Transport.loop = true;\n   */\n\n  Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n    this.loopStart = startPosition;\n    this.loopEnd = endPosition;\n    return this;\n  };\n\n  Object.defineProperty(Transport.prototype, \"swing\", {\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get: function () {\n      return this._swingAmount;\n    },\n    set: function (amount) {\n      // scale the values to a normal range\n      this._swingAmount = amount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"swingSubdivision\", {\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._swingTicks).toNotation();\n    },\n    set: function (subdivision) {\n      this._swingTicks = this.toTicks(subdivision);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"position\", {\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get: function () {\n      var now = this.now();\n\n      var ticks = this._clock.getTicksAtTime(now);\n\n      return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    },\n    set: function (progress) {\n      var ticks = this.toTicks(progress);\n      this.ticks = ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"seconds\", {\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get: function () {\n      return this._clock.seconds;\n    },\n    set: function (s) {\n      var now = this.now();\n\n      var ticks = this._clock.frequency.timeToTicks(s, now);\n\n      this.ticks = ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"progress\", {\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get: function () {\n      if (this.loop) {\n        var now = this.now();\n\n        var ticks = this._clock.getTicksAtTime(now);\n\n        return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Transport.prototype, \"ticks\", {\n    /**\n     * The transports current tick position.\n     */\n    get: function () {\n      return this._clock.ticks;\n    },\n    set: function (t) {\n      if (this._clock.ticks !== t) {\n        var now = this.now(); // stop everything synced to the transport\n\n        if (this.state === \"started\") {\n          var ticks = this._clock.getTicksAtTime(now); // schedule to start on the next tick, #573\n\n\n          var time = this._clock.getTimeOfTick(Math.ceil(ticks));\n\n          this.emit(\"stop\", time);\n\n          this._clock.setTicksAtTime(t, time); // restart it with the new time\n\n\n          this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n        } else {\n          this._clock.setTicksAtTime(t, now);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the clock's ticks at the given time.\n   * @param  time  When to get the tick value\n   * @return The tick value at the given time.\n   */\n\n  Transport.prototype.getTicksAtTime = function (time) {\n    return Math.round(this._clock.getTicksAtTime(time));\n  };\n  /**\n   * Return the elapsed seconds at the given time.\n   * @param  time  When to get the elapsed seconds\n   * @return  The number of elapsed seconds\n   */\n\n\n  Transport.prototype.getSecondsAtTime = function (time) {\n    return this._clock.getSecondsAtTime(time);\n  };\n\n  Object.defineProperty(Transport.prototype, \"PPQ\", {\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get: function () {\n      return this._clock.frequency.multiplier;\n    },\n    set: function (ppq) {\n      this._clock.frequency.multiplier = ppq;\n    },\n    enumerable: true,\n    configurable: true\n  }); //-------------------------------------\n  // \tSYNCING\n  //-------------------------------------\n\n  /**\n   * Returns the time aligned to the next subdivision\n   * of the Transport. If the Transport is not started,\n   * it will return 0.\n   * Note: this will not work precisely during tempo ramps.\n   * @param  subdivision  The subdivision to quantize to\n   * @return  The context time of the next subdivision.\n   * @example\n   * // the transport must be started, otherwise returns 0\n   * Tone.Transport.start();\n   * Tone.Transport.nextSubdivision(\"4n\");\n   */\n\n  Transport.prototype.nextSubdivision = function (subdivision) {\n    subdivision = this.toTicks(subdivision);\n\n    if (this.state !== \"started\") {\n      // if the transport's not started, return 0\n      return 0;\n    } else {\n      var now = this.now(); // the remainder of the current ticks and the subdivision\n\n      var transportPos = this.getTicksAtTime(now);\n      var remainingTicks = subdivision - transportPos % subdivision;\n      return this._clock.nextTickTime(remainingTicks, now);\n    }\n  };\n  /**\n   * Attaches the signal to the tempo control signal so that\n   * any changes in the tempo will change the signal in the same\n   * ratio.\n   *\n   * @param signal\n   * @param ratio Optionally pass in the ratio between the two signals.\n   * \t\t\tOtherwise it will be computed based on their current values.\n   */\n\n\n  Transport.prototype.syncSignal = function (signal, ratio) {\n    if (!ratio) {\n      // get the sync ratio\n      var now = this.now();\n\n      if (signal.getValueAtTime(now) !== 0) {\n        var bpm = this.bpm.getValueAtTime(now);\n        var computedFreq = 1 / (60 / bpm / this.PPQ);\n        ratio = signal.getValueAtTime(now) / computedFreq;\n      } else {\n        ratio = 0;\n      }\n    }\n\n    var ratioSignal = new Gain(ratio); // @ts-ignore\n\n    this.bpm.connect(ratioSignal); // @ts-ignore\n\n    ratioSignal.connect(signal._param);\n\n    this._syncedSignals.push({\n      initial: signal.value,\n      ratio: ratioSignal,\n      signal: signal\n    });\n\n    signal.value = 0;\n    return this;\n  };\n  /**\n   * Unsyncs a previously synced signal from the transport's control.\n   * See Transport.syncSignal.\n   */\n\n\n  Transport.prototype.unsyncSignal = function (signal) {\n    for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n      var syncedSignal = this._syncedSignals[i];\n\n      if (syncedSignal.signal === signal) {\n        syncedSignal.ratio.dispose();\n        syncedSignal.signal.value = syncedSignal.initial;\n\n        this._syncedSignals.splice(i, 1);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Transport.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._clock.dispose();\n\n    writable(this, \"bpm\");\n\n    this._timeline.dispose();\n\n    this._repeatedEvents.dispose();\n\n    return this;\n  };\n\n  return Transport;\n}(ToneWithContext);\n\nexport { Transport };\nEmitter.mixin(Transport); //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.transport = new Transport({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.transport.dispose();\n});","import { __extends } from \"tslib\";\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n */\n\nvar Delay =\n/** @class */\nfunction (_super) {\n  __extends(Delay, _super);\n\n  function Delay() {\n    var _this = _super.call(this, optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"])) || this;\n\n    _this.name = \"Delay\";\n    var options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n    var maxDelayInSeconds = _this.toSeconds(options.maxDelay);\n\n    _this._maxDelay = Math.max(maxDelayInSeconds, _this.toSeconds(options.delayTime));\n    _this._delayNode = _this.input = _this.output = _this.context.createDelay(maxDelayInSeconds);\n    _this.delayTime = new Param({\n      context: _this.context,\n      param: _this._delayNode.delayTime,\n      units: \"time\",\n      value: options.delayTime,\n      minValue: 0,\n      maxValue: _this.maxDelay\n    });\n    readOnly(_this, \"delayTime\");\n    return _this;\n  }\n\n  Delay.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0,\n      maxDelay: 1\n    });\n  };\n\n  Object.defineProperty(Delay.prototype, \"maxDelay\", {\n    /**\n     * The maximum delay time. This cannot be changed after\n     * the value is passed into the constructor.\n     */\n    get: function () {\n      return this._maxDelay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Delay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.disconnect();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return Delay;\n}(ToneAudioNode);\n\nexport { Delay };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\n\nvar Volume =\n/** @class */\nfunction (_super) {\n  __extends(Volume, _super);\n\n  function Volume() {\n    var _this = _super.call(this, optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"])) || this;\n\n    _this.name = \"Volume\";\n    var options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n    _this.input = _this.output = new Gain({\n      context: _this.context,\n      gain: options.volume,\n      units: \"decibels\"\n    });\n    _this.volume = _this.output.gain;\n    readOnly(_this, \"volume\");\n    _this._unmutedVolume = options.volume; // set the mute initially\n\n    _this.mute = options.mute;\n    return _this;\n  }\n\n  Volume.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Volume.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get: function () {\n      return this.volume.value === -Infinity;\n    },\n    set: function (mute) {\n      if (!this.mute && mute) {\n        this._unmutedVolume = this.volume.value; // maybe it should ramp here?\n\n        this.volume.value = -Infinity;\n      } else if (this.mute && !mute) {\n        this.volume.value = this._unmutedVolume;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * clean up\n   */\n\n  Volume.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.volume.dispose();\n    return this;\n  };\n\n  return Volume;\n}(ToneAudioNode);\n\nexport { Volume };","import { __extends, __read, __spread } from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * // these two are equivalent.\n * @category Core\n */\n\nvar Destination =\n/** @class */\nfunction (_super) {\n  __extends(Destination, _super);\n\n  function Destination() {\n    var _this = _super.call(this, optionsFromArguments(Destination.getDefaults(), arguments)) || this;\n\n    _this.name = \"Destination\";\n    _this.input = new Volume({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n    /**\n     * The volume of the master output.\n     */\n\n    _this.volume = _this.input.volume;\n    var options = optionsFromArguments(Destination.getDefaults(), arguments);\n    connectSeries(_this.input, _this.output, _this.context.rawContext.destination);\n    _this.mute = options.mute;\n    _this._internalChannels = [_this.input, _this.context.rawContext.destination, _this.output];\n    return _this;\n  }\n\n  Destination.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Destination.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * // mute the output\n     * Tone.Destination.mute = true;\n     */\n    get: function () {\n      return this.input.mute;\n    },\n    set: function (mute) {\n      this.input.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n   * chained in the master effects chain.\n   * @param args All arguments will be connected in a row and the Master will be routed through it.\n   * @return  {Destination}  this\n   * @example\n   * // some overall compression to keep the levels in check\n   * const masterCompressor = new Tone.Compressor({\n   * \tthreshold: -6,\n   * \tratio: 3,\n   * \tattack: 0.5,\n   * \trelease: 0.1\n   * });\n   * // give a little boost to the lows\n   * const lowBump = new Tone.Filter(200, \"lowshelf\");\n   * // route everything through the filter and compressor before going to the speakers\n   * Tone.Destination.chain(lowBump, masterCompressor);\n   */\n\n  Destination.prototype.chain = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this.input.disconnect();\n    args.unshift(this.input);\n    args.push(this.output);\n    connectSeries.apply(void 0, __spread(args));\n    return this;\n  };\n\n  Object.defineProperty(Destination.prototype, \"maxChannelCount\", {\n    /**\n     * The maximum number of channels the system can output\n     */\n    get: function () {\n      return this.context.rawContext.destination.maxChannelCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Destination.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.volume.dispose();\n    return this;\n  };\n\n  return Destination;\n}(ToneAudioNode);\n\nexport { Destination }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.destination = new Destination({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.destination.dispose();\n});","import { __awaiter, __generator } from \"tslib\";\nimport { getContext, setContext } from \"../Global\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of [[Context]] which can be used\n * to schedule events along the Transport.\n * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.\n * @example\n * // render 2 seconds of the oscillator\n * Tone.Offline(() => {\n * \t// only nodes created in this callback will be recorded\n * \tconst oscillator = new Tone.Oscillator().toDestination().start(0);\n * }, 2).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @example\n * // can also schedule events along the Transport\n * // using the passed in Offline Transport\n * Tone.Offline(({ transport }) => {\n * \tconst osc = new Tone.Oscillator().toDestination();\n * \ttransport.schedule(time => {\n * \t\tosc.start(time).stop(time + 0.1);\n * \t}, 1);\n * \t// make sure to start the transport\n * \ttransport.start(0.2);\n * }, 4).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @category Core\n */\n\nexport function Offline(callback, duration, channels, sampleRate) {\n  if (channels === void 0) {\n    channels = 2;\n  }\n\n  if (sampleRate === void 0) {\n    sampleRate = getContext().sampleRate;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var originalContext, context, bufferPromise, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          originalContext = getContext();\n          context = new OfflineContext(channels, duration, sampleRate);\n          setContext(context); // invoke the callback/scheduling\n\n          return [4\n          /*yield*/\n          , callback(context)];\n\n        case 1:\n          // invoke the callback/scheduling\n          _a.sent();\n\n          bufferPromise = context.render(); // return the original AudioContext\n\n          setContext(originalContext);\n          return [4\n          /*yield*/\n          , bufferPromise];\n\n        case 2:\n          buffer = _a.sent(); // return the audio\n\n          return [2\n          /*return*/\n          , new ToneAudioBuffer(buffer)];\n      }\n    });\n  });\n}","import { __extends, __read } from \"tslib\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tC1: \"https://tonejs.github.io/examples/audio/casio/C1.mp3\",\n * \tC2: \"https://tonejs.github.io/examples/audio/casio/C2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t C1: \"C1.mp3\",\n * \t\t C2: \"C2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/examples/audio/casio/\"\n * });\n * @category Core\n */\n\nvar ToneAudioBuffers =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioBuffers, _super);\n\n  function ToneAudioBuffers() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"ToneAudioBuffers\";\n    /**\n     * All of the buffers\n     */\n\n    _this._buffers = new Map();\n    /**\n     * Keep track of the number of loaded buffers\n     */\n\n    _this._loadingCount = 0;\n    var options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    _this.baseUrl = options.baseUrl; // add each one\n\n    Object.keys(options.urls).forEach(function (name) {\n      _this._loadingCount++;\n      var url = options.urls[name];\n\n      _this.add(name, url, _this._bufferLoaded.bind(_this, options.onload), options.onerror);\n    });\n    return _this;\n  }\n\n  ToneAudioBuffers.getDefaults = function () {\n    return {\n      baseUrl: \"\",\n      onerror: noOp,\n      onload: noOp,\n      urls: {}\n    };\n  };\n  /**\n   * True if the buffers object has a buffer by that name.\n   * @param  name  The key or index of the buffer.\n   */\n\n\n  ToneAudioBuffers.prototype.has = function (name) {\n    return this._buffers.has(name.toString());\n  };\n  /**\n   * Get a buffer by name. If an array was loaded,\n   * then use the array index.\n   * @param  name  The key or index of the buffer.\n   */\n\n\n  ToneAudioBuffers.prototype.get = function (name) {\n    assert(this.has(name), \"ToneAudioBuffers has no buffer named: \" + name);\n    return this._buffers.get(name.toString());\n  };\n  /**\n   * A buffer was loaded. decrement the counter.\n   */\n\n\n  ToneAudioBuffers.prototype._bufferLoaded = function (callback) {\n    this._loadingCount--;\n\n    if (this._loadingCount === 0 && callback) {\n      callback();\n    }\n  };\n\n  Object.defineProperty(ToneAudioBuffers.prototype, \"loaded\", {\n    /**\n     * If the buffers are loaded or not\n     */\n    get: function () {\n      return Array.from(this._buffers).every(function (_a) {\n        var _b = __read(_a, 2),\n            _ = _b[0],\n            buffer = _b[1];\n\n        return buffer.loaded;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a buffer by name and url to the Buffers\n   * @param  name      A unique name to give the buffer\n   * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n   * @param  callback  The callback to invoke when the url is loaded.\n   * @param  onerror  Invoked if the buffer can't be loaded\n   */\n\n  ToneAudioBuffers.prototype.add = function (name, url, callback, onerror) {\n    if (callback === void 0) {\n      callback = noOp;\n    }\n\n    if (onerror === void 0) {\n      onerror = noOp;\n    }\n\n    if (isString(url)) {\n      this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n    } else {\n      this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n    }\n\n    return this;\n  };\n\n  ToneAudioBuffers.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffers.forEach(function (buffer) {\n      return buffer.dispose();\n    });\n\n    this._buffers.clear();\n\n    return this;\n  };\n\n  return ToneAudioBuffers;\n}(Tone);\n\nexport { ToneAudioBuffers };","import { __extends } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\n\nvar MidiClass =\n/** @class */\nfunction (_super) {\n  __extends(MidiClass, _super);\n\n  function MidiClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"MidiClass\";\n    _this.defaultUnits = \"midi\";\n    return _this;\n  }\n  /**\n   * Returns the value of a frequency in the current units\n   */\n\n\n  MidiClass.prototype._frequencyToUnits = function (freq) {\n    return ftom(_super.prototype._frequencyToUnits.call(this, freq));\n  };\n  /**\n   * Returns the value of a tick in the current time units\n   */\n\n\n  MidiClass.prototype._ticksToUnits = function (ticks) {\n    return ftom(_super.prototype._ticksToUnits.call(this, ticks));\n  };\n  /**\n   * Return the value of the beats in the current units\n   */\n\n\n  MidiClass.prototype._beatsToUnits = function (beats) {\n    return ftom(_super.prototype._beatsToUnits.call(this, beats));\n  };\n  /**\n   * Returns the value of a second in the current units\n   */\n\n\n  MidiClass.prototype._secondsToUnits = function (seconds) {\n    return ftom(_super.prototype._secondsToUnits.call(this, seconds));\n  };\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Midi(60).toMidi(); // 60\n   */\n\n\n  MidiClass.prototype.toMidi = function () {\n    return this.valueOf();\n  };\n  /**\n   * Return the value of the frequency as a MIDI note\n   * @example\n   * Tone.Midi(60).toFrequency(); // 261.6255653005986\n   */\n\n\n  MidiClass.prototype.toFrequency = function () {\n    return mtof(this.toMidi());\n  };\n  /**\n   * Transposes the frequency by the given number of semitones.\n   * @return A new transposed MidiClass\n   * @example\n   * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n   */\n\n\n  MidiClass.prototype.transpose = function (interval) {\n    return new MidiClass(this.context, this.toMidi() + interval);\n  };\n\n  return MidiClass;\n}(FrequencyClass);\n\nexport { MidiClass };\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\n\nexport function Midi(value, units) {\n  return new MidiClass(getContext(), value, units);\n}","import { __extends } from \"tslib\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n *  \t// use the time argument to schedule a callback with Draw\n *  \tTone.Draw.schedule(() => {\n *  \t\t// do drawing or DOM manipulation here\n *  \t}, time);\n * }, \"+0.5\");\n * @category Core\n */\n\nvar Draw =\n/** @class */\nfunction (_super) {\n  __extends(Draw, _super);\n\n  function Draw() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Draw\";\n    /**\n     * The duration after which events are not invoked.\n     */\n\n    _this.expiration = 0.25;\n    /**\n     * The amount of time before the scheduled time\n     * that the callback can be invoked. Default is\n     * half the time of an animation frame (0.008 seconds).\n     */\n\n    _this.anticipation = 0.008;\n    /**\n     * All of the events.\n     */\n\n    _this._events = new Timeline();\n    /**\n     * The draw loop\n     */\n\n    _this._boundDrawLoop = _this._drawLoop.bind(_this);\n    /**\n     * The animation frame id\n     */\n\n    _this._animationFrame = -1;\n    return _this;\n  }\n  /**\n   * Schedule a function at the given time to be invoked\n   * on the nearest animation frame.\n   * @param  callback  Callback is invoked at the given time.\n   * @param  time      The time relative to the AudioContext time to invoke the callback.\n   */\n\n\n  Draw.prototype.schedule = function (callback, time) {\n    this._events.add({\n      callback: callback,\n      time: this.toSeconds(time)\n    }); // start the draw loop on the first event\n\n\n    if (this._events.length === 1) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel events scheduled after the given time\n   * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n   */\n\n\n  Draw.prototype.cancel = function (after) {\n    this._events.cancel(this.toSeconds(after));\n\n    return this;\n  };\n  /**\n   * The draw loop\n   */\n\n\n  Draw.prototype._drawLoop = function () {\n    var now = this.context.currentTime;\n\n    while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n      var event_1 = this._events.shift();\n\n      if (event_1 && now - event_1.time <= this.expiration) {\n        event_1.callback();\n      }\n    }\n\n    if (this._events.length > 0) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n  };\n\n  Draw.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._events.dispose();\n\n    cancelAnimationFrame(this._animationFrame);\n    return this;\n  };\n\n  return Draw;\n}(ToneWithContext);\n\nexport { Draw }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.draw = new Draw({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.draw.dispose();\n});","import { __extends } from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\n\nvar Source =\n/** @class */\nfunction (_super) {\n  __extends(Source, _super);\n\n  function Source(options) {\n    var _this = _super.call(this, options) || this;\n    /**\n     * Sources have no inputs\n     */\n\n\n    _this.input = undefined;\n    /**\n     * Keep track of the scheduled state.\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * The synced `start` callback function from the transport\n     */\n\n    _this._synced = false;\n    /**\n     * Keep track of all of the scheduled event ids\n     */\n\n    _this._scheduled = [];\n    /**\n     * Placeholder functions for syncing/unsyncing to transport\n     */\n\n    _this._syncedStart = noOp;\n    _this._syncedStop = noOp;\n    _this._state.memory = 100;\n    _this._state.increasing = true;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      mute: options.mute,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this.onstop = options.onstop;\n    return _this;\n  }\n\n  Source.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      onstop: noOp,\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Source.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get: function () {\n      if (this._synced) {\n        if (this.context.transport.state === \"started\") {\n          return this._state.getValueAtTime(this.context.transport.seconds);\n        } else {\n          return \"stopped\";\n        }\n      } else {\n        return this._state.getValueAtTime(this.now());\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Source.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Ensure that the scheduled time is not before the current time.\n   * Should only be used when scheduled unsynced.\n   */\n\n  Source.prototype._clampToCurrentTime = function (time) {\n    if (this._synced) {\n      return time;\n    } else {\n      return Math.max(time, this.context.currentTime);\n    }\n  };\n  /**\n   * Start the source at the specified time. If no time is given,\n   * start the source now.\n   * @param  time When the source should be started.\n   * @example\n   * const source = new Tone.Oscillator().toDestination();\n   * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n   */\n\n\n  Source.prototype.start = function (time, offset, duration) {\n    var _this = this;\n\n    var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime); // if it's started, stop it and restart it\n\n    if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n      // time should be strictly greater than the previous start time\n      assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n\n      this._state.cancel(computedTime);\n\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      this.log(\"restart\", computedTime);\n      this.restart(computedTime, offset, duration);\n    } else {\n      this.log(\"start\", computedTime);\n\n      this._state.setStateAtTime(\"started\", computedTime);\n\n      if (this._synced) {\n        // add the offset time to the event\n        var event_1 = this._state.get(computedTime);\n\n        if (event_1) {\n          event_1.offset = this.toSeconds(defaultArg(offset, 0));\n          event_1.duration = duration ? this.toSeconds(duration) : undefined;\n        }\n\n        var sched = this.context.transport.schedule(function (t) {\n          _this._start(t, offset, duration);\n        }, computedTime);\n\n        this._scheduled.push(sched); // if it's already started\n\n\n        if (this.context.transport.state === \"started\") {\n          this._syncedStart(this.now(), this.context.transport.seconds);\n        }\n      } else {\n        this._start(computedTime, offset, duration);\n      }\n\n      assertContextRunning(this.context);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the source at the specified time. If no time is given,\n   * stop the source now.\n   * @param  time When the source should be stopped.\n   * @example\n   * const source = new Tone.Oscillator().toDestination();\n   * source.start();\n   * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n   */\n\n\n  Source.prototype.stop = function (time) {\n    var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n      this.log(\"stop\", computedTime);\n\n      if (!this._synced) {\n        this._stop(computedTime);\n      } else {\n        var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n\n        this._scheduled.push(sched);\n      }\n\n      this._state.cancel(computedTime);\n\n      this._state.setStateAtTime(\"stopped\", computedTime);\n    }\n\n    return this;\n  };\n  /**\n   * Restart the source.\n   */\n\n\n  Source.prototype.restart = function (time, offset, duration) {\n    time = this.toSeconds(time);\n\n    if (this._state.getValueAtTime(time) === \"started\") {\n      this._state.cancel(time);\n\n      this._restart(time, offset, duration);\n    }\n\n    return this;\n  };\n  /**\n   * Sync the source to the Transport so that all subsequent\n   * calls to `start` and `stop` are synced to the TransportTime\n   * instead of the AudioContext time.\n   *\n   * @example\n   * const osc = new Tone.Oscillator().toDestination();\n   * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n   * osc.sync().start(0).stop(0.3);\n   * // start the transport.\n   * Tone.Transport.start();\n   * // set it to loop once a second\n   * Tone.Transport.loop = true;\n   * Tone.Transport.loopEnd = 1;\n   */\n\n\n  Source.prototype.sync = function () {\n    var _this = this;\n\n    if (!this._synced) {\n      this._synced = true;\n\n      this._syncedStart = function (time, offset) {\n        if (offset > 0) {\n          // get the playback state at that time\n          var stateEvent = _this._state.get(offset); // listen for start events which may occur in the middle of the sync'ed time\n\n\n          if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n            // get the offset\n            var startOffset = offset - _this.toSeconds(stateEvent.time);\n\n            var duration = void 0;\n\n            if (stateEvent.duration) {\n              duration = _this.toSeconds(stateEvent.duration) - startOffset;\n            }\n\n            _this._start(time, _this.toSeconds(stateEvent.offset) + startOffset, duration);\n          }\n        }\n      };\n\n      this._syncedStop = function (time) {\n        var seconds = _this.context.transport.getSecondsAtTime(Math.max(time - _this.sampleTime, 0));\n\n        if (_this._state.getValueAtTime(seconds) === \"started\") {\n          _this._stop(time);\n        }\n      };\n\n      this.context.transport.on(\"start\", this._syncedStart);\n      this.context.transport.on(\"loopStart\", this._syncedStart);\n      this.context.transport.on(\"stop\", this._syncedStop);\n      this.context.transport.on(\"pause\", this._syncedStop);\n      this.context.transport.on(\"loopEnd\", this._syncedStop);\n    }\n\n    return this;\n  };\n  /**\n   * Unsync the source to the Transport. See Source.sync\n   */\n\n\n  Source.prototype.unsync = function () {\n    var _this = this;\n\n    if (this._synced) {\n      this.context.transport.off(\"stop\", this._syncedStop);\n      this.context.transport.off(\"pause\", this._syncedStop);\n      this.context.transport.off(\"loopEnd\", this._syncedStop);\n      this.context.transport.off(\"start\", this._syncedStart);\n      this.context.transport.off(\"loopStart\", this._syncedStart);\n    }\n\n    this._synced = false; // clear all of the scheduled ids\n\n    this._scheduled.forEach(function (id) {\n      return _this.context.transport.clear(id);\n    });\n\n    this._scheduled = [];\n\n    this._state.cancel(0);\n\n    return this;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Source.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.onstop = noOp;\n    this.unsync();\n\n    this._volume.dispose();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return Source;\n}(ToneAudioNode);\n\nexport { Source };","import { __extends } from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\n\nvar ToneBufferSource =\n/** @class */\nfunction (_super) {\n  __extends(ToneBufferSource, _super);\n\n  function ToneBufferSource() {\n    var _this = _super.call(this, optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"ToneBufferSource\";\n    /**\n     * The oscillator\n     */\n\n    _this._source = _this.context.createBufferSource();\n    _this._internalChannels = [_this._source];\n    /**\n     * indicators if the source has started/stopped\n     */\n\n    _this._sourceStarted = false;\n    _this._sourceStopped = false;\n    var options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n    connect(_this._source, _this._gainNode);\n\n    _this._source.onended = function () {\n      return _this._stopSource();\n    };\n    /**\n     * The playbackRate of the buffer\n     */\n\n\n    _this.playbackRate = new Param({\n      context: _this.context,\n      param: _this._source.playbackRate,\n      units: \"positive\",\n      value: options.playbackRate\n    }); // set some values initially\n\n    _this.loop = options.loop;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n    _this._internalChannels.push(_this._source);\n\n    return _this;\n  }\n\n  ToneBufferSource.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      url: new ToneAudioBuffer(),\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1\n    });\n  };\n\n  Object.defineProperty(ToneBufferSource.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (t) {\n      this._fadeIn = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (t) {\n      this._fadeOut = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"curve\", {\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get: function () {\n      return this._curve;\n    },\n    set: function (t) {\n      this._curve = t;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the buffer\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n   * @param  gain  The gain to play the buffer back at.\n   */\n\n  ToneBufferSource.prototype.start = function (time, offset, duration, gain) {\n    if (gain === void 0) {\n      gain = 1;\n    }\n\n    assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n    var computedTime = this.toSeconds(time); // apply the gain envelope\n\n    this._startGain(computedTime, gain); // if it's a loop the default offset is the loopstart point\n\n\n    if (this.loop) {\n      offset = defaultArg(offset, this.loopStart);\n    } else {\n      // otherwise the default offset is 0\n      offset = defaultArg(offset, 0);\n    } // make sure the offset is not less than 0\n\n\n    var computedOffset = Math.max(this.toSeconds(offset), 0); // start the buffer source\n\n    if (this.loop) {\n      // modify the offset if it's greater than the loop time\n      var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n      var loopStart = this.toSeconds(this.loopStart);\n      var loopDuration = loopEnd - loopStart; // move the offset back\n\n      if (GTE(computedOffset, loopEnd)) {\n        computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;\n      } // when the offset is very close to the duration, set it to 0\n\n\n      if (EQ(computedOffset, this.buffer.duration)) {\n        computedOffset = 0;\n      }\n    } // this.buffer.loaded would have return false if the AudioBuffer was undefined\n\n\n    this._source.buffer = this.buffer.get();\n    this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\n    if (LT(computedOffset, this.buffer.duration)) {\n      this._sourceStarted = true;\n\n      this._source.start(computedTime, computedOffset);\n    } // if a duration is given, schedule a stop\n\n\n    if (isDefined(duration)) {\n      var computedDur = this.toSeconds(duration); // make sure it's never negative\n\n      computedDur = Math.max(computedDur, 0);\n      this.stop(computedTime + computedDur);\n    }\n\n    return this;\n  };\n\n  ToneBufferSource.prototype._stopSource = function (time) {\n    if (!this._sourceStopped && this._sourceStarted) {\n      this._sourceStopped = true;\n\n      this._source.stop(this.toSeconds(time));\n\n      this._onended();\n    }\n  };\n\n  Object.defineProperty(ToneBufferSource.prototype, \"loopStart\", {\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get: function () {\n      return this._source.loopStart;\n    },\n    set: function (loopStart) {\n      this._source.loopStart = this.toSeconds(loopStart);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"loopEnd\", {\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get: function () {\n      return this._source.loopEnd;\n    },\n    set: function (loopEnd) {\n      this._source.loopEnd = this.toSeconds(loopEnd);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"buffer\", {\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get: function () {\n      return this._buffer;\n    },\n    set: function (buffer) {\n      this._buffer.set(buffer);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneBufferSource.prototype, \"loop\", {\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get: function () {\n      return this._source.loop;\n    },\n    set: function (loop) {\n      this._source.loop = loop;\n\n      if (this._sourceStarted) {\n        this.cancelStop();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  ToneBufferSource.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._source.onended = null;\n\n    this._source.disconnect();\n\n    this._buffer.dispose();\n\n    this.playbackRate.dispose();\n    return this;\n  };\n\n  return ToneBufferSource;\n}(OneShotSource);\n\nexport { ToneBufferSource };","import { __extends } from \"tslib\";\nimport { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\n\nvar Noise =\n/** @class */\nfunction (_super) {\n  __extends(Noise, _super);\n\n  function Noise() {\n    var _this = _super.call(this, optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"])) || this;\n\n    _this.name = \"Noise\";\n    /**\n     * Private reference to the source\n     */\n\n    _this._source = null;\n    var options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n    _this._playbackRate = options.playbackRate;\n    _this.type = options.type;\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Noise.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      fadeIn: 0,\n      fadeOut: 0,\n      playbackRate: 1,\n      type: \"white\"\n    });\n  };\n\n  Object.defineProperty(Noise.prototype, \"type\", {\n    /**\n     * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n     * @example\n     * const noise = new Tone.Noise().toDestination().start();\n     * noise.type = \"brown\";\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n\n      if (this._type !== type) {\n        this._type = type; // if it's playing, stop and restart it\n\n        if (this.state === \"started\") {\n          var now = this.now();\n\n          this._stop(now);\n\n          this._start(now);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Noise.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the noise. Affects\n     * the \"frequency\" of the noise.\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      if (this._source) {\n        this._source.playbackRate.value = rate;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * internal start method\n   */\n\n  Noise.prototype._start = function (time) {\n    var _this = this;\n\n    var buffer = _noiseBuffers[this._type];\n    this._source = new ToneBufferSource({\n      url: buffer,\n      context: this.context,\n      fadeIn: this._fadeIn,\n      fadeOut: this._fadeOut,\n      loop: true,\n      onended: function () {\n        return _this.onstop(_this);\n      },\n      playbackRate: this._playbackRate\n    }).connect(this.output);\n\n    this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n  };\n  /**\n   * internal stop method\n   */\n\n\n  Noise.prototype._stop = function (time) {\n    if (this._source) {\n      this._source.stop(this.toSeconds(time));\n\n      this._source = null;\n    }\n  };\n\n  Object.defineProperty(Noise.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (time) {\n      this._fadeIn = time;\n\n      if (this._source) {\n        this._source.fadeIn = this._fadeIn;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Noise.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (time) {\n      this._fadeOut = time;\n\n      if (this._source) {\n        this._source.fadeOut = this._fadeOut;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Noise.prototype._restart = function (time) {\n    // TODO could be optimized by cancelling the buffer source 'stop'\n    this._stop(time);\n\n    this._start(time);\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Noise.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._source) {\n      this._source.disconnect();\n    }\n\n    return this;\n  };\n\n  return Noise;\n}(Source);\n\nexport { Noise }; //--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\n\nvar BUFFER_LENGTH = 44100 * 5;\nvar NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\n\nvar _noiseCache = {\n  brown: null,\n  pink: null,\n  white: null\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\n\nvar _noiseBuffers = {\n  get brown() {\n    if (!_noiseCache.brown) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        var lastOut = 0.0;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          var white = Math.random() * 2 - 1;\n          channel[i] = (lastOut + 0.02 * white) / 1.02;\n          lastOut = channel[i];\n          channel[i] *= 3.5; // (roughly) compensate for gain\n        }\n      }\n\n      _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.brown;\n  },\n\n  get pink() {\n    if (!_noiseCache.pink) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        var b0 = void 0,\n            b1 = void 0,\n            b2 = void 0,\n            b3 = void 0,\n            b4 = void 0,\n            b5 = void 0,\n            b6 = void 0;\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          var white = Math.random() * 2 - 1;\n          b0 = 0.99886 * b0 + white * 0.0555179;\n          b1 = 0.99332 * b1 + white * 0.0750759;\n          b2 = 0.96900 * b2 + white * 0.1538520;\n          b3 = 0.86650 * b3 + white * 0.3104856;\n          b4 = 0.55000 * b4 + white * 0.5329522;\n          b5 = -0.7616 * b5 - white * 0.0168980;\n          channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n          channel[i] *= 0.11; // (roughly) compensate for gain\n\n          b6 = white * 0.115926;\n        }\n      }\n\n      _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.pink;\n  },\n\n  get white() {\n    if (!_noiseCache.white) {\n      var buffer = [];\n\n      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        var channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n\n        for (var i = 0; i < BUFFER_LENGTH; i++) {\n          channel[i] = Math.random() * 2 - 1;\n        }\n      }\n\n      _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n    }\n\n    return _noiseCache.white;\n  }\n\n};","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { connect, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.\n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const mic = new Tone.UserMedia();\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * });\n * @category Source\n */\n\nvar UserMedia =\n/** @class */\nfunction (_super) {\n  __extends(UserMedia, _super);\n\n  function UserMedia() {\n    var _this = _super.call(this, optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"])) || this;\n\n    _this.name = \"UserMedia\";\n    var options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this.mute = options.mute;\n    return _this;\n  }\n\n  UserMedia.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  };\n  /**\n   * Open the media stream. If a string is passed in, it is assumed\n   * to be the label or id of the stream, if a number is passed in,\n   * it is the input number of the stream.\n   * @param  labelOrId The label or id of the audio input media device.\n   *                   With no argument, the default stream is opened.\n   * @return The promise is resolved when the stream is open.\n   */\n\n\n  UserMedia.prototype.open = function (labelOrId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices, constraints, stream, mediaStreamNode;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(UserMedia.supported, \"UserMedia is not supported\"); // close the previous stream\n\n            if (this.state === \"started\") {\n              this.close();\n            }\n\n            return [4\n            /*yield*/\n            , UserMedia.enumerateDevices()];\n\n          case 1:\n            devices = _a.sent();\n\n            if (isNumber(labelOrId)) {\n              this._device = devices[labelOrId];\n            } else {\n              this._device = devices.find(function (device) {\n                return device.label === labelOrId || device.deviceId === labelOrId;\n              }); // didn't find a matching device\n\n              if (!this._device && devices.length > 0) {\n                this._device = devices[0];\n              }\n\n              assert(isDefined(this._device), \"No matching device \" + labelOrId);\n            }\n\n            constraints = {\n              audio: {\n                echoCancellation: false,\n                sampleRate: this.context.sampleRate,\n                noiseSuppression: false,\n                mozNoiseSuppression: false\n              }\n            };\n\n            if (this._device) {\n              // @ts-ignore\n              constraints.audio.deviceId = this._device.deviceId;\n            }\n\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.getUserMedia(constraints)];\n\n          case 2:\n            stream = _a.sent(); // start a new source only if the previous one is closed\n\n            if (!this._stream) {\n              this._stream = stream;\n              mediaStreamNode = this.context.createMediaStreamSource(stream); // Connect the MediaStreamSourceNode to a gate gain node\n\n              connect(mediaStreamNode, this.output);\n              this._mediaStream = mediaStreamNode;\n            }\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Close the media stream\n   */\n\n\n  UserMedia.prototype.close = function () {\n    if (this._stream && this._mediaStream) {\n      this._stream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n\n      this._stream = undefined; // remove the old media stream\n\n      this._mediaStream.disconnect();\n\n      this._mediaStream = undefined;\n    }\n\n    this._device = undefined;\n    return this;\n  };\n  /**\n   * Returns a promise which resolves with the list of audio input devices available.\n   * @return The promise that is resolved with the devices\n   * @example\n   * Tone.UserMedia.enumerateDevices().then((devices) => {\n   * \t// print the device labels\n   * \tconsole.log(devices.map(device => device.label));\n   * });\n   */\n\n\n  UserMedia.enumerateDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allDevices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.enumerateDevices()];\n\n          case 1:\n            allDevices = _a.sent();\n            return [2\n            /*return*/\n            , allDevices.filter(function (device) {\n              return device.kind === \"audioinput\";\n            })];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(UserMedia.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, \"started\" when the microphone is open\n     * and \"stopped\" when the mic is closed.\n     */\n    get: function () {\n      return this._stream && this._stream.active ? \"started\" : \"stopped\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"deviceId\", {\n    /**\n     * Returns an identifier for the represented device that is\n     * persisted across sessions. It is un-guessable by other applications and\n     * unique to the origin of the calling application. It is reset when the\n     * user clears cookies (for Private Browsing, a different identifier is\n     * used that is not persisted across sessions). Returns undefined when the\n     * device is not open.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.deviceId;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"groupId\", {\n    /**\n     * Returns a group identifier. Two devices have the\n     * same group identifier if they belong to the same physical device.\n     * Returns null  when the device is not open.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.groupId;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"label\", {\n    /**\n     * Returns a label describing this device (for example \"Built-in Microphone\").\n     * Returns undefined when the device is not open or label is not available\n     * because of permissions.\n     */\n    get: function () {\n      if (this._device) {\n        return this._device.label;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(UserMedia.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     * @example\n     * const mic = new Tone.UserMedia();\n     * mic.open().then(() => {\n     * \t// promise resolves when input is available\n     * });\n     * // mute the output\n     * mic.mute = true;\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UserMedia.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.close();\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n    return this;\n  };\n\n  Object.defineProperty(UserMedia, \"supported\", {\n    /**\n     * If getUserMedia is supported by the browser.\n     */\n    get: function () {\n      return isDefined(navigator.mediaDevices) && isDefined(navigator.mediaDevices.getUserMedia);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return UserMedia;\n}(ToneAudioNode);\n\nexport { UserMedia };","import { __awaiter, __generator } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\n\nexport function generateWaveform(instance, length) {\n  return __awaiter(this, void 0, void 0, function () {\n    var duration, context, clone, buffer;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          duration = length / instance.context.sampleRate;\n          context = new OfflineContext(1, duration, instance.context.sampleRate);\n          clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context: context\n          })).toDestination();\n          clone.start(0);\n          return [4\n          /*yield*/\n          , context.render()];\n\n        case 1:\n          buffer = _a.sent();\n          return [2\n          /*return*/\n          , buffer.getChannelData(0)];\n      }\n    });\n  });\n}","import { __extends } from \"tslib\";\nimport { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\n\nvar ToneOscillatorNode =\n/** @class */\nfunction (_super) {\n  __extends(ToneOscillatorNode, _super);\n\n  function ToneOscillatorNode() {\n    var _this = _super.call(this, optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"ToneOscillatorNode\";\n    /**\n     * The oscillator\n     */\n\n    _this._oscillator = _this.context.createOscillator();\n    _this._internalChannels = [_this._oscillator];\n    var options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    connect(_this._oscillator, _this._gainNode);\n    _this.type = options.type;\n    _this.frequency = new Param({\n      context: _this.context,\n      param: _this._oscillator.frequency,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Param({\n      context: _this.context,\n      param: _this._oscillator.detune,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, [\"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  ToneOscillatorNode.getDefaults = function () {\n    return Object.assign(OneShotSource.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      type: \"sine\"\n    });\n  };\n  /**\n   * Start the oscillator node at the given time\n   * @param  time When to start the oscillator\n   */\n\n\n  ToneOscillatorNode.prototype.start = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n\n    this._startGain(computedTime);\n\n    this._oscillator.start(computedTime);\n\n    return this;\n  };\n\n  ToneOscillatorNode.prototype._stopSource = function (time) {\n    this._oscillator.stop(time);\n  };\n  /**\n   * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n   * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n   */\n\n\n  ToneOscillatorNode.prototype.setPeriodicWave = function (periodicWave) {\n    this._oscillator.setPeriodicWave(periodicWave);\n\n    return this;\n  };\n\n  Object.defineProperty(ToneOscillatorNode.prototype, \"type\", {\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get: function () {\n      return this._oscillator.type;\n    },\n    set: function (type) {\n      this._oscillator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  ToneOscillatorNode.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this.state === \"started\") {\n      this.stop();\n    }\n\n    this._oscillator.disconnect();\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  };\n\n  return ToneOscillatorNode;\n}(OneShotSource);\n\nexport { ToneOscillatorNode };","import { __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\n\nvar Oscillator =\n/** @class */\nfunction (_super) {\n  __extends(Oscillator, _super);\n\n  function Oscillator() {\n    var _this = _super.call(this, optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"Oscillator\";\n    /**\n     * the main oscillator\n     */\n\n    _this._oscillator = null;\n    var options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    readOnly(_this, \"frequency\");\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, \"detune\");\n    _this._partials = options.partials;\n    _this._partialCount = options.partialCount;\n    _this._type = options.type;\n\n    if (options.partialCount && options.type !== \"custom\") {\n      _this._type = _this.baseType + options.partialCount.toString();\n    }\n\n    _this.phase = options.phase;\n    return _this;\n  }\n\n  Oscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      partialCount: 0,\n      partials: [],\n      phase: 0,\n      type: \"sine\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  Oscillator.prototype._start = function (time) {\n    var _this = this;\n\n    var computedTime = this.toSeconds(time); // new oscillator with previous values\n\n    var oscillator = new ToneOscillatorNode({\n      context: this.context,\n      onended: function () {\n        return _this.onstop(_this);\n      }\n    });\n    this._oscillator = oscillator;\n\n    if (this._wave) {\n      this._oscillator.setPeriodicWave(this._wave);\n    } else {\n      this._oscillator.type = this._type;\n    } // connect the control signal to the oscillator frequency & detune\n\n\n    this._oscillator.connect(this.output);\n\n    this.frequency.connect(this._oscillator.frequency);\n    this.detune.connect(this._oscillator.detune); // start the oscillator\n\n    this._oscillator.start(computedTime);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  Oscillator.prototype._stop = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    if (this._oscillator) {\n      this._oscillator.stop(computedTime);\n    }\n  };\n  /**\n   * Restart the oscillator. Does not stop the oscillator, but instead\n   * just cancels any scheduled 'stop' from being invoked.\n   */\n\n\n  Oscillator.prototype._restart = function (time) {\n    var computedTime = this.toSeconds(time);\n    this.log(\"restart\", computedTime);\n\n    if (this._oscillator) {\n      this._oscillator.cancelStop();\n    }\n\n    this._state.cancel(computedTime);\n\n    return this;\n  };\n  /**\n   * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n   * will also affect the oscillators frequency.\n   * @example\n   * const osc = new Tone.Oscillator().toDestination().start();\n   * osc.frequency.value = 440;\n   * // the ratio between the bpm and the frequency will be maintained\n   * osc.syncFrequency();\n   * // double the tempo\n   * Tone.Transport.bpm.value *= 2;\n   * // the frequency of the oscillator is doubled to 880\n   */\n\n\n  Oscillator.prototype.syncFrequency = function () {\n    this.context.transport.syncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Unsync the oscillator's frequency from the Transport.\n   * See Oscillator.syncFrequency\n   */\n\n\n  Oscillator.prototype.unsyncFrequency = function () {\n    this.context.transport.unsyncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Get a cached periodic wave. Avoids having to recompute\n   * the oscillator values when they have already been computed\n   * with the same values.\n   */\n\n\n  Oscillator.prototype._getCachedPeriodicWave = function () {\n    var _this = this;\n\n    if (this._type === \"custom\") {\n      var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n        return description.phase === _this._phase && deepEquals(description.partials, _this._partials);\n      });\n\n      return oscProps;\n    } else {\n      var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n        return description.type === _this._type && description.phase === _this._phase;\n      });\n\n      this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n      return oscProps;\n    }\n  };\n\n  Object.defineProperty(Oscillator.prototype, \"type\", {\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._type = type;\n      var isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\n      if (this._phase === 0 && isBasicType) {\n        this._wave = undefined;\n        this._partialCount = 0; // just go with the basic approach\n\n        if (this._oscillator !== null) {\n          // already tested that it's a basic type\n          this._oscillator.type = type;\n        }\n      } else {\n        // first check if the value is cached\n        var cache = this._getCachedPeriodicWave();\n\n        if (isDefined(cache)) {\n          var partials = cache.partials,\n              wave = cache.wave;\n          this._wave = wave;\n          this._partials = partials;\n\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          }\n        } else {\n          var _a = __read(this._getRealImaginary(type, this._phase), 2),\n              real = _a[0],\n              imag = _a[1];\n\n          var periodicWave = this.context.createPeriodicWave(real, imag);\n          this._wave = periodicWave;\n\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          } // set the cache\n\n\n          Oscillator._periodicWaveCache.push({\n            imag: imag,\n            partialCount: this._partialCount,\n            partials: this._partials,\n            phase: this._phase,\n            real: real,\n            type: this._type,\n            wave: this._wave\n          });\n\n          if (Oscillator._periodicWaveCache.length > 100) {\n            Oscillator._periodicWaveCache.shift();\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._type.replace(this.partialCount.toString(), \"\");\n    },\n    set: function (baseType) {\n      if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n        this.type = baseType + this.partialCount;\n      } else {\n        this.type = baseType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._partialCount;\n    },\n    set: function (p) {\n      assertRange(p, 0);\n      var type = this._type;\n      var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\n      if (partial) {\n        type = partial[1];\n      }\n\n      if (this._type !== \"custom\") {\n        if (p === 0) {\n          this.type = type;\n        } else {\n          this.type = type + p.toString();\n        }\n      } else {\n        // extend or shorten the partials array\n        var fullPartials_1 = new Float32Array(p); // copy over the partials array\n\n        this._partials.forEach(function (v, i) {\n          return fullPartials_1[i] = v;\n        });\n\n        this._partials = Array.from(fullPartials_1);\n        this.type = this._type;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Returns the real and imaginary components based\n   * on the oscillator type.\n   * @returns [real: Float32Array, imaginary: Float32Array]\n   */\n\n  Oscillator.prototype._getRealImaginary = function (type, phase) {\n    var fftSize = 4096;\n    var periodicWaveSize = fftSize / 2;\n    var real = new Float32Array(periodicWaveSize);\n    var imag = new Float32Array(periodicWaveSize);\n    var partialCount = 1;\n\n    if (type === \"custom\") {\n      partialCount = this._partials.length + 1;\n      this._partialCount = this._partials.length;\n      periodicWaveSize = partialCount; // if the partial count is 0, don't bother doing any computation\n\n      if (this._partials.length === 0) {\n        return [real, imag];\n      }\n    } else {\n      var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\n      if (partial) {\n        partialCount = parseInt(partial[2], 10) + 1;\n        this._partialCount = parseInt(partial[2], 10);\n        type = partial[1];\n        partialCount = Math.max(partialCount, 2);\n        periodicWaveSize = partialCount;\n      } else {\n        this._partialCount = 0;\n      }\n\n      this._partials = [];\n    }\n\n    for (var n = 1; n < periodicWaveSize; ++n) {\n      var piFactor = 2 / (n * Math.PI);\n      var b = void 0;\n\n      switch (type) {\n        case \"sine\":\n          b = n <= partialCount ? 1 : 0;\n          this._partials[n - 1] = b;\n          break;\n\n        case \"square\":\n          b = n & 1 ? 2 * piFactor : 0;\n          this._partials[n - 1] = b;\n          break;\n\n        case \"sawtooth\":\n          b = piFactor * (n & 1 ? 1 : -1);\n          this._partials[n - 1] = b;\n          break;\n\n        case \"triangle\":\n          if (n & 1) {\n            b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n          } else {\n            b = 0;\n          }\n\n          this._partials[n - 1] = b;\n          break;\n\n        case \"custom\":\n          b = this._partials[n - 1];\n          break;\n\n        default:\n          throw new TypeError(\"Oscillator: invalid type: \" + type);\n      }\n\n      if (b !== 0) {\n        real[n] = -b * Math.sin(phase * n);\n        imag[n] = b * Math.cos(phase * n);\n      } else {\n        real[n] = 0;\n        imag[n] = 0;\n      }\n    }\n\n    return [real, imag];\n  };\n  /**\n   * Compute the inverse FFT for a given phase.\n   */\n\n\n  Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n    var sum = 0;\n    var len = real.length;\n\n    for (var i = 0; i < len; i++) {\n      sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n    }\n\n    return sum;\n  };\n  /**\n   * Returns the initial value of the oscillator when stopped.\n   * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n   */\n\n\n  Oscillator.prototype.getInitialValue = function () {\n    var _a = __read(this._getRealImaginary(this._type, 0), 2),\n        real = _a[0],\n        imag = _a[1];\n\n    var maxValue = 0;\n    var twoPi = Math.PI * 2;\n    var testPositions = 32; // check for peaks in 16 places\n\n    for (var i = 0; i < testPositions; i++) {\n      maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);\n    }\n\n    return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n  };\n\n  Object.defineProperty(Oscillator.prototype, \"partials\", {\n    get: function () {\n      return this._partials.slice(0, this.partialCount);\n    },\n    set: function (partials) {\n      this._partials = partials;\n      this._partialCount = this._partials.length;\n\n      if (partials.length) {\n        this.type = \"custom\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Oscillator.prototype, \"phase\", {\n    get: function () {\n      return this._phase * (180 / Math.PI);\n    },\n    set: function (phase) {\n      this._phase = phase * Math.PI / 180; // reset the type\n\n      this.type = this._type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Oscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n\n  Oscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._oscillator !== null) {\n      this._oscillator.dispose();\n    }\n\n    this._wave = undefined;\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  };\n  /**\n   * Cache the periodic waves to avoid having to redo computations\n   */\n\n\n  Oscillator._periodicWaveCache = [];\n  return Oscillator;\n}(Source);\n\nexport { Oscillator };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\n\nvar SignalOperator =\n/** @class */\nfunction (_super) {\n  __extends(SignalOperator, _super);\n\n  function SignalOperator() {\n    return _super.call(this, Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"]))) || this;\n  }\n\n  SignalOperator.prototype.connect = function (destination, outputNum, inputNum) {\n    if (outputNum === void 0) {\n      outputNum = 0;\n    }\n\n    if (inputNum === void 0) {\n      inputNum = 0;\n    }\n\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  };\n\n  return SignalOperator;\n}(ToneAudioNode);\n\nexport { SignalOperator };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\n\nvar WaveShaper =\n/** @class */\nfunction (_super) {\n  __extends(WaveShaper, _super);\n\n  function WaveShaper() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]))) || this;\n\n    _this.name = \"WaveShaper\";\n    /**\n     * the waveshaper node\n     */\n\n    _this._shaper = _this.context.createWaveShaper();\n    /**\n     * The input to the waveshaper node.\n     */\n\n    _this.input = _this._shaper;\n    /**\n     * The output from the waveshaper node\n     */\n\n    _this.output = _this._shaper;\n    var options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n    if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n      _this.curve = Float32Array.from(options.mapping);\n    } else if (isFunction(options.mapping)) {\n      _this.setMap(options.mapping, options.length);\n    }\n\n    return _this;\n  }\n\n  WaveShaper.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      length: 1024\n    });\n  };\n  /**\n   * Uses a mapping function to set the value of the curve.\n   * @param mapping The function used to define the values.\n   *                The mapping function take two arguments:\n   *                the first is the value at the current position\n   *                which goes from -1 to 1 over the number of elements\n   *                in the curve array. The second argument is the array position.\n   * @example\n   * const shaper = new Tone.WaveShaper();\n   * // map the input signal from [-1, 1] to [0, 10]\n   * shaper.setMap((val, index) => (val + 1) * 5);\n   */\n\n\n  WaveShaper.prototype.setMap = function (mapping, length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    var array = new Float32Array(length);\n\n    for (var i = 0, len = length; i < len; i++) {\n      var normalized = i / (len - 1) * 2 - 1;\n      array[i] = mapping(normalized, i);\n    }\n\n    this.curve = array;\n    return this;\n  };\n\n  Object.defineProperty(WaveShaper.prototype, \"curve\", {\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get: function () {\n      return this._shaper.curve;\n    },\n    set: function (mapping) {\n      this._shaper.curve = mapping;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WaveShaper.prototype, \"oversample\", {\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      var isOverSampleType = [\"none\", \"2x\", \"4x\"].some(function (str) {\n        return str.includes(oversampling);\n      });\n      assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  WaveShaper.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.disconnect();\n\n    return this;\n  };\n\n  return WaveShaper;\n}(SignalOperator);\n\nexport { WaveShaper };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See {@link GainToAudio}.\n * @category Signal\n */\n\nvar AudioToGain =\n/** @class */\nfunction (_super) {\n  __extends(AudioToGain, _super);\n\n  function AudioToGain() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"AudioToGain\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function (x) {\n        return (x + 1) / 2;\n      }\n    });\n    /**\n     * The AudioRange input [-1, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The GainRange output [0, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  AudioToGain.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._norm.dispose();\n\n    return this;\n  };\n\n  return AudioToGain;\n}(SignalOperator);\n\nexport { AudioToGain };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\n\nvar Multiply =\n/** @class */\nfunction (_super) {\n  __extends(Multiply, _super);\n\n  function Multiply() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"Multiply\";\n    /**\n     * Indicates if the value should be overridden on connection\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n    _this._mult = _this.input = _this.output = new Gain({\n      context: _this.context,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    _this.factor = _this._param = _this._mult.gain;\n\n    _this.factor.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n\n  Multiply.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Multiply.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._mult.dispose();\n\n    return this;\n  };\n\n  return Multiply;\n}(Signal);\n\nexport { Multiply };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n *\n * @example\n * // a sine oscillator amplitude-modulated by a square wave\n * const amOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start().stop(\"+5\");\n * // schedule a series of notes\n * amOsc.frequency.setValueAtTime(\"F3\", \"+0.25\");\n * amOsc.frequency.setValueAtTime(\"C4\", \"+0.5\");\n * amOsc.frequency.setValueAtTime(\"Bb3\", \"+1\");\n * // schedule harmonicity changes along with those notes\n * amOsc.harmonicity.setValueAtTime(0.5, \"+0.25\");\n * amOsc.harmonicity.setValueAtTime(1, \"+1\");\n * amOsc.harmonicity.linearRampTo(1.1, 2, \"+1\");\n * // fade it out all the way at the end\n * amOsc.volume.exponentialRampTo(-Infinity, 3, \"+2,\");\n * @category Source\n */\n\nvar AMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(AMOscillator, _super);\n\n  function AMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n\n    _this.name = \"AMOscillator\";\n    /**\n     * convert the -1,1 output to 0,1\n     */\n\n    _this._modulationScale = new AudioToGain({\n      context: _this.context\n    });\n    /**\n     * the node where the modulation happens\n     */\n\n    _this._modulationNode = new Gain({\n      context: _this.context\n    });\n    var options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    _this._carrier = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: options.type\n    });\n    _this.frequency = _this._carrier.frequency, _this.detune = _this._carrier.detune;\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    }); // connections\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n\n    _this._carrier.chain(_this._modulationNode, _this.output);\n\n    readOnly(_this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    return _this;\n  }\n\n  AMOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationType: \"square\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  AMOscillator.prototype._start = function (time) {\n    this._modulator.start(time);\n\n    this._carrier.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  AMOscillator.prototype._stop = function (time) {\n    this._modulator.stop(time);\n\n    this._carrier.stop(time);\n  };\n\n  AMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._carrier.restart(time);\n  };\n\n  Object.defineProperty(AMOscillator.prototype, \"type\", {\n    /**\n     * The type of the carrier oscillator\n     */\n    get: function () {\n      return this._carrier.type;\n    },\n    set: function (type) {\n      this._carrier.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._carrier.baseType;\n    },\n    set: function (baseType) {\n      this._carrier.baseType = baseType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._carrier.partialCount;\n    },\n    set: function (partialCount) {\n      this._carrier.partialCount = partialCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator\n     */\n    get: function () {\n      return this._modulator.type;\n    },\n    set: function (type) {\n      this._modulator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._carrier.phase;\n    },\n    set: function (phase) {\n      this._carrier.phase = phase;\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AMOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._carrier.partials;\n    },\n    set: function (partials) {\n      this._carrier.partials = partials;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  AMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    this.harmonicity.dispose();\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this._modulationNode.dispose();\n\n    this._modulationScale.dispose();\n\n    return this;\n  };\n\n  return AMOscillator;\n}(Source);\n\nexport { AMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @offline 0.1 1\n * @example\n * const fmOsc = new Tone.FMOscillator({\n * \tfrequency: 20,\n * \ttype: \"square\",\n * \tmodulationType: \"triangle\",\n * \tharmonicity: 0.2,\n * \tmodulationIndex: 3\n * }).toDestination().start();\n * @category Source\n */\n\nvar FMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(FMOscillator, _super);\n\n  function FMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n\n    _this.name = \"FMOscillator\";\n    /**\n     * the node where the modulation happens\n     */\n\n    _this._modulationNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    var options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    _this._carrier = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: 0,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: options.type\n    });\n    _this.detune = _this._carrier.detune;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    _this.modulationIndex = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.modulationIndex\n    }); // connections\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n\n    _this._modulator.connect(_this._modulationNode.gain);\n\n    _this._modulationNode.connect(_this._carrier.frequency);\n\n    _this._carrier.connect(_this.output);\n\n    _this.detune.connect(_this._modulator.detune);\n\n    readOnly(_this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    return _this;\n  }\n\n  FMOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationIndex: 2,\n      modulationType: \"square\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  FMOscillator.prototype._start = function (time) {\n    this._modulator.start(time);\n\n    this._carrier.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  FMOscillator.prototype._stop = function (time) {\n    this._modulator.stop(time);\n\n    this._carrier.stop(time);\n  };\n\n  FMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._carrier.restart(time);\n\n    return this;\n  };\n\n  Object.defineProperty(FMOscillator.prototype, \"type\", {\n    get: function () {\n      return this._carrier.type;\n    },\n    set: function (type) {\n      this._carrier.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._carrier.baseType;\n    },\n    set: function (baseType) {\n      this._carrier.baseType = baseType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._carrier.partialCount;\n    },\n    set: function (partialCount) {\n      this._carrier.partialCount = partialCount;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator\n     */\n    get: function () {\n      return this._modulator.type;\n    },\n    set: function (type) {\n      this._modulator.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._carrier.phase;\n    },\n    set: function (phase) {\n      this._carrier.phase = phase;\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FMOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._carrier.partials;\n    },\n    set: function (partials) {\n      this._carrier.partials = partials;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  FMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.harmonicity.dispose();\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this._modulationNode.dispose();\n\n    this.modulationIndex.dispose();\n    return this;\n  };\n\n  return FMOscillator;\n}(Source);\n\nexport { FMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * const pulse = new Tone.PulseOscillator(\"E5\", 0.4).toDestination().start();\n * @category Source\n */\n\nvar PulseOscillator =\n/** @class */\nfunction (_super) {\n  __extends(PulseOscillator, _super);\n\n  function PulseOscillator() {\n    var _this = _super.call(this, optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"])) || this;\n\n    _this.name = \"PulseOscillator\";\n    /**\n     * gate the width amount\n     */\n\n    _this._widthGate = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * Threshold the signal to turn it into a square\n     */\n\n    _this._thresh = new WaveShaper({\n      context: _this.context,\n      mapping: function (val) {\n        return val <= 0 ? -1 : 1;\n      }\n    });\n    var options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      units: \"audioRange\",\n      value: options.width\n    });\n    _this._triangle = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase,\n      type: \"triangle\"\n    });\n    _this.frequency = _this._triangle.frequency;\n    _this.detune = _this._triangle.detune; // connections\n\n    _this._triangle.chain(_this._thresh, _this.output);\n\n    _this.width.chain(_this._widthGate, _this._thresh);\n\n    readOnly(_this, [\"width\", \"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  PulseOscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      phase: 0,\n      type: \"pulse\",\n      width: 0.2\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  PulseOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._triangle.start(time);\n\n    this._widthGate.gain.setValueAtTime(1, time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  PulseOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._triangle.stop(time); // the width is still connected to the output.\n    // that needs to be stopped also\n\n\n    this._widthGate.gain.cancelScheduledValues(time);\n\n    this._widthGate.gain.setValueAtTime(0, time);\n  };\n\n  PulseOscillator.prototype._restart = function (time) {\n    this._triangle.restart(time);\n\n    this._widthGate.gain.cancelScheduledValues(time);\n\n    this._widthGate.gain.setValueAtTime(1, time);\n  };\n\n  Object.defineProperty(PulseOscillator.prototype, \"phase\", {\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get: function () {\n      return this._triangle.phase;\n    },\n    set: function (phase) {\n      this._triangle.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get: function () {\n      return \"pulse\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"baseType\", {\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get: function () {\n      return \"pulse\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"partials\", {\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"partialCount\", {\n    /**\n     * No partials for this waveform type.\n     */\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PulseOscillator.prototype, \"carrierType\", {\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set: function (type) {\n      this._triangle.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PulseOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up method.\n   */\n\n\n  PulseOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._triangle.dispose();\n\n    this.width.dispose();\n\n    this._widthGate.dispose();\n\n    this._thresh.dispose();\n\n    return this;\n  };\n\n  return PulseOscillator;\n}(Source);\n\nexport { PulseOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\n\nvar FatOscillator =\n/** @class */\nfunction (_super) {\n  __extends(FatOscillator, _super);\n\n  function FatOscillator() {\n    var _this = _super.call(this, optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"])) || this;\n\n    _this.name = \"FatOscillator\";\n    /**\n     * The array of oscillators\n     */\n\n    _this._oscillators = [];\n    var options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this._spread = options.spread;\n    _this._type = options.type;\n    _this._phase = options.phase;\n    _this._partials = options.partials;\n    _this._partialCount = options.partialCount; // set the count initially\n\n    _this.count = options.count;\n    readOnly(_this, [\"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  FatOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), {\n      count: 3,\n      spread: 20,\n      type: \"sawtooth\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  FatOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._forEach(function (osc) {\n      return osc.start(time);\n    });\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  FatOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._forEach(function (osc) {\n      return osc.stop(time);\n    });\n  };\n\n  FatOscillator.prototype._restart = function (time) {\n    this._forEach(function (osc) {\n      return osc.restart(time);\n    });\n  };\n  /**\n   * Iterate over all of the oscillators\n   */\n\n\n  FatOscillator.prototype._forEach = function (iterator) {\n    for (var i = 0; i < this._oscillators.length; i++) {\n      iterator(this._oscillators[i], i);\n    }\n  };\n\n  Object.defineProperty(FatOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      this._type = type;\n\n      this._forEach(function (osc) {\n        return osc.type = type;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"spread\", {\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get: function () {\n      return this._spread;\n    },\n    set: function (spread) {\n      this._spread = spread;\n\n      if (this._oscillators.length > 1) {\n        var start_1 = -spread / 2;\n        var step_1 = spread / (this._oscillators.length - 1);\n\n        this._forEach(function (osc, i) {\n          return osc.detune.value = start_1 + step_1 * i;\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"count\", {\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get: function () {\n      return this._oscillators.length;\n    },\n    set: function (count) {\n      var _this = this;\n\n      assertRange(count, 1);\n\n      if (this._oscillators.length !== count) {\n        // dispose the previous oscillators\n        this._forEach(function (osc) {\n          return osc.dispose();\n        });\n\n        this._oscillators = [];\n\n        for (var i = 0; i < count; i++) {\n          var osc = new Oscillator({\n            context: this.context,\n            volume: -6 - count * 1.1,\n            type: this._type,\n            phase: this._phase + i / count * 360,\n            partialCount: this._partialCount,\n            onstop: i === 0 ? function () {\n              return _this.onstop(_this);\n            } : noOp\n          });\n\n          if (this.type === \"custom\") {\n            osc.partials = this._partials;\n          }\n\n          this.frequency.connect(osc.frequency);\n          this.detune.connect(osc.detune);\n          osc.detune.overridden = false;\n          osc.connect(this.output);\n          this._oscillators[i] = osc;\n        } // set the spread\n\n\n        this.spread = this._spread;\n\n        if (this.state === \"started\") {\n          this._forEach(function (osc) {\n            return osc.start();\n          });\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._phase;\n    },\n    set: function (phase) {\n      this._phase = phase;\n\n      this._forEach(function (osc) {\n        return osc.phase = phase;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"baseType\", {\n    get: function () {\n      return this._oscillators[0].baseType;\n    },\n    set: function (baseType) {\n      this._forEach(function (osc) {\n        return osc.baseType = baseType;\n      });\n\n      this._type = this._oscillators[0].type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"partials\", {\n    get: function () {\n      return this._oscillators[0].partials;\n    },\n    set: function (partials) {\n      this._partials = partials;\n      this._partialCount = this._partials.length;\n\n      if (partials.length) {\n        this._type = \"custom\";\n\n        this._forEach(function (osc) {\n          return osc.partials = partials;\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FatOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._oscillators[0].partialCount;\n    },\n    set: function (partialCount) {\n      this._partialCount = partialCount;\n\n      this._forEach(function (osc) {\n        return osc.partialCount = partialCount;\n      });\n\n      this._type = this._oscillators[0].type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FatOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  FatOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._forEach(function (osc) {\n      return osc.dispose();\n    });\n\n    return this;\n  };\n\n  return FatOscillator;\n}(Source);\n\nexport { FatOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * const pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toDestination().start();\n * @category Source\n */\n\nvar PWMOscillator =\n/** @class */\nfunction (_super) {\n  __extends(PWMOscillator, _super);\n\n  function PWMOscillator() {\n    var _this = _super.call(this, optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"])) || this;\n\n    _this.name = \"PWMOscillator\";\n    _this.sourceType = \"pwm\";\n    /**\n     * Scale the oscillator so it doesn't go silent\n     * at the extreme values.\n     */\n\n    _this._scale = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    var options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n    _this._pulse = new PulseOscillator({\n      context: _this.context,\n      frequency: options.modulationFrequency\n    }); // change the pulse oscillator type\n\n    _this._pulse.carrierType = \"sine\";\n    _this.modulationFrequency = _this._pulse.frequency;\n    _this._modulator = new Oscillator({\n      context: _this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: function () {\n        return _this.onstop(_this);\n      },\n      phase: options.phase\n    });\n    _this.frequency = _this._modulator.frequency;\n    _this.detune = _this._modulator.detune; // connections\n\n    _this._modulator.chain(_this._scale, _this._pulse.width);\n\n    _this._pulse.connect(_this.output);\n\n    readOnly(_this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    return _this;\n  }\n\n  PWMOscillator.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      modulationFrequency: 0.4,\n      phase: 0,\n      type: \"pwm\"\n    });\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  PWMOscillator.prototype._start = function (time) {\n    time = this.toSeconds(time);\n\n    this._modulator.start(time);\n\n    this._pulse.start(time);\n  };\n  /**\n   * stop the oscillator\n   */\n\n\n  PWMOscillator.prototype._stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._modulator.stop(time);\n\n    this._pulse.stop(time);\n  };\n  /**\n   * restart the oscillator\n   */\n\n\n  PWMOscillator.prototype._restart = function (time) {\n    this._modulator.restart(time);\n\n    this._pulse.restart(time);\n  };\n\n  Object.defineProperty(PWMOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get: function () {\n      return \"pwm\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"baseType\", {\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get: function () {\n      return \"pwm\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"partials\", {\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get: function () {\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"partialCount\", {\n    /**\n     * No partials for this waveform type.\n     */\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PWMOscillator.prototype, \"phase\", {\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get: function () {\n      return this._modulator.phase;\n    },\n    set: function (phase) {\n      this._modulator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PWMOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  PWMOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._pulse.dispose();\n\n    this._scale.dispose();\n\n    this._modulator.dispose();\n\n    return this;\n  };\n\n  return PWMOscillator;\n}(Source);\n\nexport { PWMOscillator };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nvar OmniOscillatorSourceMap = {\n  am: AMOscillator,\n  fat: FatOscillator,\n  fm: FMOscillator,\n  oscillator: Oscillator,\n  pulse: PulseOscillator,\n  pwm: PWMOscillator\n};\n/**\n * OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n * Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n * into one class. The oscillator class can be changed by setting the `type`.\n * `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n * any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n * will use the FMOscillator, AMOscillator or FatOscillator respectively.\n * For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n * to a FatOscillator of type \"sawtooth\".\n * @example\n * const omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n * @category Source\n */\n\nvar OmniOscillator =\n/** @class */\nfunction (_super) {\n  __extends(OmniOscillator, _super);\n\n  function OmniOscillator() {\n    var _this = _super.call(this, optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"OmniOscillator\";\n    var options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_this, [\"frequency\", \"detune\"]); // set the options\n\n    _this.set(options);\n\n    return _this;\n  }\n\n  OmniOscillator.getDefaults = function () {\n    return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  OmniOscillator.prototype._start = function (time) {\n    this._oscillator.start(time);\n  };\n  /**\n   * start the oscillator\n   */\n\n\n  OmniOscillator.prototype._stop = function (time) {\n    this._oscillator.stop(time);\n  };\n\n  OmniOscillator.prototype._restart = function (time) {\n    this._oscillator.restart(time);\n\n    return this;\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"type\", {\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone..OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * // an square wave frequency modulated by a sawtooth\n     * omniOsc.type = \"fmsquare\";\n     * omniOsc.modulationType = \"sawtooth\";\n     */\n    get: function () {\n      var _this = this;\n\n      var prefix = \"\";\n\n      if ([\"am\", \"fm\", \"fat\"].some(function (p) {\n        return _this._sourceType === p;\n      })) {\n        prefix = this._sourceType;\n      }\n\n      return prefix + this._oscillator.type;\n    },\n    set: function (type) {\n      if (type.substr(0, 2) === \"fm\") {\n        this._createNewOscillator(\"fm\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(2);\n      } else if (type.substr(0, 2) === \"am\") {\n        this._createNewOscillator(\"am\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(2);\n      } else if (type.substr(0, 3) === \"fat\") {\n        this._createNewOscillator(\"fat\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type.substr(3);\n      } else if (type === \"pwm\") {\n        this._createNewOscillator(\"pwm\");\n\n        this._oscillator = this._oscillator;\n      } else if (type === \"pulse\") {\n        this._createNewOscillator(\"pulse\");\n      } else {\n        this._createNewOscillator(\"oscillator\");\n\n        this._oscillator = this._oscillator;\n        this._oscillator.type = type;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"partials\", {\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get: function () {\n      return this._oscillator.partials;\n    },\n    set: function (partials) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n        this._oscillator.partials = partials;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"partialCount\", {\n    get: function () {\n      return this._oscillator.partialCount;\n    },\n    set: function (partialCount) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n        this._oscillator.partialCount = partialCount;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype.set = function (props) {\n    // make sure the type is set first\n    if (Reflect.has(props, \"type\") && props.type) {\n      this.type = props.type;\n    } // then set the rest\n\n\n    _super.prototype.set.call(this, props);\n\n    return this;\n  };\n  /**\n   * connect the oscillator to the frequency and detune signals\n   */\n\n\n  OmniOscillator.prototype._createNewOscillator = function (oscType) {\n    var _this = this;\n\n    if (oscType !== this._sourceType) {\n      this._sourceType = oscType;\n      var OscConstructor = OmniOscillatorSourceMap[oscType]; // short delay to avoid clicks on the change\n\n      var now = this.now();\n\n      if (this._oscillator) {\n        var oldOsc_1 = this._oscillator;\n        oldOsc_1.stop(now); // dispose the old one\n\n        this.context.setTimeout(function () {\n          return oldOsc_1.dispose();\n        }, this.blockTime);\n      }\n\n      this._oscillator = new OscConstructor({\n        context: this.context\n      });\n      this.frequency.connect(this._oscillator.frequency);\n      this.detune.connect(this._oscillator.detune);\n\n      this._oscillator.connect(this.output);\n\n      this._oscillator.onstop = function () {\n        return _this.onstop(_this);\n      };\n\n      if (this.state === \"started\") {\n        this._oscillator.start(now);\n      }\n    }\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"phase\", {\n    get: function () {\n      return this._oscillator.phase;\n    },\n    set: function (phase) {\n      this._oscillator.phase = phase;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"sourceType\", {\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get: function () {\n      return this._sourceType;\n    },\n    set: function (sType) {\n      // the basetype defaults to sine\n      var baseType = \"sine\";\n\n      if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n        baseType = this._oscillator.type;\n      } // set the type\n\n\n      if (sType === \"fm\") {\n        this.type = \"fm\" + baseType;\n      } else if (sType === \"am\") {\n        this.type = \"am\" + baseType;\n      } else if (sType === \"fat\") {\n        this.type = \"fat\" + baseType;\n      } else if (sType === \"oscillator\") {\n        this.type = baseType;\n      } else if (sType === \"pulse\") {\n        this.type = \"pulse\";\n      } else if (sType === \"pwm\") {\n        this.type = \"pwm\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype._getOscType = function (osc, sourceType) {\n    return osc instanceof OmniOscillatorSourceMap[sourceType];\n  };\n\n  Object.defineProperty(OmniOscillator.prototype, \"baseType\", {\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * omniOsc.sourceType; // 'fm'\n     * omniOsc.baseType; // 'square'\n     * omniOsc.partialCount; // 4\n     */\n    get: function () {\n      return this._oscillator.baseType;\n    },\n    set: function (baseType) {\n      if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\") && baseType !== \"pulse\" && baseType !== \"pwm\") {\n        this._oscillator.baseType = baseType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"width\", {\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n     * // can access the width attribute only if type === \"pulse\"\n     * omniOsc.width.value = 0.2;\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"pulse\")) {\n        return this._oscillator.width;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"count\", {\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fat\")) {\n        return this._oscillator.count;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (count) {\n      if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n        this._oscillator.count = count;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"spread\", {\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fat\")) {\n        return this._oscillator.spread;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (spread) {\n      if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n        this._oscillator.spread = spread;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationType\", {\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n        return this._oscillator.modulationType;\n      } else {\n        return undefined;\n      }\n    },\n    set: function (mType) {\n      if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n        this._oscillator.modulationType = mType;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationIndex\", {\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\")) {\n        return this._oscillator.modulationIndex;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"harmonicity\", {\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n        return this._oscillator.harmonicity;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OmniOscillator.prototype, \"modulationFrequency\", {\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get: function () {\n      if (this._getOscType(this._oscillator, \"pwm\")) {\n        return this._oscillator.modulationFrequency;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OmniOscillator.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , generateWaveform(this, length)];\n      });\n    });\n  };\n\n  OmniOscillator.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.detune.dispose();\n    this.frequency.dispose();\n\n    this._oscillator.dispose();\n\n    return this;\n  };\n\n  return OmniOscillator;\n}(Source);\n\nexport { OmniOscillator };","import { __extends } from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @offline 0.5 1\n * @example\n * const add = new Tone.Add(2).toDestination();\n * add.addend.setValueAtTime(1, 0.2);\n * const signal = new Tone.Signal(2);\n * // add a signal and a scalar\n * signal.connect(add);\n * signal.setValueAtTime(1, 0.1);\n * @category Signal\n */\n\nvar Add =\n/** @class */\nfunction (_super) {\n  __extends(Add, _super);\n\n  function Add() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.override = false;\n    _this.name = \"Add\";\n    /**\n     * the summing node\n     */\n\n    _this._sum = new Gain({\n      context: _this.context\n    });\n    _this.input = _this._sum;\n    _this.output = _this._sum;\n    /**\n     * The value which is added to the input signal\n     */\n\n    _this.addend = _this._param;\n    connectSeries(_this._constantSource, _this._sum);\n    return _this;\n  }\n\n  Add.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Add.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._sum.dispose();\n\n    return this;\n  };\n\n  return Add;\n}(Signal);\n\nexport { Add };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\n\nvar Scale =\n/** @class */\nfunction (_super) {\n  __extends(Scale, _super);\n\n  function Scale() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]))) || this;\n\n    _this.name = \"Scale\";\n    var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    _this._mult = _this.input = new Multiply({\n      context: _this.context,\n      value: options.max - options.min\n    });\n    _this._add = _this.output = new Add({\n      context: _this.context,\n      value: options.min\n    });\n    _this._min = options.min;\n    _this._max = options.max;\n\n    _this.input.connect(_this.output);\n\n    return _this;\n  }\n\n  Scale.getDefaults = function () {\n    return Object.assign(SignalOperator.getDefaults(), {\n      max: 1,\n      min: 0\n    });\n  };\n\n  Object.defineProperty(Scale.prototype, \"min\", {\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get: function () {\n      return this._min;\n    },\n    set: function (min) {\n      this._min = min;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Scale.prototype, \"max\", {\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get: function () {\n      return this._max;\n    },\n    set: function (max) {\n      this._max = max;\n\n      this._setRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * set the values\n   */\n\n  Scale.prototype._setRange = function () {\n    this._add.value = this._min;\n    this._mult.value = this._max - this._min;\n  };\n\n  Scale.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._add.dispose();\n\n    this._mult.dispose();\n\n    return this;\n  };\n\n  return Scale;\n}(SignalOperator);\n\nexport { Scale };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\n\nvar Zero =\n/** @class */\nfunction (_super) {\n  __extends(Zero, _super);\n\n  function Zero() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Zero.getDefaults(), arguments))) || this;\n\n    _this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n\n    _this._gain = new Gain({\n      context: _this.context\n    });\n    /**\n     * Only outputs 0\n     */\n\n    _this.output = _this._gain;\n    /**\n     * no input node\n     */\n\n    _this.input = undefined;\n    connect(_this.context.getConstant(0), _this._gain);\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  Zero.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  };\n\n  return Zero;\n}(SignalOperator);\n\nexport { Zero };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n *\n * @example\n * const filter = new Tone.Filter().toDestination();\n * const noise = new Tone.Noise().connect(filter).start();\n * const lfo = new Tone.LFO(\"4n\", 400, 4000).start();\n * // have it control the filters cutoff\n * lfo.connect(filter.frequency);\n * @category Source\n */\n\nvar LFO =\n/** @class */\nfunction (_super) {\n  __extends(LFO, _super);\n\n  function LFO() {\n    var _this = _super.call(this, optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"])) || this;\n\n    _this.name = \"LFO\";\n    /**\n     * The value that the LFO outputs when it's stopped\n     */\n\n    _this._stoppedValue = 0;\n    /**\n     * A private placeholder for the units\n     */\n\n    _this._units = \"number\";\n    /**\n     * If the input value is converted using the [[units]]\n     */\n\n    _this.convert = true;\n    /**\n     * Private methods borrowed from Param\n     */\n    // @ts-ignore\n\n    _this._fromType = Param.prototype._fromType; // @ts-ignore\n\n    _this._toType = Param.prototype._toType; // @ts-ignore\n\n    _this._is = Param.prototype._is; // @ts-ignore\n\n    _this._clampValue = Param.prototype._clampValue;\n    var options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]); // @ts-ignore\n\n    _this._oscillator = new Oscillator({\n      context: _this.context,\n      frequency: options.frequency,\n      type: options.type\n    });\n    _this.frequency = _this._oscillator.frequency;\n    _this._amplitudeGain = new Gain({\n      context: _this.context,\n      gain: options.amplitude,\n      units: \"normalRange\"\n    });\n    _this.amplitude = _this._amplitudeGain.gain;\n    _this._stoppedSignal = new Signal({\n      context: _this.context,\n      units: \"audioRange\",\n      value: 0\n    });\n    _this._zeros = new Zero({\n      context: _this.context\n    });\n    _this._a2g = new AudioToGain({\n      context: _this.context\n    });\n    _this._scaler = _this.output = new Scale({\n      context: _this.context,\n      max: options.max,\n      min: options.min\n    });\n    _this.units = options.units;\n    _this.min = options.min;\n    _this.max = options.max; // connect it up\n\n    _this._oscillator.chain(_this._a2g, _this._amplitudeGain, _this._scaler);\n\n    _this._zeros.connect(_this._a2g);\n\n    _this._stoppedSignal.connect(_this._a2g);\n\n    readOnly(_this, [\"amplitude\", \"frequency\"]);\n    _this.phase = options.phase;\n    return _this;\n  }\n\n  LFO.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      amplitude: 1,\n      frequency: \"4n\",\n      max: 1,\n      min: 0,\n      phase: 0,\n      type: \"sine\",\n      units: \"number\"\n    });\n  };\n  /**\n   * Start the LFO.\n   * @param time The time the LFO will start\n   */\n\n\n  LFO.prototype.start = function (time) {\n    time = this.toSeconds(time);\n\n    this._stoppedSignal.setValueAtTime(0, time);\n\n    this._oscillator.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the LFO.\n   * @param  time The time the LFO will stop\n   */\n\n\n  LFO.prototype.stop = function (time) {\n    time = this.toSeconds(time);\n\n    this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\n    this._oscillator.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the start/stop/pause to the transport\n   * and the frequency to the bpm of the transport\n   * @example\n   * const lfo = new Tone.LFO(\"8n\");\n   * lfo.sync().start(0);\n   * // the rate of the LFO will always be an eighth note, even as the tempo changes\n   */\n\n\n  LFO.prototype.sync = function () {\n    this._oscillator.sync();\n\n    this._oscillator.syncFrequency();\n\n    return this;\n  };\n  /**\n   * unsync the LFO from transport control\n   */\n\n\n  LFO.prototype.unsync = function () {\n    this._oscillator.unsync();\n\n    this._oscillator.unsyncFrequency();\n\n    return this;\n  };\n\n  Object.defineProperty(LFO.prototype, \"min\", {\n    /**\n     * The minimum output of the LFO.\n     */\n    get: function () {\n      return this._toType(this._scaler.min);\n    },\n    set: function (min) {\n      min = this._fromType(min);\n      this._scaler.min = min;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"max\", {\n    /**\n     * The maximum output of the LFO.\n     */\n    get: function () {\n      return this._toType(this._scaler.max);\n    },\n    set: function (max) {\n      max = this._fromType(max);\n      this._scaler.max = max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"type\", {\n    /**\n     * The type of the oscillator: See [[Oscillator.type]]\n     */\n    get: function () {\n      return this._oscillator.type;\n    },\n    set: function (type) {\n      this._oscillator.type = type;\n      this._stoppedValue = this._oscillator.getInitialValue();\n      this._stoppedSignal.value = this._stoppedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"phase\", {\n    /**\n     * The phase of the LFO.\n     */\n    get: function () {\n      return this._oscillator.phase;\n    },\n    set: function (phase) {\n      this._oscillator.phase = phase;\n      this._stoppedValue = this._oscillator.getInitialValue();\n      this._stoppedSignal.value = this._stoppedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"units\", {\n    /**\n     * The output units of the LFO.\n     */\n    get: function () {\n      return this._units;\n    },\n    set: function (val) {\n      var currentMin = this.min;\n      var currentMax = this.max; // convert the min and the max\n\n      this._units = val;\n      this.min = currentMin;\n      this.max = currentMax;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LFO.prototype, \"state\", {\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     */\n    get: function () {\n      return this._oscillator.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param node the destination to connect to\n   * @param outputNum the optional output number\n   * @param inputNum the input number\n   */\n\n  LFO.prototype.connect = function (node, outputNum, inputNum) {\n    if (node instanceof Param || node instanceof Signal) {\n      this.convert = node.convert;\n      this.units = node.units;\n    }\n\n    connectSignal(this, node, outputNum, inputNum);\n    return this;\n  };\n\n  LFO.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._oscillator.dispose();\n\n    this._stoppedSignal.dispose();\n\n    this._zeros.dispose();\n\n    this._scaler.dispose();\n\n    this._a2g.dispose();\n\n    this._amplitudeGain.dispose();\n\n    this.amplitude.dispose();\n    return this;\n  };\n\n  return LFO;\n}(ToneAudioNode);\n\nexport { LFO };","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\n\nexport function range(min, max) {\n  if (max === void 0) {\n    max = Infinity;\n  }\n\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        return valueMap.get(this);\n      },\n      set: function (newValue) {\n        assertRange(newValue, min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\n\nexport function timeRange(min, max) {\n  if (max === void 0) {\n    max = Infinity;\n  }\n\n  var valueMap = new WeakMap();\n  return function (target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        return valueMap.get(this);\n      },\n      set: function (newValue) {\n        assertRange(this.toSeconds(newValue), min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}","import { __awaiter, __decorate, __extends, __generator } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\n\nvar Player =\n/** @class */\nfunction (_super) {\n  __extends(Player, _super);\n\n  function Player() {\n    var _this = _super.call(this, optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"Player\";\n    /**\n     * All of the active buffer source nodes\n     */\n\n    _this._activeSources = new Set();\n    var options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this._buffer = new ToneAudioBuffer({\n      onload: _this._onload.bind(_this, options.onload),\n      onerror: options.onerror,\n      reverse: options.reverse,\n      url: options.url\n    });\n    _this.autostart = options.autostart;\n    _this._loop = options.loop;\n    _this._loopStart = options.loopStart;\n    _this._loopEnd = options.loopEnd;\n    _this._playbackRate = options.playbackRate;\n    _this.fadeIn = options.fadeIn;\n    _this.fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Player.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      autostart: false,\n      fadeIn: 0,\n      fadeOut: 0,\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1,\n      reverse: false\n    });\n  };\n  /**\n   * Load the audio file as an audio buffer.\n   * Decodes the audio asynchronously and invokes\n   * the callback once the audio buffer loads.\n   * Note: this does not need to be called if a url\n   * was passed in to the constructor. Only use this\n   * if you want to manually load a new url.\n   * @param url The url of the buffer to load. Filetype support depends on the browser.\n   */\n\n\n  Player.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._buffer.load(url)];\n\n          case 1:\n            _a.sent();\n\n            this._onload();\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Internal callback when the buffer is loaded.\n   */\n\n\n  Player.prototype._onload = function (callback) {\n    if (callback === void 0) {\n      callback = noOp;\n    }\n\n    callback();\n\n    if (this.autostart) {\n      this.start();\n    }\n  };\n  /**\n   * Internal callback when the buffer is done playing.\n   */\n\n\n  Player.prototype._onSourceEnd = function (source) {\n    // invoke the onstop function\n    this.onstop(this); // delete the source from the active sources\n\n    this._activeSources.delete(source);\n\n    if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === \"started\") {\n      this._state.setStateAtTime(\"stopped\", this.now());\n    }\n  };\n  /**\n   * Play the buffer at the given startTime. Optionally add an offset\n   * and/or duration which will play the buffer from a position\n   * within the buffer for the given duration.\n   *\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n   */\n\n\n  Player.prototype.start = function (time, offset, duration) {\n    _super.prototype.start.call(this, time, offset, duration);\n\n    return this;\n  };\n  /**\n   * Internal start method\n   */\n\n\n  Player.prototype._start = function (startTime, offset, duration) {\n    // if it's a loop the default offset is the loopStart point\n    if (this._loop) {\n      offset = defaultArg(offset, this._loopStart);\n    } else {\n      // otherwise the default offset is 0\n      offset = defaultArg(offset, 0);\n    } // compute the values in seconds\n\n\n    var computedOffset = this.toSeconds(offset); // if it's synced, it should factor in the playback rate for computing the offset\n\n    if (this._synced) {\n      computedOffset *= this._playbackRate;\n    } // compute the duration which is either the passed in duration of the buffer.duration - offset\n\n\n    var origDuration = duration;\n    duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n    var computedDuration = this.toSeconds(duration); // scale it by the playback rate\n\n    computedDuration = computedDuration / this._playbackRate; // get the start time\n\n    startTime = this.toSeconds(startTime); // make the source\n\n    var source = new ToneBufferSource({\n      url: this._buffer,\n      context: this.context,\n      fadeIn: this.fadeIn,\n      fadeOut: this.fadeOut,\n      loop: this._loop,\n      loopEnd: this._loopEnd,\n      loopStart: this._loopStart,\n      onended: this._onSourceEnd.bind(this),\n      playbackRate: this._playbackRate\n    }).connect(this.output); // set the looping properties\n\n    if (!this._loop && !this._synced) {\n      // cancel the previous stop\n      this._state.cancel(startTime + computedDuration); // if it's not looping, set the state change at the end of the sample\n\n\n      this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n        implicitEnd: true\n      });\n    } // add it to the array of active sources\n\n\n    this._activeSources.add(source); // start it\n\n\n    if (this._loop && isUndef(origDuration)) {\n      source.start(startTime, computedOffset);\n    } else {\n      // subtract the fade out time\n      source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n    }\n  };\n  /**\n   * Stop playback.\n   */\n\n\n  Player.prototype._stop = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    this._activeSources.forEach(function (source) {\n      return source.stop(computedTime);\n    });\n  };\n  /**\n   * Stop and then restart the player from the beginning (or offset)\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given,\n   * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n   */\n\n\n  Player.prototype.restart = function (time, offset, duration) {\n    _super.prototype.restart.call(this, time, offset, duration);\n\n    return this;\n  };\n\n  Player.prototype._restart = function (time, offset, duration) {\n    this._stop(time);\n\n    this._start(time, offset, duration);\n  };\n  /**\n   * Seek to a specific time in the player's buffer. If the\n   * source is no longer playing at that time, it will stop.\n   * @param offset The time to seek to.\n   * @param when The time for the seek event to occur.\n   * @example\n   * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n   * \tplayer.start();\n   * \t// seek to the offset in 1 second from now\n   * \tplayer.seek(0.4, \"+1\");\n   * }).toDestination();\n   */\n\n\n  Player.prototype.seek = function (offset, when) {\n    var computedTime = this.toSeconds(when);\n\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      var computedOffset = this.toSeconds(offset); // if it's currently playing, stop it\n\n      this._stop(computedTime); // restart it at the given time\n\n\n      this._start(computedTime, computedOffset);\n    }\n\n    return this;\n  };\n  /**\n   * Set the loop start and end. Will only loop if loop is set to true.\n   * @param loopStart The loop start time\n   * @param loopEnd The loop end time\n   * @example\n   * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n   * // loop between the given points\n   * player.setLoopPoints(0.2, 0.3);\n   * player.loop = true;\n   * player.autostart = true;\n   */\n\n\n  Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n    this.loopStart = loopStart;\n    this.loopEnd = loopEnd;\n    return this;\n  };\n\n  Object.defineProperty(Player.prototype, \"loopStart\", {\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (loopStart) {\n      this._loopStart = loopStart;\n\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n      } // get the current source\n\n\n      this._activeSources.forEach(function (source) {\n        source.loopStart = loopStart;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loopEnd\", {\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (loopEnd) {\n      this._loopEnd = loopEnd;\n\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n      } // get the current source\n\n\n      this._activeSources.forEach(function (source) {\n        source.loopEnd = loopEnd;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"buffer\", {\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get: function () {\n      return this._buffer;\n    },\n    set: function (buffer) {\n      this._buffer.set(buffer);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loop\", {\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      // if no change, do nothing\n      if (this._loop === loop) {\n        return;\n      }\n\n      this._loop = loop; // set the loop of all of the sources\n\n      this._activeSources.forEach(function (source) {\n        source.loop = loop;\n      });\n\n      if (loop) {\n        // remove the next stopEvent\n        var stopEvent = this._state.getNextState(\"stopped\", this.now());\n\n        if (stopEvent) {\n          this._state.cancel(stopEvent.time);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"playbackRate\", {\n    /**\n     * The playback speed. 1 is normal speed. This is not a signal because\n     * Safari and iOS currently don't support playbackRate as a signal.\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n      var now = this.now(); // cancel the stop event since it's at a different time now\n\n      var stopEvent = this._state.getNextState(\"stopped\", now);\n\n      if (stopEvent && stopEvent.implicitEnd) {\n        this._state.cancel(stopEvent.time);\n\n        this._activeSources.forEach(function (source) {\n          return source.cancelStop();\n        });\n      } // set all the sources\n\n\n      this._activeSources.forEach(function (source) {\n        source.playbackRate.setValueAtTime(rate, now);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"reverse\", {\n    /**\n     * The direction the buffer should play in\n     */\n    get: function () {\n      return this._buffer.reverse;\n    },\n    set: function (rev) {\n      this._buffer.reverse = rev;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Player.prototype, \"loaded\", {\n    /**\n     * If the buffer is loaded\n     */\n    get: function () {\n      return this._buffer.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Player.prototype.dispose = function () {\n    _super.prototype.dispose.call(this); // disconnect all of the players\n\n\n    this._activeSources.forEach(function (source) {\n      return source.dispose();\n    });\n\n    this._activeSources.clear();\n\n    this._buffer.dispose();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Player.prototype, \"fadeIn\", void 0);\n\n  __decorate([timeRange(0)], Player.prototype, \"fadeOut\", void 0);\n\n  return Player;\n}(Source);\n\nexport { Player };","import { __extends, __read } from \"tslib\";\nimport { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\n\nvar Players =\n/** @class */\nfunction (_super) {\n  __extends(Players, _super);\n\n  function Players() {\n    var _this = _super.call(this, optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\")) || this;\n\n    _this.name = \"Players\";\n    /**\n     * Players has no input.\n     */\n\n    _this.input = undefined;\n    /**\n     * The container of all of the players\n     */\n\n    _this._players = new Map();\n    var options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n    /**\n     * The output volume node\n     */\n\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    _this._buffers = new ToneAudioBuffers({\n      urls: options.urls,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    }); // mute initially\n\n    _this.mute = options.mute;\n    _this._fadeIn = options.fadeIn;\n    _this._fadeOut = options.fadeOut;\n    return _this;\n  }\n\n  Players.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      baseUrl: \"\",\n      fadeIn: 0,\n      fadeOut: 0,\n      mute: false,\n      onload: noOp,\n      onerror: noOp,\n      urls: {},\n      volume: 0\n    });\n  };\n\n  Object.defineProperty(Players.prototype, \"mute\", {\n    /**\n     * Mute the output.\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"fadeIn\", {\n    /**\n     * The fadeIn time of the envelope applied to the source.\n     */\n    get: function () {\n      return this._fadeIn;\n    },\n    set: function (fadeIn) {\n      this._fadeIn = fadeIn;\n\n      this._players.forEach(function (player) {\n        player.fadeIn = fadeIn;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"fadeOut\", {\n    /**\n     * The fadeOut time of the each of the sources.\n     */\n    get: function () {\n      return this._fadeOut;\n    },\n    set: function (fadeOut) {\n      this._fadeOut = fadeOut;\n\n      this._players.forEach(function (player) {\n        player.fadeOut = fadeOut;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Players.prototype, \"state\", {\n    /**\n     * The state of the players object. Returns \"started\" if any of the players are playing.\n     */\n    get: function () {\n      var playing = Array.from(this._players).some(function (_a) {\n        var _b = __read(_a, 2),\n            _ = _b[0],\n            player = _b[1];\n\n        return player.state === \"started\";\n      });\n      return playing ? \"started\" : \"stopped\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * True if the buffers object has a buffer by that name.\n   * @param name  The key or index of the buffer.\n   */\n\n  Players.prototype.has = function (name) {\n    return this._buffers.has(name);\n  };\n  /**\n   * Get a player by name.\n   * @param  name  The players name as defined in the constructor object or `add` method.\n   */\n\n\n  Players.prototype.player = function (name) {\n    assert(this.has(name), \"No Player with the name \" + name + \" exists on this object\");\n\n    if (!this._players.has(name)) {\n      var player = new Player({\n        context: this.context,\n        fadeIn: this._fadeIn,\n        fadeOut: this._fadeOut,\n        url: this._buffers.get(name)\n      }).connect(this.output);\n\n      this._players.set(name, player);\n    }\n\n    return this._players.get(name);\n  };\n\n  Object.defineProperty(Players.prototype, \"loaded\", {\n    /**\n     * If all the buffers are loaded or not\n     */\n    get: function () {\n      return this._buffers.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add a player by name and url to the Players\n   * @param  name A unique name to give the player\n   * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n   * @param callback  The callback to invoke when the url is loaded.\n   */\n\n  Players.prototype.add = function (name, url, callback) {\n    assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\n    this._buffers.add(name, url, callback);\n\n    return this;\n  };\n  /**\n   * Stop all of the players at the given time\n   * @param time The time to stop all of the players.\n   */\n\n\n  Players.prototype.stopAll = function (time) {\n    this._players.forEach(function (player) {\n      return player.stop(time);\n    });\n\n    return this;\n  };\n\n  Players.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n\n    this._players.forEach(function (player) {\n      return player.dispose();\n    });\n\n    this._buffers.dispose();\n\n    return this;\n  };\n\n  return Players;\n}(ToneAudioNode);\n\nexport { Players };","import { __extends } from \"tslib\";\nimport { Source } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\n\nvar GrainPlayer =\n/** @class */\nfunction (_super) {\n  __extends(GrainPlayer, _super);\n\n  function GrainPlayer() {\n    var _this = _super.call(this, optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"GrainPlayer\";\n    /**\n     * Internal loopStart value\n     */\n\n    _this._loopStart = 0;\n    /**\n     * Internal loopStart value\n     */\n\n    _this._loopEnd = 0;\n    /**\n     * All of the currently playing BufferSources\n     */\n\n    _this._activeSources = [];\n    var options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this.buffer = new ToneAudioBuffer({\n      onload: options.onload,\n      onerror: options.onerror,\n      reverse: options.reverse,\n      url: options.url\n    });\n    _this._clock = new Clock({\n      context: _this.context,\n      callback: _this._tick.bind(_this),\n      frequency: 1 / options.grainSize\n    });\n    _this._playbackRate = options.playbackRate;\n    _this._grainSize = options.grainSize;\n    _this._overlap = options.overlap;\n    _this.detune = options.detune; // setup\n\n    _this.overlap = options.overlap;\n    _this.loop = options.loop;\n    _this.playbackRate = options.playbackRate;\n    _this.grainSize = options.grainSize;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this.reverse = options.reverse;\n\n    _this._clock.on(\"stop\", _this._onstop.bind(_this));\n\n    return _this;\n  }\n\n  GrainPlayer.getDefaults = function () {\n    return Object.assign(Source.getDefaults(), {\n      onload: noOp,\n      onerror: noOp,\n      overlap: 0.1,\n      grainSize: 0.2,\n      playbackRate: 1,\n      detune: 0,\n      loop: false,\n      loopStart: 0,\n      loopEnd: 0,\n      reverse: false\n    });\n  };\n  /**\n   * Internal start method\n   */\n\n\n  GrainPlayer.prototype._start = function (time, offset, duration) {\n    offset = defaultArg(offset, 0);\n    offset = this.toSeconds(offset);\n    time = this.toSeconds(time);\n\n    var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\n    this._clock.start(time, offset / grainSize);\n\n    if (duration) {\n      this.stop(time + this.toSeconds(duration));\n    }\n  };\n  /**\n   * Stop and then restart the player from the beginning (or offset)\n   * @param  time When the player should start.\n   * @param  offset The offset from the beginning of the sample to start at.\n   * @param  duration How long the sample should play. If no duration is given,\n   * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n   */\n\n\n  GrainPlayer.prototype.restart = function (time, offset, duration) {\n    _super.prototype.restart.call(this, time, offset, duration);\n\n    return this;\n  };\n\n  GrainPlayer.prototype._restart = function (time, offset, duration) {\n    this._stop(time);\n\n    this._start(time, offset, duration);\n  };\n  /**\n   * Internal stop method\n   */\n\n\n  GrainPlayer.prototype._stop = function (time) {\n    this._clock.stop(time);\n  };\n  /**\n   * Invoked when the clock is stopped\n   */\n\n\n  GrainPlayer.prototype._onstop = function (time) {\n    // stop the players\n    this._activeSources.forEach(function (source) {\n      source.fadeOut = 0;\n      source.stop(time);\n    });\n\n    this.onstop(this);\n  };\n  /**\n   * Invoked on each clock tick. scheduled a new grain at this time.\n   */\n\n\n  GrainPlayer.prototype._tick = function (time) {\n    var _this = this; // check if it should stop looping\n\n\n    var ticks = this._clock.getTicksAtTime(time);\n\n    var grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\n    var offset = ticks * grainSize;\n    this.log(\"offset\", offset);\n\n    if (!this.loop && offset > this.buffer.duration) {\n      this.stop(time);\n      return;\n    } // at the beginning of the file, the fade in should be 0\n\n\n    var fadeIn = offset < this._overlap ? 0 : this._overlap; // create a buffer source\n\n    var source = new ToneBufferSource({\n      context: this.context,\n      url: this.buffer,\n      fadeIn: fadeIn,\n      fadeOut: this._overlap,\n      loop: this.loop,\n      loopStart: this._loopStart,\n      loopEnd: this._loopEnd,\n      // compute the playbackRate based on the detune\n      playbackRate: intervalToFrequencyRatio(this.detune / 100)\n    }).connect(this.output);\n    source.start(time, this._grainSize * ticks);\n    source.stop(time + this._grainSize / this.playbackRate); // add it to the active sources\n\n    this._activeSources.push(source); // remove it when it's done\n\n\n    source.onended = function () {\n      var index = _this._activeSources.indexOf(source);\n\n      if (index !== -1) {\n        _this._activeSources.splice(index, 1);\n      }\n    };\n  };\n\n  Object.defineProperty(GrainPlayer.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the sample\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      assertRange(rate, 0.001);\n      this._playbackRate = rate;\n      this.grainSize = this._grainSize;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loopStart\", {\n    /**\n     * The loop start time.\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (time) {\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(time), 0, this.buffer.duration);\n      }\n\n      this._loopStart = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loopEnd\", {\n    /**\n     * The loop end time.\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (time) {\n      if (this.buffer.loaded) {\n        assertRange(this.toSeconds(time), 0, this.buffer.duration);\n      }\n\n      this._loopEnd = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"reverse\", {\n    /**\n     * The direction the buffer should play in\n     */\n    get: function () {\n      return this.buffer.reverse;\n    },\n    set: function (rev) {\n      this.buffer.reverse = rev;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"grainSize\", {\n    /**\n     * The size of each chunk of audio that the\n     * buffer is chopped into and played back at.\n     */\n    get: function () {\n      return this._grainSize;\n    },\n    set: function (size) {\n      this._grainSize = this.toSeconds(size);\n\n      this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"overlap\", {\n    /**\n     * The duration of the cross-fade between successive grains.\n     */\n    get: function () {\n      return this._overlap;\n    },\n    set: function (time) {\n      this._overlap = this.toSeconds(time);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(GrainPlayer.prototype, \"loaded\", {\n    /**\n     * If all the buffer is loaded\n     */\n    get: function () {\n      return this.buffer.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  GrainPlayer.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.buffer.dispose();\n\n    this._clock.dispose();\n\n    this._activeSources.forEach(function (source) {\n      return source.dispose();\n    });\n\n    return this;\n  };\n\n  return GrainPlayer;\n}(Source);\n\nexport { GrainPlayer };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @offline 0.5 1\n * @example\n * const abs = new Tone.Abs().toDestination();\n * const signal = new Tone.Signal(1);\n * signal.rampTo(-1, 0.5);\n * signal.connect(abs);\n * @category Signal\n */\n\nvar Abs =\n/** @class */\nfunction (_super) {\n  __extends(Abs, _super);\n\n  function Abs() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Abs\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._abs = new WaveShaper({\n      context: _this.context,\n      mapping: function (val) {\n        if (Math.abs(val) < 0.001) {\n          return 0;\n        } else {\n          return Math.abs(val);\n        }\n      }\n    });\n    /**\n     * The AudioRange input [-1, 1]\n     */\n\n    _this.input = _this._abs;\n    /**\n     * The output range [0, 1]\n     */\n\n    _this.output = _this._abs;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  Abs.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._abs.dispose();\n\n    return this;\n  };\n\n  return Abs;\n}(SignalOperator);\n\nexport { Abs };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n * @category Signal\n */\n\nvar GainToAudio =\n/** @class */\nfunction (_super) {\n  __extends(GainToAudio, _super);\n\n  function GainToAudio() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"GainToAudio\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function (x) {\n        return Math.abs(x) * 2 - 1;\n      }\n    });\n    /**\n     * The NormalRange input [0, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The AudioRange output [-1, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  GainToAudio.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._norm.dispose();\n\n    return this;\n  };\n\n  return GainToAudio;\n}(SignalOperator);\n\nexport { GainToAudio };","import { __extends } from \"tslib\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\n\nvar Negate =\n/** @class */\nfunction (_super) {\n  __extends(Negate, _super);\n\n  function Negate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Negate\";\n    /**\n     * negation is done by multiplying by -1\n     */\n\n    _this._multiply = new Multiply({\n      context: _this.context,\n      value: -1\n    });\n    /**\n     * The input and output are equal to the multiply node\n     */\n\n    _this.input = _this._multiply;\n    _this.output = _this._multiply;\n    return _this;\n  }\n  /**\n   * clean up\n   * @returns {Negate} this\n   */\n\n\n  Negate.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._multiply.dispose();\n\n    return this;\n  };\n\n  return Negate;\n}(SignalOperator);\n\nexport { Negate };","import { __extends } from \"tslib\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\n\nvar Subtract =\n/** @class */\nfunction (_super) {\n  __extends(Subtract, _super);\n\n  function Subtract() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.override = false;\n    _this.name = \"Subtract\";\n    /**\n     * the summing node\n     */\n\n    _this._sum = new Gain({\n      context: _this.context\n    });\n    _this.input = _this._sum;\n    _this.output = _this._sum;\n    /**\n     * Negate the input of the second input before connecting it to the summing node.\n     */\n\n    _this._neg = new Negate({\n      context: _this.context\n    });\n    /**\n     * The value which is subtracted from the main signal\n     */\n\n    _this.subtrahend = _this._param;\n    connectSeries(_this._constantSource, _this._neg, _this._sum);\n    return _this;\n  }\n\n  Subtract.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  Subtract.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._neg.dispose();\n\n    this._sum.dispose();\n\n    return this;\n  };\n\n  return Subtract;\n}(Signal);\n\nexport { Subtract };","import { __extends } from \"tslib\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @offline 0.1 1\n * @example\n * const gt0 = new Tone.GreaterThanZero().toDestination();\n * const sig = new Tone.Signal(0.5).connect(gt0);\n * sig.setValueAtTime(-1, 0.05);\n */\n\nvar GreaterThanZero =\n/** @class */\nfunction (_super) {\n  __extends(GreaterThanZero, _super);\n\n  function GreaterThanZero() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments))) || this;\n\n    _this.name = \"GreaterThanZero\";\n    _this._thresh = _this.output = new WaveShaper({\n      context: _this.context,\n      length: 127,\n      mapping: function (val) {\n        if (val <= 0) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n    _this._scale = _this.input = new Multiply({\n      context: _this.context,\n      value: 10000\n    }); // connections\n\n    _this._scale.connect(_this._thresh);\n\n    return _this;\n  }\n\n  GreaterThanZero.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._scale.dispose();\n\n    this._thresh.dispose();\n\n    return this;\n  };\n\n  return GreaterThanZero;\n}(SignalOperator);\n\nexport { GreaterThanZero };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @offline 0.1 1\n * @example\n * const gt = new Tone.GreaterThan(2).toDestination();\n * const sig = new Tone.Signal(4).connect(gt);\n */\n\nvar GreaterThan =\n/** @class */\nfunction (_super) {\n  __extends(GreaterThan, _super);\n\n  function GreaterThan() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"GreaterThan\";\n    _this.override = false;\n    var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    _this._subtract = _this.input = new Subtract({\n      context: _this.context,\n      value: options.value\n    });\n    _this._gtz = _this.output = new GreaterThanZero({\n      context: _this.context\n    });\n    _this.comparator = _this._param = _this._subtract.subtrahend;\n    readOnly(_this, \"comparator\"); // connect\n\n    _this._subtract.connect(_this._gtz);\n\n    return _this;\n  }\n\n  GreaterThan.getDefaults = function () {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  };\n\n  GreaterThan.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gtz.dispose();\n\n    this._subtract.dispose();\n\n    this.comparator.dispose();\n    return this;\n  };\n\n  return GreaterThan;\n}(Signal);\n\nexport { GreaterThan };","import { __extends } from \"tslib\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\n\nvar Pow =\n/** @class */\nfunction (_super) {\n  __extends(Pow, _super);\n\n  function Pow() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]))) || this;\n\n    _this.name = \"Pow\";\n    var options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n    _this._exponentScaler = _this.input = _this.output = new WaveShaper({\n      context: _this.context,\n      mapping: _this._expFunc(options.value),\n      length: 8192\n    });\n    _this._exponent = options.value;\n    return _this;\n  }\n\n  Pow.getDefaults = function () {\n    return Object.assign(SignalOperator.getDefaults(), {\n      value: 1\n    });\n  };\n  /**\n   * the function which maps the waveshaper\n   * @param exponent exponent value\n   */\n\n\n  Pow.prototype._expFunc = function (exponent) {\n    return function (val) {\n      return Math.pow(Math.abs(val), exponent);\n    };\n  };\n\n  Object.defineProperty(Pow.prototype, \"value\", {\n    /**\n     * The value of the exponent.\n     */\n    get: function () {\n      return this._exponent;\n    },\n    set: function (exponent) {\n      this._exponent = exponent;\n\n      this._exponentScaler.setMap(this._expFunc(this._exponent));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Pow.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exponentScaler.dispose();\n\n    return this;\n  };\n\n  return Pow;\n}(SignalOperator);\n\nexport { Pow };","import { __extends } from \"tslib\";\nimport { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n */\n\nvar ScaleExp =\n/** @class */\nfunction (_super) {\n  __extends(ScaleExp, _super);\n\n  function ScaleExp() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]))) || this;\n\n    _this.name = \"ScaleExp\";\n    var options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n    _this.input = _this._exp = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n\n    _this._exp.connect(_this._mult);\n\n    return _this;\n  }\n\n  ScaleExp.getDefaults = function () {\n    return Object.assign(Scale.getDefaults(), {\n      exponent: 1\n    });\n  };\n\n  Object.defineProperty(ScaleExp.prototype, \"exponent\", {\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get: function () {\n      return this._exp.value;\n    },\n    set: function (exp) {\n      this._exp.value = exp;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScaleExp.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exp.dispose();\n\n    return this;\n  };\n\n  return ScaleExp;\n}(Scale);\n\nexport { ScaleExp };","import { __extends } from \"tslib\";\nimport { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\n\nvar SyncedSignal =\n/** @class */\nfunction (_super) {\n  __extends(SyncedSignal, _super);\n\n  function SyncedSignal() {\n    var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n\n    _this.name = \"SyncedSignal\";\n    /**\n     * Don't override when something is connected to the input\n     */\n\n    _this.override = false;\n    var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    _this._lastVal = options.value;\n    _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_this), \"1i\");\n    _this._syncedCallback = _this._anchorValue.bind(_this);\n\n    _this.context.transport.on(\"start\", _this._syncedCallback);\n\n    _this.context.transport.on(\"pause\", _this._syncedCallback);\n\n    _this.context.transport.on(\"stop\", _this._syncedCallback); // disconnect the constant source from the output and replace it with another one\n\n\n    _this._constantSource.disconnect();\n\n    _this._constantSource.stop(0); // create a new one\n\n\n    _this._constantSource = _this.output = new ToneConstantSource({\n      context: _this.context,\n      offset: options.value,\n      units: options.units\n    }).start(0);\n\n    _this.setValueAtTime(options.value, 0);\n\n    return _this;\n  }\n  /**\n   * Callback which is invoked every tick.\n   */\n\n\n  SyncedSignal.prototype._onTick = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds); // approximate ramp curves with linear ramps\n\n\n    if (this._lastVal !== val) {\n      this._lastVal = val;\n\n      this._constantSource.offset.setValueAtTime(val, time);\n    }\n  };\n  /**\n   * Anchor the value at the start and stop of the Transport\n   */\n\n\n  SyncedSignal.prototype._anchorValue = function (time) {\n    var val = _super.prototype.getValueAtTime.call(this, this.context.transport.seconds);\n\n    this._lastVal = val;\n\n    this._constantSource.offset.cancelAndHoldAtTime(time);\n\n    this._constantSource.offset.setValueAtTime(val, time);\n  };\n\n  SyncedSignal.prototype.getValueAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n    return _super.prototype.getValueAtTime.call(this, computedTime);\n  };\n\n  SyncedSignal.prototype.setValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.linearRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.exponentialRampToValueAtTime.call(this, value, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.setTargetAtTime.call(this, value, computedTime, timeConstant);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelScheduledValues = function (startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.cancelScheduledValues.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n    duration = this.toSeconds(duration);\n\n    _super.prototype.setValueCurveAtTime.call(this, values, computedTime, duration, scaling);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.cancelAndHoldAtTime = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.cancelAndHoldAtTime.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.setRampPoint = function (time) {\n    var computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\n    _super.prototype.setRampPoint.call(this, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.exponentialRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.linearRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.linearRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.targetRampTo = function (value, rampTime, startTime) {\n    var computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\n    _super.prototype.targetRampTo.call(this, value, rampTime, computedTime);\n\n    return this;\n  };\n\n  SyncedSignal.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.context.transport.clear(this._synced);\n    this.context.transport.off(\"start\", this._syncedCallback);\n    this.context.transport.off(\"pause\", this._syncedCallback);\n    this.context.transport.off(\"stop\", this._syncedCallback);\n\n    this._constantSource.dispose();\n\n    return this;\n  };\n\n  return SyncedSignal;\n}(Signal);\n\nexport { SyncedSignal };","import { __awaiter, __decorate, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @offline 2 1\n * @example\n * const env = new Tone.Envelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1,\n * \trelease: 0.8,\n * }).toDestination();\n * env.triggerAttackRelease(0.5);\n * @category Component\n */\n\nvar Envelope =\n/** @class */\nfunction (_super) {\n  __extends(Envelope, _super);\n\n  function Envelope() {\n    var _this = _super.call(this, optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"Envelope\";\n    /**\n     * the signal which is output.\n     */\n\n    _this._sig = new Signal({\n      context: _this.context,\n      value: 0\n    });\n    /**\n     * The output signal of the envelope\n     */\n\n    _this.output = _this._sig;\n    /**\n     * Envelope has no input\n     */\n\n    _this.input = undefined;\n    var options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    _this.attack = options.attack;\n    _this.decay = options.decay;\n    _this.sustain = options.sustain;\n    _this.release = options.release;\n    _this.attackCurve = options.attackCurve;\n    _this.releaseCurve = options.releaseCurve;\n    _this.decayCurve = options.decayCurve;\n    return _this;\n  }\n\n  Envelope.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 0.01,\n      attackCurve: \"linear\",\n      decay: 0.1,\n      decayCurve: \"exponential\",\n      release: 1,\n      releaseCurve: \"exponential\",\n      sustain: 0.5\n    });\n  };\n\n  Object.defineProperty(Envelope.prototype, \"value\", {\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get: function () {\n      return this.getValueAtTime(this.now());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the curve\n   * @param  curve\n   * @param  direction  In/Out\n   * @return The curve name\n   */\n\n  Envelope.prototype._getCurve = function (curve, direction) {\n    if (isString(curve)) {\n      return curve;\n    } else {\n      // look up the name in the curves array\n      var curveName = void 0;\n\n      for (curveName in EnvelopeCurves) {\n        if (EnvelopeCurves[curveName][direction] === curve) {\n          return curveName;\n        }\n      } // return the custom curve\n\n\n      return curve;\n    }\n  };\n  /**\n   * Assign a the curve to the given name using the direction\n   * @param  name\n   * @param  direction In/Out\n   * @param  curve\n   */\n\n\n  Envelope.prototype._setCurve = function (name, direction, curve) {\n    // check if it's a valid type\n    if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n      var curveDef = EnvelopeCurves[curve];\n\n      if (isObject(curveDef)) {\n        if (name !== \"_decayCurve\") {\n          this[name] = curveDef[direction];\n        }\n      } else {\n        this[name] = curveDef;\n      }\n    } else if (isArray(curve) && name !== \"_decayCurve\") {\n      this[name] = curve;\n    } else {\n      throw new Error(\"Envelope: invalid curve: \" + curve);\n    }\n  };\n\n  Object.defineProperty(Envelope.prototype, \"attackCurve\", {\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope().toDestination();\n     * env.attackCurve = \"linear\";\n     * env.triggerAttack();\n     * @example\n     * const env = new Tone.Envelope().toDestination();\n     * // can also be an array\n     * env.attackCurve = [0, 0.2, 0.3, 0.4, 1];\n     * env.triggerAttack();\n     */\n    get: function () {\n      return this._getCurve(this._attackCurve, \"In\");\n    },\n    set: function (curve) {\n      this._setCurve(\"_attackCurve\", \"In\", curve);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Envelope.prototype, \"releaseCurve\", {\n    /**\n     * The shape of the release. See the attack curve types.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \trelease: 0.5\n     * });\n     * env.releaseCurve = \"linear\";\n     * env.triggerAttack();\n     * env.triggerRelease(0.5);\n     */\n    get: function () {\n      return this._getCurve(this._releaseCurve, \"Out\");\n    },\n    set: function (curve) {\n      this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Envelope.prototype, \"decayCurve\", {\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \tsustain: 0.1,\n     * \tdecay: 0.5\n     * });\n     * env.decayCurve = \"linear\";\n     * env.triggerAttack();\n     */\n    get: function () {\n      return this._decayCurve;\n    },\n    set: function (curve) {\n      assert([\"linear\", \"exponential\"].some(function (c) {\n        return c === curve;\n      }), \"Invalid envelope curve: \" + curve);\n      this._decayCurve = curve;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Trigger the attack/decay portion of the ADSR envelope.\n   * @param  time When the attack should start.\n   * @param velocity The velocity of the envelope scales the vales.\n   *                             number between 0-1\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator().connect(env).start();\n   * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n   * env.triggerAttack(\"+0.5\", 0.2);\n   */\n\n  Envelope.prototype.triggerAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", time, velocity);\n    time = this.toSeconds(time);\n    var originalAttack = this.toSeconds(this.attack);\n    var attack = originalAttack;\n    var decay = this.toSeconds(this.decay); // check if it's not a complete attack\n\n    var currentValue = this.getValueAtTime(time);\n\n    if (currentValue > 0) {\n      // subtract the current value from the attack time\n      var attackRate = 1 / attack;\n      var remainingDistance = 1 - currentValue; // the attack is now the remaining time\n\n      attack = remainingDistance / attackRate;\n    } // attack\n\n\n    if (attack < this.sampleTime) {\n      this._sig.cancelScheduledValues(time); // case where the attack time is 0 should set instantly\n\n\n      this._sig.setValueAtTime(velocity, time);\n    } else if (this._attackCurve === \"linear\") {\n      this._sig.linearRampTo(velocity, attack, time);\n    } else if (this._attackCurve === \"exponential\") {\n      this._sig.targetRampTo(velocity, attack, time);\n    } else {\n      this._sig.cancelAndHoldAtTime(time);\n\n      var curve = this._attackCurve; // find the starting position in the curve\n\n      for (var i = 1; i < curve.length; i++) {\n        // the starting index is between the two values\n        if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n          curve = this._attackCurve.slice(i); // the first index is the current value\n\n          curve[0] = currentValue;\n          break;\n        }\n      }\n\n      this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n    } // decay\n\n\n    if (decay && this.sustain < 1) {\n      var decayValue = velocity * this.sustain;\n      var decayStart = time + attack;\n      this.log(\"decay\", decayStart);\n\n      if (this._decayCurve === \"linear\") {\n        this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n      } else {\n        this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Triggers the release of the envelope.\n   * @param  time When the release portion of the envelope should start.\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator({\n   * \ttype: \"sawtooth\"\n   * }).connect(env).start();\n   * env.triggerAttack();\n   * // trigger the release half a second after the attack\n   * env.triggerRelease(\"+0.5\");\n   */\n\n\n  Envelope.prototype.triggerRelease = function (time) {\n    this.log(\"triggerRelease\", time);\n    time = this.toSeconds(time);\n    var currentValue = this.getValueAtTime(time);\n\n    if (currentValue > 0) {\n      var release = this.toSeconds(this.release);\n\n      if (release < this.sampleTime) {\n        this._sig.setValueAtTime(0, time);\n      } else if (this._releaseCurve === \"linear\") {\n        this._sig.linearRampTo(0, release, time);\n      } else if (this._releaseCurve === \"exponential\") {\n        this._sig.targetRampTo(0, release, time);\n      } else {\n        assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\n        this._sig.cancelAndHoldAtTime(time);\n\n        this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Get the scheduled value at the given time. This will\n   * return the unconverted (raw) value.\n   */\n\n\n  Envelope.prototype.getValueAtTime = function (time) {\n    return this._sig.getValueAtTime(time);\n  };\n  /**\n   * triggerAttackRelease is shorthand for triggerAttack, then waiting\n   * some duration, then triggerRelease.\n   * @param duration The duration of the sustain.\n   * @param time When the attack should be triggered.\n   * @param velocity The velocity of the envelope.\n   * @example\n   * const env = new Tone.AmplitudeEnvelope().toDestination();\n   * const osc = new Tone.Oscillator().connect(env).start();\n   * // trigger the release 0.5 seconds after the attack\n   * env.triggerAttackRelease(0.5);\n   */\n\n\n  Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + this.toSeconds(duration));\n    return this;\n  };\n  /**\n   * Cancels all scheduled envelope changes after the given time.\n   */\n\n\n  Envelope.prototype.cancel = function (after) {\n    this._sig.cancelScheduledValues(this.toSeconds(after));\n\n    return this;\n  };\n  /**\n   * Connect the envelope to a destination node.\n   */\n\n\n  Envelope.prototype.connect = function (destination, outputNumber, inputNumber) {\n    if (outputNumber === void 0) {\n      outputNumber = 0;\n    }\n\n    if (inputNumber === void 0) {\n      inputNumber = 0;\n    }\n\n    connectSignal(this, destination, outputNumber, inputNumber);\n    return this;\n  };\n  /**\n   * Render the envelope curve to an array of the given length.\n   * Good for visualizing the envelope curve. Rescales the duration of the\n   * envelope to fit the length.\n   */\n\n\n  Envelope.prototype.asArray = function (length) {\n    if (length === void 0) {\n      length = 1024;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var duration, context, attackPortion, envelopeDuration, sustainTime, totalDuration, clone, buffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            duration = length / this.context.sampleRate;\n            context = new OfflineContext(1, duration, this.context.sampleRate);\n            attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            envelopeDuration = attackPortion + this.toSeconds(this.release);\n            sustainTime = envelopeDuration * 0.1;\n            totalDuration = envelopeDuration + sustainTime;\n            clone = new this.constructor(Object.assign(this.get(), {\n              attack: duration * this.toSeconds(this.attack) / totalDuration,\n              decay: duration * this.toSeconds(this.decay) / totalDuration,\n              release: duration * this.toSeconds(this.release) / totalDuration,\n              context: context\n            }));\n\n            clone._sig.toDestination();\n\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            return [4\n            /*yield*/\n            , context.render()];\n\n          case 1:\n            buffer = _a.sent();\n            return [2\n            /*return*/\n            , buffer.getChannelData(0)];\n        }\n      });\n    });\n  };\n\n  Envelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._sig.dispose();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Envelope.prototype, \"attack\", void 0);\n\n  __decorate([timeRange(0)], Envelope.prototype, \"decay\", void 0);\n\n  __decorate([range(0, 1)], Envelope.prototype, \"sustain\", void 0);\n\n  __decorate([timeRange(0)], Envelope.prototype, \"release\", void 0);\n\n  return Envelope;\n}(ToneAudioNode);\n\nexport { Envelope };\n/**\n * Generate some complex envelope curves.\n */\n\nvar EnvelopeCurves = function () {\n  var curveLen = 128;\n  var i;\n  var k; // cosine curve\n\n  var cosineCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n  } // ripple curve\n\n\n  var rippleCurve = [];\n  var rippleCurveFreq = 6.4;\n\n  for (i = 0; i < curveLen - 1; i++) {\n    k = i / (curveLen - 1);\n    var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n    rippleCurve[i] = sineWave / 10 + k * 0.83;\n  }\n\n  rippleCurve[curveLen - 1] = 1; // stairs curve\n\n  var stairsCurve = [];\n  var steps = 5;\n\n  for (i = 0; i < curveLen; i++) {\n    stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n  } // in-out easing curve\n\n\n  var sineCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n  } // a bounce curve\n\n\n  var bounceCurve = [];\n\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    var freq = Math.pow(k, 3) * 4 + 0.2;\n    var val = Math.cos(freq * Math.PI * 2 * k);\n    bounceCurve[i] = Math.abs(val * (1 - k));\n  }\n  /**\n   * Invert a value curve to make it work for the release\n   */\n\n\n  function invertCurve(curve) {\n    var out = new Array(curve.length);\n\n    for (var j = 0; j < curve.length; j++) {\n      out[j] = 1 - curve[j];\n    }\n\n    return out;\n  }\n  /**\n   * reverse the curve\n   */\n\n\n  function reverseCurve(curve) {\n    return curve.slice(0).reverse();\n  }\n  /**\n   * attack and release curve arrays\n   */\n\n\n  return {\n    bounce: {\n      In: invertCurve(bounceCurve),\n      Out: bounceCurve\n    },\n    cosine: {\n      In: cosineCurve,\n      Out: reverseCurve(cosineCurve)\n    },\n    exponential: \"exponential\",\n    linear: \"linear\",\n    ripple: {\n      In: rippleCurve,\n      Out: invertCurve(rippleCurve)\n    },\n    sine: {\n      In: sineCurve,\n      Out: invertCurve(sineCurve)\n    },\n    step: {\n      In: stairsCurve,\n      Out: invertCurve(stairsCurve)\n    }\n  };\n}();","import { __extends } from \"tslib\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\n\nvar Instrument =\n/** @class */\nfunction (_super) {\n  __extends(Instrument, _super);\n\n  function Instrument() {\n    var _this = _super.call(this, optionsFromArguments(Instrument.getDefaults(), arguments)) || this;\n    /**\n     * Keep track of all events scheduled to the transport\n     * when the instrument is 'synced'\n     */\n\n\n    _this._scheduledEvents = [];\n    /**\n     * If the instrument is currently synced\n     */\n\n    _this._synced = false;\n    _this._original_triggerAttack = _this.triggerAttack;\n    _this._original_triggerRelease = _this.triggerRelease;\n    var options = optionsFromArguments(Instrument.getDefaults(), arguments);\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    readOnly(_this, \"volume\");\n    return _this;\n  }\n\n  Instrument.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      volume: 0\n    });\n  };\n  /**\n   * Sync the instrument to the Transport. All subsequent calls of\n   * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n   * @example\n   * const fmSynth = new Tone.FMSynth().toDestination();\n   * fmSynth.volume.value = -6;\n   * fmSynth.sync();\n   * // schedule 3 notes when the transport first starts\n   * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n   * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n   * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n   * // start the transport to hear the notes\n   * Tone.Transport.start();\n   */\n\n\n  Instrument.prototype.sync = function () {\n    if (!this._synced) {\n      this._synced = true;\n\n      this._syncMethod(\"triggerAttack\", 1);\n\n      this._syncMethod(\"triggerRelease\", 0);\n    }\n\n    return this;\n  };\n  /**\n   * Wrap the given method so that it can be synchronized\n   * @param method Which method to wrap and sync\n   * @param  timePosition What position the time argument appears in\n   */\n\n\n  Instrument.prototype._syncMethod = function (method, timePosition) {\n    var _this = this;\n\n    var originalMethod = this[\"_original_\" + method] = this[method];\n\n    this[method] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var time = args[timePosition];\n\n      var id = _this.context.transport.schedule(function (t) {\n        args[timePosition] = t;\n        originalMethod.apply(_this, args);\n      }, time);\n\n      _this._scheduledEvents.push(id);\n    };\n  };\n  /**\n   * Unsync the instrument from the Transport\n   */\n\n\n  Instrument.prototype.unsync = function () {\n    var _this = this;\n\n    this._scheduledEvents.forEach(function (id) {\n      return _this.context.transport.clear(id);\n    });\n\n    this._scheduledEvents = [];\n\n    if (this._synced) {\n      this._synced = false;\n      this.triggerAttack = this._original_triggerAttack;\n      this.triggerRelease = this._original_triggerRelease;\n    }\n\n    return this;\n  };\n  /**\n   * Trigger the attack and then the release after the duration.\n   * @param  note     The note to trigger.\n   * @param  duration How long the note should be held for before\n   *                         triggering the release. This value must be greater than 0.\n   * @param time  When the note should be triggered.\n   * @param  velocity The velocity the note should be triggered at.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * // trigger \"C4\" for the duration of an 8th note\n   * synth.triggerAttackRelease(\"C4\", \"8n\");\n   */\n\n\n  Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n    var computedTime = this.toSeconds(time);\n    var computedDuration = this.toSeconds(duration);\n    this.triggerAttack(note, computedTime, velocity);\n    this.triggerRelease(computedTime + computedDuration);\n    return this;\n  };\n  /**\n   * clean up\n   * @returns {Instrument} this\n   */\n\n\n  Instrument.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._volume.dispose();\n\n    this.unsync();\n    this._scheduledEvents = [];\n    return this;\n  };\n\n  return Instrument;\n}(ToneAudioNode);\n\nexport { Instrument };","import { __decorate, __extends } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\n\nvar Monophonic =\n/** @class */\nfunction (_super) {\n  __extends(Monophonic, _super);\n\n  function Monophonic() {\n    var _this = _super.call(this, optionsFromArguments(Monophonic.getDefaults(), arguments)) || this;\n\n    var options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n    _this.portamento = options.portamento;\n    _this.onsilence = options.onsilence;\n    return _this;\n  }\n\n  Monophonic.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      detune: 0,\n      onsilence: noOp,\n      portamento: 0\n    });\n  };\n  /**\n   * Trigger the attack of the note optionally with a given velocity.\n   * @param  note The note to trigger.\n   * @param  time When the note should start.\n   * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * // trigger the note a half second from now at half velocity\n   * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n   */\n\n\n  Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", note, time, velocity);\n    var seconds = this.toSeconds(time);\n\n    this._triggerEnvelopeAttack(seconds, velocity);\n\n    this.setNote(note, seconds);\n    return this;\n  };\n  /**\n   * Trigger the release portion of the envelope\n   * @param  time If no time is given, the release happens immediatly\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * synth.triggerAttack(\"C4\");\n   * // trigger the release a second from now\n   * synth.triggerRelease(\"+1\");\n   */\n\n\n  Monophonic.prototype.triggerRelease = function (time) {\n    this.log(\"triggerRelease\", time);\n    var seconds = this.toSeconds(time);\n\n    this._triggerEnvelopeRelease(seconds);\n\n    return this;\n  };\n  /**\n   * Set the note at the given time. If no time is given, the note\n   * will set immediately.\n   * @param note The note to change to.\n   * @param  time The time when the note should be set.\n   * @example\n   * const synth = new Tone.Synth().toDestination();\n   * synth.triggerAttack(\"C4\");\n   * // change to F#6 in one quarter note from now.\n   * synth.setNote(\"F#6\", \"+4n\");\n   */\n\n\n  Monophonic.prototype.setNote = function (note, time) {\n    var computedTime = this.toSeconds(time);\n    var computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\n    if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n      var portTime = this.toSeconds(this.portamento);\n      this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n    } else {\n      this.frequency.setValueAtTime(computedFrequency, computedTime);\n    }\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Monophonic.prototype, \"portamento\", void 0);\n\n  return Monophonic;\n}(Instrument);\n\nexport { Monophonic };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * const ampEnv = new Tone.AmplitudeEnvelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1.0,\n * \trelease: 0.8\n * }).toDestination();\n * // create an oscillator and connect it\n * const osc = new Tone.Oscillator().connect(ampEnv).start();\n * // trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n * @category Component\n */\n\nvar AmplitudeEnvelope =\n/** @class */\nfunction (_super) {\n  __extends(AmplitudeEnvelope, _super);\n\n  function AmplitudeEnvelope() {\n    var _this = _super.call(this, optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"AmplitudeEnvelope\";\n    _this._gainNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    _this.output = _this._gainNode;\n    _this.input = _this._gainNode;\n\n    _this._sig.connect(_this._gainNode.gain);\n\n    _this.output = _this._gainNode;\n    _this.input = _this._gainNode;\n    return _this;\n  }\n  /**\n   * Clean up\n   */\n\n\n  AmplitudeEnvelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._gainNode.dispose();\n\n    return this;\n  };\n\n  return AmplitudeEnvelope;\n}(Envelope);\n\nexport { AmplitudeEnvelope };","import { __extends, __read, __spread } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a {@link OmniOscillator} routed through an {@link AmplitudeEnvelope}.\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\n\nvar Synth =\n/** @class */\nfunction (_super) {\n  __extends(Synth, _super);\n\n  function Synth() {\n    var _this = _super.call(this, optionsFromArguments(Synth.getDefaults(), arguments)) || this;\n\n    _this.name = \"Synth\";\n    var options = optionsFromArguments(Synth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign({\n      context: _this.context,\n      detune: options.detune,\n      onstop: function () {\n        return _this.onsilence(_this);\n      }\n    }, options.oscillator));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: _this.context\n    }, options.envelope)); // connect the oscillators to the output\n\n    _this.oscillator.chain(_this.envelope, _this.output);\n\n    readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    return _this;\n  }\n\n  Synth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.005,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.3\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"triangle\"\n      })\n    });\n  };\n  /**\n   * start the attack portion of the envelope\n   * @param time the time the attack should start\n   * @param velocity the velocity of the note (0-1)\n   */\n\n\n  Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // the envelopes\n    this.envelope.triggerAttack(time, velocity);\n    this.oscillator.start(time); // if there is no release portion, stop the oscillator\n\n    if (this.envelope.sustain === 0) {\n      var computedAttack = this.toSeconds(this.envelope.attack);\n      var computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  };\n  /**\n   * start the release portion of the envelope\n   * @param time the time the release should start\n   */\n\n\n  Synth.prototype._triggerEnvelopeRelease = function (time) {\n    this.envelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  };\n\n  Synth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n  /**\n   * clean up\n   */\n\n\n  Synth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    return this;\n  };\n\n  return Synth;\n}(Monophonic);\n\nexport { Synth };","import { __extends, __read, __spread } from \"tslib\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Synth } from \"./Synth\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * Base class for both AM and FM synths\n */\n\nvar ModulationSynth =\n/** @class */\nfunction (_super) {\n  __extends(ModulationSynth, _super);\n\n  function ModulationSynth() {\n    var _this = _super.call(this, optionsFromArguments(ModulationSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"ModulationSynth\";\n    var options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n    _this._carrier = new Synth({\n      context: _this.context,\n      oscillator: options.oscillator,\n      envelope: options.envelope,\n      onsilence: function () {\n        return _this.onsilence(_this);\n      },\n      volume: -10\n    });\n    _this._modulator = new Synth({\n      context: _this.context,\n      oscillator: options.modulation,\n      envelope: options.modulationEnvelope,\n      volume: -10\n    });\n    _this.oscillator = _this._carrier.oscillator;\n    _this.envelope = _this._carrier.envelope;\n    _this.modulation = _this._modulator.oscillator;\n    _this.modulationEnvelope = _this._modulator.envelope;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\"\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      value: options.detune,\n      units: \"cents\"\n    });\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      value: options.harmonicity,\n      minValue: 0\n    });\n    _this._modulationNode = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    readOnly(_this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n    return _this;\n  }\n\n  ModulationSynth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      harmonicity: 3,\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"sine\"\n      }),\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.01,\n        decay: 0.01,\n        sustain: 1,\n        release: 0.5\n      }),\n      modulation: Object.assign(omitFromObject(OmniOscillator.getDefaults(), __spread(Object.keys(Source.getDefaults()), [\"frequency\", \"detune\"])), {\n        type: \"square\"\n      }),\n      modulationEnvelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.5,\n        decay: 0.0,\n        sustain: 1,\n        release: 0.5\n      })\n    });\n  };\n  /**\n   * Trigger the attack portion of the note\n   */\n\n\n  ModulationSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // @ts-ignore\n    this._carrier._triggerEnvelopeAttack(time, velocity); // @ts-ignore\n\n\n    this._modulator._triggerEnvelopeAttack(time, velocity);\n  };\n  /**\n   * Trigger the release portion of the note\n   */\n\n\n  ModulationSynth.prototype._triggerEnvelopeRelease = function (time) {\n    // @ts-ignore\n    this._carrier._triggerEnvelopeRelease(time); // @ts-ignore\n\n\n    this._modulator._triggerEnvelopeRelease(time);\n\n    return this;\n  };\n\n  ModulationSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  ModulationSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._carrier.dispose();\n\n    this._modulator.dispose();\n\n    this.frequency.dispose();\n    this.detune.dispose();\n    this.harmonicity.dispose();\n\n    this._modulationNode.dispose();\n\n    return this;\n  };\n\n  return ModulationSynth;\n}(Monophonic);\n\nexport { ModulationSynth };","import { __extends } from \"tslib\";\nimport { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\n\nvar AMSynth =\n/** @class */\nfunction (_super) {\n  __extends(AMSynth, _super);\n\n  function AMSynth() {\n    var _this = _super.call(this, optionsFromArguments(AMSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"AMSynth\";\n    _this._modulationScale = new AudioToGain({\n      context: _this.context\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n\n    _this._carrier.chain(_this._modulationNode, _this.output);\n\n    return _this;\n  }\n\n  AMSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._modulationScale.dispose();\n\n    return this;\n  };\n\n  return AMSynth;\n}(ModulationSynth);\n\nexport { AMSynth };","import { __extends, __read, __spread } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\n\nvar Filter =\n/** @class */\nfunction (_super) {\n  __extends(Filter, _super);\n\n  function Filter() {\n    var _this = _super.call(this, optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"])) || this;\n\n    _this.name = \"Filter\";\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._filters = [];\n    var options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n    _this._filters = [];\n    _this.Q = new Signal({\n      context: _this.context,\n      units: \"positive\",\n      value: options.Q\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this.gain = new Signal({\n      context: _this.context,\n      units: \"decibels\",\n      value: options.gain\n    });\n    _this._type = options.type;\n    _this.rolloff = options.rolloff;\n    readOnly(_this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    return _this;\n  }\n\n  Filter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      detune: 0,\n      frequency: 350,\n      gain: 0,\n      rolloff: -12,\n      type: \"lowpass\"\n    });\n  };\n\n  Object.defineProperty(Filter.prototype, \"type\", {\n    /**\n     * The type of the filter. Types: \"lowpass\", \"highpass\",\n     * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      var types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n      assert(types.indexOf(type) !== -1, \"Invalid filter type: \" + type);\n      this._type = type;\n\n      this._filters.forEach(function (filter) {\n        return filter.type = type;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Filter.prototype, \"rolloff\", {\n    /**\n     * The rolloff of the filter which is the drop in db\n     * per octave. Implemented internally by cascading filters.\n     * Only accepts the values -12, -24, -48 and -96.\n     */\n    get: function () {\n      return this._rolloff;\n    },\n    set: function (rolloff) {\n      var rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n      var possibilities = [-12, -24, -48, -96];\n      var cascadingCount = possibilities.indexOf(rolloffNum); // check the rolloff is valid\n\n      assert(cascadingCount !== -1, \"rolloff can only be \" + possibilities.join(\", \"));\n      cascadingCount += 1;\n      this._rolloff = rolloffNum;\n      this.input.disconnect();\n\n      this._filters.forEach(function (filter) {\n        return filter.disconnect();\n      });\n\n      this._filters = new Array(cascadingCount);\n\n      for (var count = 0; count < cascadingCount; count++) {\n        var filter = this.context.createBiquadFilter();\n        filter.type = this._type;\n        this.frequency.connect(filter.frequency);\n        this.detune.connect(filter.detune);\n        this.Q.connect(filter.Q);\n        this.gain.connect(filter.gain);\n        this._filters[count] = filter;\n      }\n\n      this._internalChannels = this._filters;\n      connectSeries.apply(void 0, __spread([this.input], this._internalChannels, [this.output]));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the frequency response curve. This curve represents how the filter\n   * responses to frequencies between 20hz-20khz.\n   * @param  len The number of values to return\n   * @return The frequency response curve between 20-20kHz\n   */\n\n  Filter.prototype.getFrequencyResponse = function (len) {\n    var _this = this;\n\n    if (len === void 0) {\n      len = 128;\n    } // start with all 1s\n\n\n    var totalResponse = new Float32Array(len).map(function () {\n      return 1;\n    });\n    var freqValues = new Float32Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var norm = Math.pow(i / len, 2);\n      var freq = norm * (20000 - 20) + 20;\n      freqValues[i] = freq;\n    }\n\n    var magValues = new Float32Array(len);\n    var phaseValues = new Float32Array(len);\n\n    this._filters.forEach(function () {\n      var filterClone = _this.context.createBiquadFilter();\n\n      filterClone.type = _this._type;\n      filterClone.Q.value = _this.Q.value;\n      filterClone.frequency.value = _this.frequency.value;\n      filterClone.gain.value = _this.gain.value;\n      filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n      magValues.forEach(function (val, i) {\n        totalResponse[i] *= val;\n      });\n    });\n\n    return totalResponse;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Filter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._filters.forEach(function (filter) {\n      filter.disconnect();\n    });\n\n    writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    this.frequency.dispose();\n    this.Q.dispose();\n    this.detune.dispose();\n    this.gain.dispose();\n    return this;\n  };\n\n  return Filter;\n}(ToneAudioNode);\n\nexport { Filter };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n */\n\nvar FrequencyEnvelope =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyEnvelope, _super);\n\n  function FrequencyEnvelope() {\n    var _this = _super.call(this, optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n\n    _this.name = \"FrequencyEnvelope\";\n    var options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    _this._octaves = options.octaves;\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._exponent = _this.input = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n    _this._scale = _this.output = new Scale({\n      context: _this.context,\n      min: _this._baseFrequency,\n      max: _this._baseFrequency * Math.pow(2, _this._octaves)\n    });\n\n    _this._sig.chain(_this._exponent, _this._scale);\n\n    return _this;\n  }\n\n  FrequencyEnvelope.getDefaults = function () {\n    return Object.assign(Envelope.getDefaults(), {\n      baseFrequency: 200,\n      exponent: 1,\n      octaves: 4\n    });\n  };\n\n  Object.defineProperty(FrequencyEnvelope.prototype, \"baseFrequency\", {\n    /**\n     * The envelope's minimum output value. This is the value which it\n     * starts at.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (min) {\n      var freq = this.toFrequency(min);\n      assertRange(freq, 0);\n      this._baseFrequency = freq;\n      this._scale.min = this._baseFrequency; // update the max value when the min changes\n\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FrequencyEnvelope.prototype, \"octaves\", {\n    /**\n     * The number of octaves above the baseFrequency that the\n     * envelope will scale to.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      assertRange(octaves, 0);\n      this._octaves = octaves;\n      this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FrequencyEnvelope.prototype, \"exponent\", {\n    /**\n     * The envelope's exponent value.\n     */\n    get: function () {\n      return this._exponent.value;\n    },\n    set: function (exponent) {\n      this._exponent.value = exponent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  FrequencyEnvelope.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._exponent.dispose();\n\n    this._scale.dispose();\n\n    return this;\n  };\n\n  return FrequencyEnvelope;\n}(Envelope);\n\nexport { FrequencyEnvelope };","import { __extends } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\n\nvar MonoSynth =\n/** @class */\nfunction (_super) {\n  __extends(MonoSynth, _super);\n\n  function MonoSynth() {\n    var _this = _super.call(this, optionsFromArguments(MonoSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MonoSynth\";\n    var options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n      context: _this.context,\n      detune: options.detune,\n      onstop: function () {\n        return _this.onsilence(_this);\n      }\n    }));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    }));\n    _this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, {\n      context: _this.context\n    }));\n    _this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, {\n      context: _this.context\n    })); // connect the oscillators to the output\n\n    _this.oscillator.chain(_this.filter, _this.envelope, _this.output); // connect the filter envelope\n\n\n    _this.filterEnvelope.connect(_this.filter.frequency);\n\n    readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    return _this;\n  }\n\n  MonoSynth.getDefaults = function () {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.005,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.9\n      }),\n      filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        Q: 1,\n        rolloff: -12,\n        type: \"lowpass\"\n      }),\n      filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.6,\n        baseFrequency: 200,\n        decay: 0.2,\n        exponent: 2,\n        octaves: 3,\n        release: 2,\n        sustain: 0.5\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"sawtooth\"\n      })\n    });\n  };\n  /**\n   * start the attack portion of the envelope\n   * @param time the time the attack should start\n   * @param velocity the velocity of the note (0-1)\n   */\n\n\n  MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.envelope.triggerAttack(time, velocity);\n    this.filterEnvelope.triggerAttack(time);\n    this.oscillator.start(time);\n\n    if (this.envelope.sustain === 0) {\n      var computedAttack = this.toSeconds(this.envelope.attack);\n      var computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  };\n  /**\n   * start the release portion of the envelope\n   * @param time the time the release should start\n   */\n\n\n  MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n    this.envelope.triggerRelease(time);\n    this.filterEnvelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  };\n\n  MonoSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  MonoSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    this.filterEnvelope.dispose();\n    this.filter.dispose();\n    return this;\n  };\n\n  return MonoSynth;\n}(Monophonic);\n\nexport { MonoSynth };","import { __extends } from \"tslib\";\nimport { Monophonic } from \"./Monophonic\";\nimport { MonoSynth } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\n\nvar DuoSynth =\n/** @class */\nfunction (_super) {\n  __extends(DuoSynth, _super);\n\n  function DuoSynth() {\n    var _this = _super.call(this, optionsFromArguments(DuoSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"DuoSynth\";\n    var options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n    _this.voice0 = new MonoSynth(Object.assign(options.voice0, {\n      context: _this.context,\n      onsilence: function () {\n        return _this.onsilence(_this);\n      }\n    }));\n    _this.voice1 = new MonoSynth(Object.assign(options.voice1, {\n      context: _this.context\n    }));\n    _this.harmonicity = new Multiply({\n      context: _this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    _this._vibrato = new LFO({\n      frequency: options.vibratoRate,\n      context: _this.context,\n      min: -50,\n      max: 50\n    }); // start the vibrato immediately\n\n    _this._vibrato.start();\n\n    _this.vibratoRate = _this._vibrato.frequency;\n    _this._vibratoGain = new Gain({\n      context: _this.context,\n      units: \"normalRange\",\n      gain: options.vibratoAmount\n    });\n    _this.vibratoAmount = _this._vibratoGain.gain;\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: 440\n    });\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this.voice0.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this.voice1.frequency);\n\n    _this._vibrato.connect(_this._vibratoGain);\n\n    _this._vibratoGain.fan(_this.voice0.detune, _this.voice1.detune);\n\n    _this.detune.fan(_this.voice0.detune, _this.voice1.detune);\n\n    _this.voice0.connect(_this.output);\n\n    _this.voice1.connect(_this.output);\n\n    readOnly(_this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n    return _this;\n  }\n\n  DuoSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n  };\n\n  DuoSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), {\n      vibratoAmount: 0.5,\n      vibratoRate: 5,\n      harmonicity: 1.5,\n      voice0: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        }\n      }),\n      voice1: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n        filterEnvelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.0,\n          sustain: 1,\n          release: 0.5\n        }\n      })\n    });\n  };\n  /**\n   * Trigger the attack portion of the note\n   */\n\n\n  DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    // @ts-ignore\n    this.voice0._triggerEnvelopeAttack(time, velocity); // @ts-ignore\n\n\n    this.voice1._triggerEnvelopeAttack(time, velocity);\n  };\n  /**\n   * Trigger the release portion of the note\n   */\n\n\n  DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n    // @ts-ignore\n    this.voice0._triggerEnvelopeRelease(time); // @ts-ignore\n\n\n    this.voice1._triggerEnvelopeRelease(time);\n\n    return this;\n  };\n\n  DuoSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.voice0.dispose();\n    this.voice1.dispose();\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._vibrato.dispose();\n\n    this.vibratoRate.dispose();\n\n    this._vibratoGain.dispose();\n\n    this.harmonicity.dispose();\n    return this;\n  };\n\n  return DuoSynth;\n}(Monophonic);\n\nexport { DuoSynth };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\n\nvar FMSynth =\n/** @class */\nfunction (_super) {\n  __extends(FMSynth, _super);\n\n  function FMSynth() {\n    var _this = _super.call(this, optionsFromArguments(FMSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"FMSynth\";\n    var options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n    _this.modulationIndex = new Multiply({\n      context: _this.context,\n      value: options.modulationIndex\n    }); // control the two voices frequency\n\n    _this.frequency.connect(_this._carrier.frequency);\n\n    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n\n    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n\n    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);\n\n    _this._modulator.connect(_this._modulationNode.gain);\n\n    _this._modulationNode.connect(_this._carrier.frequency);\n\n    _this._carrier.connect(_this.output);\n\n    return _this;\n  }\n\n  FMSynth.getDefaults = function () {\n    return Object.assign(ModulationSynth.getDefaults(), {\n      modulationIndex: 10\n    });\n  };\n\n  FMSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.modulationIndex.dispose();\n    return this;\n  };\n\n  return FMSynth;\n}(ModulationSynth);\n\nexport { FMSynth };","import { __extends } from \"tslib\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\n\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\n\nvar MetalSynth =\n/** @class */\nfunction (_super) {\n  __extends(MetalSynth, _super);\n\n  function MetalSynth() {\n    var _this = _super.call(this, optionsFromArguments(MetalSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MetalSynth\";\n    /**\n     * The array of FMOscillators\n     */\n\n    _this._oscillators = [];\n    /**\n     * The frequency multipliers\n     */\n\n    _this._freqMultipliers = [];\n    var options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\"\n    });\n    _this._amplitude = new Gain({\n      context: _this.context,\n      gain: 0\n    }).connect(_this.output);\n    _this._highpass = new Filter({\n      // Q: -3.0102999566398125,\n      Q: 0,\n      context: _this.context,\n      type: \"highpass\"\n    }).connect(_this._amplitude);\n\n    for (var i = 0; i < inharmRatios.length; i++) {\n      var osc = new FMOscillator({\n        context: _this.context,\n        harmonicity: options.harmonicity,\n        modulationIndex: options.modulationIndex,\n        modulationType: \"square\",\n        onstop: i === 0 ? function () {\n          return _this.onsilence(_this);\n        } : noOp,\n        type: \"square\"\n      });\n      osc.connect(_this._highpass);\n      _this._oscillators[i] = osc;\n      var mult = new Multiply({\n        context: _this.context,\n        value: inharmRatios[i]\n      });\n      _this._freqMultipliers[i] = mult;\n\n      _this.frequency.chain(mult, osc.frequency);\n\n      _this.detune.connect(osc.detune);\n    }\n\n    _this._filterFreqScaler = new Scale({\n      context: _this.context,\n      max: 7000,\n      min: _this.toFrequency(options.resonance)\n    });\n    _this.envelope = new Envelope({\n      attack: options.envelope.attack,\n      attackCurve: \"linear\",\n      context: _this.context,\n      decay: options.envelope.decay,\n      release: options.envelope.release,\n      sustain: 0\n    });\n\n    _this.envelope.chain(_this._filterFreqScaler, _this._highpass.frequency);\n\n    _this.envelope.connect(_this._amplitude.gain); // set the octaves\n\n\n    _this._octaves = options.octaves;\n    _this.octaves = options.octaves;\n    return _this;\n  }\n\n  MetalSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.001,\n        decay: 1.4,\n        release: 0.2\n      }),\n      harmonicity: 5.1,\n      modulationIndex: 32,\n      octaves: 1.5,\n      resonance: 4000\n    });\n  };\n  /**\n   * Trigger the attack.\n   * @param time When the attack should be triggered.\n   * @param velocity The velocity that the envelope should be triggered at.\n   */\n\n\n  MetalSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.envelope.triggerAttack(time, velocity);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.start(time);\n    });\n\n    if (this.envelope.sustain === 0) {\n      this._oscillators.forEach(function (osc) {\n        osc.stop(time + _this.toSeconds(_this.envelope.attack) + _this.toSeconds(_this.envelope.decay));\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Trigger the release of the envelope.\n   * @param time When the release should be triggered.\n   */\n\n\n  MetalSynth.prototype._triggerEnvelopeRelease = function (time) {\n    var _this = this;\n\n    this.envelope.triggerRelease(time);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.stop(time + _this.toSeconds(_this.envelope.release));\n    });\n\n    return this;\n  };\n\n  MetalSynth.prototype.getLevelAtTime = function (time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  };\n\n  Object.defineProperty(MetalSynth.prototype, \"modulationIndex\", {\n    /**\n     * The modulationIndex of the oscillators which make up the source.\n     * see [[FMOscillator.modulationIndex]]\n     * @min 1\n     * @max 100\n     */\n    get: function () {\n      return this._oscillators[0].modulationIndex.value;\n    },\n    set: function (val) {\n      this._oscillators.forEach(function (osc) {\n        return osc.modulationIndex.value = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"harmonicity\", {\n    /**\n     * The harmonicity of the oscillators which make up the source.\n     * see Tone.FMOscillator.harmonicity\n     * @min 0.1\n     * @max 10\n     */\n    get: function () {\n      return this._oscillators[0].harmonicity.value;\n    },\n    set: function (val) {\n      this._oscillators.forEach(function (osc) {\n        return osc.harmonicity.value = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"resonance\", {\n    /**\n     * The lower level of the highpass filter which is attached to the envelope.\n     * This value should be between [0, 7000]\n     * @min 0\n     * @max 7000\n     */\n    get: function () {\n      return this._filterFreqScaler.min;\n    },\n    set: function (val) {\n      this._filterFreqScaler.min = this.toFrequency(val);\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MetalSynth.prototype, \"octaves\", {\n    /**\n     * The number of octaves above the \"resonance\" frequency\n     * that the filter ramps during the attack/decay envelope\n     * @min 0\n     * @max 8\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (val) {\n      this._octaves = val;\n      this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MetalSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._oscillators.forEach(function (osc) {\n      return osc.dispose();\n    });\n\n    this._freqMultipliers.forEach(function (freqMult) {\n      return freqMult.dispose();\n    });\n\n    this.frequency.dispose();\n    this.detune.dispose();\n\n    this._filterFreqScaler.dispose();\n\n    this._amplitude.dispose();\n\n    this.envelope.dispose();\n\n    this._highpass.dispose();\n\n    return this;\n  };\n\n  return MetalSynth;\n}(Monophonic);\n\nexport { MetalSynth };","import { __decorate, __extends } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\n\nvar MembraneSynth =\n/** @class */\nfunction (_super) {\n  __extends(MembraneSynth, _super);\n\n  function MembraneSynth() {\n    var _this = _super.call(this, optionsFromArguments(MembraneSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"MembraneSynth\";\n    /**\n     * Portamento is ignored in this synth. use pitch decay instead.\n     */\n\n    _this.portamento = 0;\n    var options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n    _this.pitchDecay = options.pitchDecay;\n    _this.octaves = options.octaves;\n    readOnly(_this, [\"oscillator\", \"envelope\"]);\n    return _this;\n  }\n\n  MembraneSynth.getDefaults = function () {\n    return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n      envelope: {\n        attack: 0.001,\n        attackCurve: \"exponential\",\n        decay: 0.4,\n        release: 1.4,\n        sustain: 0.01\n      },\n      octaves: 10,\n      oscillator: {\n        type: \"sine\"\n      },\n      pitchDecay: 0.05\n    });\n  };\n\n  MembraneSynth.prototype.setNote = function (note, time) {\n    var seconds = this.toSeconds(time);\n    var hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n    var maxNote = hertz * this.octaves;\n    this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n    this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n    return this;\n  };\n\n  MembraneSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    return this;\n  };\n\n  __decorate([range(0)], MembraneSynth.prototype, \"octaves\", void 0);\n\n  __decorate([timeRange(0)], MembraneSynth.prototype, \"pitchDecay\", void 0);\n\n  return MembraneSynth;\n}(Synth);\n\nexport { MembraneSynth };","import { __extends } from \"tslib\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\n\nvar NoiseSynth =\n/** @class */\nfunction (_super) {\n  __extends(NoiseSynth, _super);\n\n  function NoiseSynth() {\n    var _this = _super.call(this, optionsFromArguments(NoiseSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"NoiseSynth\";\n    var options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n    _this.noise = new Noise(Object.assign({\n      context: _this.context\n    }, options.noise));\n    _this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: _this.context\n    }, options.envelope)); // connect the noise to the output\n\n    _this.noise.chain(_this.envelope, _this.output);\n\n    return _this;\n  }\n\n  NoiseSynth.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        decay: 0.1,\n        sustain: 0.0\n      }),\n      noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"white\"\n      })\n    });\n  };\n  /**\n   * Start the attack portion of the envelopes. Unlike other\n   * instruments, Tone.NoiseSynth doesn't have a note.\n   * @example\n   * const noiseSynth = new Tone.NoiseSynth().toDestination();\n   * noiseSynth.triggerAttack();\n   */\n\n\n  NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time); // the envelopes\n\n    this.envelope.triggerAttack(time, velocity); // start the noise\n\n    this.noise.start(time);\n\n    if (this.envelope.sustain === 0) {\n      this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n    }\n\n    return this;\n  };\n  /**\n   * Start the release portion of the envelopes.\n   */\n\n\n  NoiseSynth.prototype.triggerRelease = function (time) {\n    time = this.toSeconds(time);\n    this.envelope.triggerRelease(time);\n    this.noise.stop(time + this.toSeconds(this.envelope.release));\n    return this;\n  };\n\n  NoiseSynth.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 0);\n\n    this._syncMethod(\"triggerRelease\", 0);\n\n    return this;\n  };\n\n  NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    time = this.toSeconds(time);\n    duration = this.toSeconds(duration);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + duration);\n    return this;\n  };\n\n  NoiseSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.noise.dispose();\n    this.envelope.dispose();\n    return this;\n  };\n\n  return NoiseSynth;\n}(Instrument);\n\nexport { NoiseSynth };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\n\nvar ToneAudioWorklet =\n/** @class */\nfunction (_super) {\n  __extends(ToneAudioWorklet, _super);\n\n  function ToneAudioWorklet(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"ToneAudioWorklet\";\n    /**\n     * The constructor options for the node\n     */\n\n    _this.workletOptions = {};\n    /**\n     * Callback which is invoked when there is an error in the processing\n     */\n\n    _this.onprocessorerror = noOp;\n    var blobUrl = URL.createObjectURL(new Blob([_this._audioWorklet()], {\n      type: \"text/javascript\"\n    }));\n\n    var name = _this._audioWorkletName(); // Register the processor\n\n\n    _this.context.addAudioWorkletModule(blobUrl, name).then(function () {\n      // create the worklet when it's read\n      if (!_this.disposed) {\n        _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);\n        _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_this);\n\n        _this.onReady(_this._worklet);\n      }\n    });\n\n    return _this;\n  }\n\n  ToneAudioWorklet.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    if (this._worklet) {\n      this._worklet.disconnect();\n    }\n\n    return this;\n  };\n\n  return ToneAudioWorklet;\n}(ToneAudioNode);\n\nexport { ToneAudioWorklet };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/context/ToneAudioWorklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\n\nvar FeedbackCombFilter =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackCombFilter, _super);\n\n  function FeedbackCombFilter() {\n    var _this = _super.call(this, optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"])) || this;\n\n    _this.name = \"FeedbackCombFilter\";\n    /**\n     * Default constructor options for the filter\n     */\n\n    _this.workletOptions = {\n      numberOfInputs: 1,\n      numberOfOutputs: 1,\n      channelCount: 1\n    };\n    var options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    var dummyGain = _this.context.createGain();\n\n    _this.delayTime = new Param({\n      context: _this.context,\n      value: options.delayTime,\n      units: \"time\",\n      minValue: 0,\n      maxValue: 1,\n      param: dummyGain.gain,\n      swappable: true\n    });\n    _this.resonance = new Param({\n      context: _this.context,\n      value: options.resonance,\n      units: \"normalRange\",\n      param: dummyGain.gain,\n      swappable: true\n    });\n    readOnly(_this, [\"resonance\", \"delayTime\"]);\n    return _this;\n  }\n\n  FeedbackCombFilter.prototype._audioWorkletName = function () {\n    return \"feedback-comb-filter\";\n  };\n\n  FeedbackCombFilter.prototype._audioWorklet = function () {\n    return (\n      /* javascript */\n      \" \\n\\t\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\t\\tstatic get parameterDescriptors() {\\n\\t\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\t\\tname: \\\"delayTime\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.1,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 1,\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tname: \\\"feedback\\\",\\n\\t\\t\\t\\t\\t\\tdefaultValue: 0.5,\\n\\t\\t\\t\\t\\t\\tminValue: 0,\\n\\t\\t\\t\\t\\t\\tmaxValue: 0.9999,\\n\\t\\t\\t\\t\\t}];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tconstructor(options) {\\n\\t\\t\\t\\t\\tsuper(options);\\n\\t\\t\\t\\t\\tthis.delayBuffer = new Float32Array(sampleRate);\\n\\t\\t\\t\\t\\tthis.fallbackInput = new Float32Array(128)\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tgetParameter(parameter, index) {\\n\\t\\t\\t\\t\\tif (parameter.length > 1) {\\n\\t\\t\\t\\t\\t\\treturn parameter[index];\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn parameter[0];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t\\tprocess(inputs, outputs, parameters) {\\n\\t\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\t\\tconst delayLength = this.delayBuffer.length;\\n\\t\\t\\t\\t\\tconst outputChannel = output[0];\\n\\t\\t\\t\\t\\tconst inputChannel = input[0] || this.fallbackInput;\\n\\t\\t\\t\\t\\tconst delayTimeParam = parameters.delayTime;\\n\\t\\t\\t\\t\\tconst feedbackParam = parameters.feedback;\\n\\t\\t\\t\\t\\tinputChannel.forEach((value, index) => {\\n\\t\\t\\t\\t\\t\\tconst delayTime = this.getParameter(delayTimeParam, index);\\n\\t\\t\\t\\t\\t\\tconst feedback = this.getParameter(feedbackParam, index);\\n\\t\\t\\t\\t\\t\\tconst delaySamples = Math.floor(delayTime * sampleRate);\\n\\t\\t\\t\\t\\t\\tconst currentIndex = (currentFrame + index) % delayLength;\\n\\t\\t\\t\\t\\t\\tconst delayedIndex = (currentFrame + index + delaySamples) % delayLength;\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// the current value to output\\n\\t\\t\\t\\t\\t\\tconst currentValue = this.delayBuffer[currentIndex];\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// write the current value to the delayBuffer in the future\\n\\t\\t\\t\\t\\t\\tthis.delayBuffer[delayedIndex] = value + currentValue * feedback;\\n\\n\\t\\t\\t\\t\\t\\t// set all of the output channels to the same value\\n\\t\\t\\t\\t\\t\\toutputChannel[index] = delaySamples > 0 ? currentValue : value;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t// keep the processing alive\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\"\n    );\n  };\n  /**\n   * The default parameters\n   */\n\n\n  FeedbackCombFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  };\n\n  FeedbackCombFilter.prototype.onReady = function (node) {\n    connectSeries(this.input, node, this.output); // @ts-ignore\n\n    var delayTime = node.parameters.get(\"delayTime\");\n    this.delayTime.setParam(delayTime); // @ts-ignore\n\n    var feedback = node.parameters.get(\"feedback\");\n    this.resonance.setParam(feedback);\n  };\n\n  FeedbackCombFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.delayTime.dispose();\n    this.resonance.dispose();\n    return this;\n  };\n\n  return FeedbackCombFilter;\n}(ToneAudioWorklet);\n\nexport { FeedbackCombFilter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\".\n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop.\n * References:\n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/\n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\n\nvar OnePoleFilter =\n/** @class */\nfunction (_super) {\n  __extends(OnePoleFilter, _super);\n\n  function OnePoleFilter() {\n    var _this = _super.call(this, optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n\n    _this.name = \"OnePoleFilter\";\n    var options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this._frequency = options.frequency;\n    _this._type = options.type;\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    _this._createFilter();\n\n    return _this;\n  }\n\n  OnePoleFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      frequency: 880,\n      type: \"lowpass\"\n    });\n  };\n  /**\n   * Create a filter and dispose the old one\n   */\n\n\n  OnePoleFilter.prototype._createFilter = function () {\n    var _this = this;\n\n    var oldFilter = this._filter;\n    var freq = this.toFrequency(this._frequency);\n    var t = 1 / (2 * Math.PI * freq);\n\n    if (this._type === \"lowpass\") {\n      var a0 = 1 / (t * this.context.sampleRate);\n      var b1 = a0 - 1;\n      this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n    } else {\n      var b1 = 1 / (t * this.context.sampleRate) - 1;\n      this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n    }\n\n    this.input.chain(this._filter, this.output);\n\n    if (oldFilter) {\n      // dispose it on the next block\n      this.context.setTimeout(function () {\n        if (!_this.disposed) {\n          _this.input.disconnect(oldFilter);\n\n          oldFilter.disconnect();\n        }\n      }, this.blockTime);\n    }\n  };\n\n  Object.defineProperty(OnePoleFilter.prototype, \"frequency\", {\n    /**\n     * The frequency value.\n     */\n    get: function () {\n      return this._frequency;\n    },\n    set: function (fq) {\n      this._frequency = fq;\n\n      this._createFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OnePoleFilter.prototype, \"type\", {\n    /**\n     * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (t) {\n      this._type = t;\n\n      this._createFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the frequency response curve. This curve represents how the filter\n   * responses to frequencies between 20hz-20khz.\n   * @param  len The number of values to return\n   * @return The frequency response curve between 20-20kHz\n   */\n\n  OnePoleFilter.prototype.getFrequencyResponse = function (len) {\n    if (len === void 0) {\n      len = 128;\n    }\n\n    var freqValues = new Float32Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var norm = Math.pow(i / len, 2);\n      var freq = norm * (20000 - 20) + 20;\n      freqValues[i] = freq;\n    }\n\n    var magValues = new Float32Array(len);\n    var phaseValues = new Float32Array(len);\n\n    this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n\n    return magValues;\n  };\n\n  OnePoleFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n\n    this._filter.disconnect();\n\n    return this;\n  };\n\n  return OnePoleFilter;\n}(ToneAudioNode);\n\nexport { OnePoleFilter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\n\nvar LowpassCombFilter =\n/** @class */\nfunction (_super) {\n  __extends(LowpassCombFilter, _super);\n\n  function LowpassCombFilter() {\n    var _this = _super.call(this, optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"])) || this;\n\n    _this.name = \"LowpassCombFilter\";\n    var options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n    _this._combFilter = _this.output = new FeedbackCombFilter({\n      context: _this.context,\n      delayTime: options.delayTime,\n      resonance: options.resonance\n    });\n    _this.delayTime = _this._combFilter.delayTime;\n    _this.resonance = _this._combFilter.resonance;\n    _this._lowpass = _this.input = new OnePoleFilter({\n      context: _this.context,\n      frequency: options.dampening,\n      type: \"lowpass\"\n    }); // connections\n\n    _this._lowpass.connect(_this._combFilter);\n\n    return _this;\n  }\n\n  LowpassCombFilter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      dampening: 3000,\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  };\n\n  Object.defineProperty(LowpassCombFilter.prototype, \"dampening\", {\n    /**\n     * The dampening control of the feedback\n     */\n    get: function () {\n      return this._lowpass.frequency;\n    },\n    set: function (fq) {\n      this._lowpass.frequency = fq;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LowpassCombFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._combFilter.dispose();\n\n    this._lowpass.dispose();\n\n    return this;\n  };\n\n  return LowpassCombFilter;\n}(ToneAudioNode);\n\nexport { LowpassCombFilter };","import { __extends } from \"tslib\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\n/**\n * Karplus-String string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\n\nvar PluckSynth =\n/** @class */\nfunction (_super) {\n  __extends(PluckSynth, _super);\n\n  function PluckSynth() {\n    var _this = _super.call(this, optionsFromArguments(PluckSynth.getDefaults(), arguments)) || this;\n\n    _this.name = \"PluckSynth\";\n    var options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n    _this._noise = new Noise({\n      context: _this.context,\n      type: \"pink\"\n    });\n    _this.attackNoise = options.attackNoise;\n    _this._lfcf = new LowpassCombFilter({\n      context: _this.context,\n      dampening: options.dampening,\n      resonance: options.resonance\n    });\n    _this.resonance = options.resonance;\n    _this.release = options.release;\n\n    _this._noise.connect(_this._lfcf);\n\n    _this._lfcf.connect(_this.output);\n\n    return _this;\n  }\n\n  PluckSynth.getDefaults = function () {\n    return deepMerge(Instrument.getDefaults(), {\n      attackNoise: 1,\n      dampening: 4000,\n      resonance: 0.7,\n      release: 1\n    });\n  };\n\n  Object.defineProperty(PluckSynth.prototype, \"dampening\", {\n    /**\n     * The dampening control. i.e. the lowpass filter frequency of the comb filter\n     * @min 0\n     * @max 7000\n     */\n    get: function () {\n      return this._lfcf.dampening;\n    },\n    set: function (fq) {\n      this._lfcf.dampening = fq;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PluckSynth.prototype.triggerAttack = function (note, time) {\n    var freq = this.toFrequency(note);\n    time = this.toSeconds(time);\n    var delayAmount = 1 / freq;\n\n    this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\n    this._noise.start(time);\n\n    this._noise.stop(time + delayAmount * this.attackNoise);\n\n    this._lfcf.resonance.cancelScheduledValues(time);\n\n    this._lfcf.resonance.setValueAtTime(this.resonance, time);\n\n    return this;\n  };\n  /**\n   * Ramp down the [[resonance]] to 0 over the duration of the release time.\n   */\n\n\n  PluckSynth.prototype.triggerRelease = function (time) {\n    this._lfcf.resonance.linearRampTo(0, this.release, time);\n\n    return this;\n  };\n\n  PluckSynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._noise.dispose();\n\n    this._lfcf.dispose();\n\n    return this;\n  };\n\n  return PluckSynth;\n}(Instrument);\n\nexport { PluckSynth };","import { __extends } from \"tslib\";\nimport { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\n\nvar PolySynth =\n/** @class */\nfunction (_super) {\n  __extends(PolySynth, _super);\n\n  function PolySynth() {\n    var _this = _super.call(this, optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"])) || this;\n\n    _this.name = \"PolySynth\";\n    /**\n     * The voices which are not currently in use\n     */\n\n    _this._availableVoices = [];\n    /**\n     * The currently active voices\n     */\n\n    _this._activeVoices = [];\n    /**\n     * All of the allocated voices for this synth.\n     */\n\n    _this._voices = [];\n    /**\n     * The GC timeout. Held so that it could be cancelled when the node is disposed.\n     */\n\n    _this._gcTimeout = -1;\n    /**\n     * A moving average of the number of active voices\n     */\n\n    _this._averageActiveVoices = 0;\n    var options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]); // check against the old API (pre 14.3.0)\n\n    assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n    var defaults = options.voice.getDefaults();\n    _this.options = Object.assign(defaults, options.options);\n    _this.voice = options.voice;\n    _this.maxPolyphony = options.maxPolyphony; // create the first voice\n\n    _this._dummyVoice = _this._getNextAvailableVoice(); // remove it from the voices list\n\n    var index = _this._voices.indexOf(_this._dummyVoice);\n\n    _this._voices.splice(index, 1); // kick off the GC interval\n\n\n    _this._gcTimeout = _this.context.setInterval(_this._collectGarbage.bind(_this), 1);\n    return _this;\n  }\n\n  PolySynth.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      maxPolyphony: 32,\n      options: {},\n      voice: Synth\n    });\n  };\n\n  Object.defineProperty(PolySynth.prototype, \"activeVoices\", {\n    /**\n     * The number of active voices.\n     */\n    get: function () {\n      return this._activeVoices.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Invoked when the source is done making sound, so that it can be\n   * readded to the pool of available voices\n   */\n\n  PolySynth.prototype._makeVoiceAvailable = function (voice) {\n    this._availableVoices.push(voice); // remove the midi note from 'active voices'\n\n\n    var activeVoiceIndex = this._activeVoices.findIndex(function (e) {\n      return e.voice === voice;\n    });\n\n    this._activeVoices.splice(activeVoiceIndex, 1);\n  };\n  /**\n   * Get an available voice from the pool of available voices.\n   * If one is not available and the maxPolyphony limit is reached,\n   * steal a voice, otherwise return null.\n   */\n\n\n  PolySynth.prototype._getNextAvailableVoice = function () {\n    // if there are available voices, return the first one\n    if (this._availableVoices.length) {\n      return this._availableVoices.shift();\n    } else if (this._voices.length < this.maxPolyphony) {\n      // otherwise if there is still more maxPolyphony, make a new voice\n      var voice = new this.voice(Object.assign(this.options, {\n        context: this.context,\n        onsilence: this._makeVoiceAvailable.bind(this)\n      }));\n      voice.connect(this.output);\n\n      this._voices.push(voice);\n\n      return voice;\n    } else {\n      warn(\"Max polyphony exceeded. Note dropped.\");\n    }\n  };\n  /**\n   * Occasionally check if there are any allocated voices which can be cleaned up.\n   */\n\n\n  PolySynth.prototype._collectGarbage = function () {\n    this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n\n    if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n      // take off an available note\n      var firstAvail = this._availableVoices.shift();\n\n      var index = this._voices.indexOf(firstAvail);\n\n      this._voices.splice(index, 1);\n\n      if (!this.context.isOffline) {\n        firstAvail.dispose();\n      }\n    }\n  };\n  /**\n   * Internal method which triggers the attack\n   */\n\n\n  PolySynth.prototype._triggerAttack = function (notes, time, velocity) {\n    var _this = this;\n\n    notes.forEach(function (note) {\n      var midiNote = new MidiClass(_this.context, note).toMidi();\n\n      var voice = _this._getNextAvailableVoice();\n\n      if (voice) {\n        voice.triggerAttack(note, time, velocity);\n\n        _this._activeVoices.push({\n          midi: midiNote,\n          voice: voice,\n          released: false\n        });\n\n        _this.log(\"triggerAttack\", note, time);\n      }\n    });\n  };\n  /**\n   * Internal method which triggers the release\n   */\n\n\n  PolySynth.prototype._triggerRelease = function (notes, time) {\n    var _this = this;\n\n    notes.forEach(function (note) {\n      var midiNote = new MidiClass(_this.context, note).toMidi();\n\n      var event = _this._activeVoices.find(function (_a) {\n        var midi = _a.midi,\n            released = _a.released;\n        return midi === midiNote && !released;\n      });\n\n      if (event) {\n        // trigger release on that note\n        event.voice.triggerRelease(time); // mark it as released\n\n        event.released = true;\n\n        _this.log(\"triggerRelease\", note, time);\n      }\n    });\n  };\n  /**\n   * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n   * to wait for just-in-time scheduling\n   */\n\n\n  PolySynth.prototype._scheduleEvent = function (type, notes, time, velocity) {\n    var _this = this;\n\n    assert(!this.disposed, \"Synth was already disposed\"); // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n\n    if (time <= this.now()) {\n      // do it immediately\n      if (type === \"attack\") {\n        this._triggerAttack(notes, time, velocity);\n      } else {\n        this._triggerRelease(notes, time);\n      }\n    } else {\n      // schedule it to start in the future\n      this.context.setTimeout(function () {\n        _this._scheduleEvent(type, notes, time, velocity);\n      }, time - this.now());\n    }\n  };\n  /**\n   * Trigger the attack portion of the note\n   * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n   * @param  time  The start time of the note.\n   * @param velocity The velocity of the note.\n   * @example\n   * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n   * // trigger a chord immediately with a velocity of 0.2\n   * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n   */\n\n\n  PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    var computedTime = this.toSeconds(time);\n\n    this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n\n    return this;\n  };\n  /**\n   * Trigger the release of the note. Unlike monophonic instruments,\n   * a note (or array of notes) needs to be passed in as the first argument.\n   * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n   * @param  time  When the release will be triggered.\n   * @example\n   * @example\n   * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n   * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n   * // trigger the release of the given notes.\n   * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n   * poly.triggerRelease(\"F5\", \"+3\");\n   */\n\n\n  PolySynth.prototype.triggerRelease = function (notes, time) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    var computedTime = this.toSeconds(time);\n\n    this._scheduleEvent(\"release\", notes, computedTime);\n\n    return this;\n  };\n  /**\n   * Trigger the attack and release after the specified duration\n   * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n   * @param  duration the duration of the note\n   * @param  time  if no time is given, defaults to now\n   * @param  velocity the velocity of the attack (0-1)\n   * @example\n   * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n   * // can pass in an array of durations as well\n   * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n   */\n\n\n  PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n    var computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n\n    if (isArray(duration)) {\n      assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n      notes = notes;\n\n      for (var i = 0; i < notes.length; i++) {\n        var d = duration[Math.min(i, duration.length - 1)];\n        var durationSeconds = this.toSeconds(d);\n        assert(durationSeconds > 0, \"The duration must be greater than 0\");\n        this.triggerRelease(notes[i], computedTime + durationSeconds);\n      }\n    } else {\n      var durationSeconds = this.toSeconds(duration);\n      assert(durationSeconds > 0, \"The duration must be greater than 0\");\n      this.triggerRelease(notes, computedTime + durationSeconds);\n    }\n\n    return this;\n  };\n\n  PolySynth.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 1);\n\n    this._syncMethod(\"triggerRelease\", 1);\n\n    return this;\n  };\n  /**\n   * Set a member/attribute of the voices\n   * @example\n   * const poly = new Tone.PolySynth().toDestination();\n   * // set all of the voices using an options object for the synth type\n   * poly.set({\n   * \tenvelope: {\n   * \t\tattack: 0.25\n   * \t}\n   * });\n   * poly.triggerAttackRelease(\"Bb3\", 0.2);\n   */\n\n\n  PolySynth.prototype.set = function (options) {\n    // remove options which are controlled by the PolySynth\n    var sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]); // store all of the options\n\n    this.options = deepMerge(this.options, sanitizedOptions);\n\n    this._voices.forEach(function (voice) {\n      return voice.set(sanitizedOptions);\n    });\n\n    this._dummyVoice.set(sanitizedOptions);\n\n    return this;\n  };\n\n  PolySynth.prototype.get = function () {\n    return this._dummyVoice.get();\n  };\n  /**\n   * Trigger the release portion of all the currently active voices immediately.\n   * Useful for silencing the synth.\n   */\n\n\n  PolySynth.prototype.releaseAll = function () {\n    var now = this.now();\n\n    this._activeVoices.forEach(function (_a) {\n      var voice = _a.voice;\n      voice.triggerRelease(now);\n    });\n\n    this._activeVoices = [];\n    return this;\n  };\n\n  PolySynth.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dummyVoice.dispose();\n\n    this._voices.forEach(function (v) {\n      return v.dispose();\n    });\n\n    this._activeVoices = [];\n    this._availableVoices = [];\n    this.context.clearInterval(this._gcTimeout);\n    return this;\n  };\n\n  return PolySynth;\n}(Instrument);\n\nexport { PolySynth };","import { __decorate, __extends } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tC1: \"C1.mp3\",\n * \t\tC2: \"C2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/examples/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t},\n * });\n * @category Instrument\n */\n\nvar Sampler =\n/** @class */\nfunction (_super) {\n  __extends(Sampler, _super);\n\n  function Sampler() {\n    var _this = _super.call(this, optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\")) || this;\n\n    _this.name = \"Sampler\";\n    /**\n     * The object of all currently playing BufferSources\n     */\n\n    _this._activeSources = new Map();\n    var options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    var urlMap = {};\n    Object.keys(options.urls).forEach(function (note) {\n      var noteNumber = parseInt(note, 10);\n      assert(isNote(note) || isNumber(noteNumber) && isFinite(noteNumber), \"url key is neither a note or midi pitch: \" + note);\n\n      if (isNote(note)) {\n        // convert the note name to MIDI\n        var mid = new FrequencyClass(_this.context, note).toMidi();\n        urlMap[mid] = options.urls[note];\n      } else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n        // otherwise if it's numbers assume it's midi\n        urlMap[noteNumber] = options.urls[noteNumber];\n      }\n    });\n    _this._buffers = new ToneAudioBuffers({\n      urls: urlMap,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    });\n    _this.attack = options.attack;\n    _this.release = options.release;\n    _this.curve = options.curve; // invoke the callback if it's already loaded\n\n    if (_this._buffers.loaded) {\n      // invoke onload deferred\n      Promise.resolve().then(options.onload);\n    }\n\n    return _this;\n  }\n\n  Sampler.getDefaults = function () {\n    return Object.assign(Instrument.getDefaults(), {\n      attack: 0,\n      baseUrl: \"\",\n      curve: \"exponential\",\n      onload: noOp,\n      onerror: noOp,\n      release: 0.1,\n      urls: {}\n    });\n  };\n  /**\n   * Returns the difference in steps between the given midi note at the closets sample.\n   */\n\n\n  Sampler.prototype._findClosest = function (midi) {\n    // searches within 8 octaves of the given midi note\n    var MAX_INTERVAL = 96;\n    var interval = 0;\n\n    while (interval < MAX_INTERVAL) {\n      // check above and below\n      if (this._buffers.has(midi + interval)) {\n        return -interval;\n      } else if (this._buffers.has(midi - interval)) {\n        return interval;\n      }\n\n      interval++;\n    }\n\n    throw new Error(\"No available buffers for note: \" + midi);\n  };\n  /**\n   * @param  notes\tThe note to play, or an array of notes.\n   * @param  time     When to play the note\n   * @param  velocity The velocity to play the sample back.\n   */\n\n\n  Sampler.prototype.triggerAttack = function (notes, time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    this.log(\"triggerAttack\", notes, time, velocity);\n\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    notes.forEach(function (note) {\n      var midi = new FrequencyClass(_this.context, note).toMidi(); // find the closest note pitch\n\n      var difference = _this._findClosest(midi);\n\n      var closestNote = midi - difference;\n\n      var buffer = _this._buffers.get(closestNote);\n\n      var playbackRate = intervalToFrequencyRatio(difference); // play that note\n\n      var source = new ToneBufferSource({\n        url: buffer,\n        context: _this.context,\n        curve: _this.curve,\n        fadeIn: _this.attack,\n        fadeOut: _this.release,\n        playbackRate: playbackRate\n      }).connect(_this.output);\n      source.start(time, 0, buffer.duration / playbackRate, velocity); // add it to the active sources\n\n      if (!isArray(_this._activeSources.get(midi))) {\n        _this._activeSources.set(midi, []);\n      }\n\n      _this._activeSources.get(midi).push(source); // remove it when it's done\n\n\n      source.onended = function () {\n        if (_this._activeSources && _this._activeSources.has(midi)) {\n          var sources = _this._activeSources.get(midi);\n\n          var index = sources.indexOf(source);\n\n          if (index !== -1) {\n            sources.splice(index, 1);\n          }\n        }\n      };\n    });\n    return this;\n  };\n  /**\n   * @param  notes\tThe note to release, or an array of notes.\n   * @param  time     \tWhen to release the note.\n   */\n\n\n  Sampler.prototype.triggerRelease = function (notes, time) {\n    var _this = this;\n\n    this.log(\"triggerRelease\", notes, time);\n\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n\n    notes.forEach(function (note) {\n      var midi = new FrequencyClass(_this.context, note).toMidi(); // find the note\n\n      if (_this._activeSources.has(midi) && _this._activeSources.get(midi).length) {\n        var sources = _this._activeSources.get(midi);\n\n        time = _this.toSeconds(time);\n        sources.forEach(function (source) {\n          source.stop(time);\n        });\n\n        _this._activeSources.set(midi, []);\n      }\n    });\n    return this;\n  };\n  /**\n   * Release all currently active notes.\n   * @param  time     \tWhen to release the notes.\n   */\n\n\n  Sampler.prototype.releaseAll = function (time) {\n    var computedTime = this.toSeconds(time);\n\n    this._activeSources.forEach(function (sources) {\n      while (sources.length) {\n        var source = sources.shift();\n        source.stop(computedTime);\n      }\n    });\n\n    return this;\n  };\n\n  Sampler.prototype.sync = function () {\n    this._syncMethod(\"triggerAttack\", 1);\n\n    this._syncMethod(\"triggerRelease\", 1);\n\n    return this;\n  };\n  /**\n   * Invoke the attack phase, then after the duration, invoke the release.\n   * @param  notes\tThe note to play and release, or an array of notes.\n   * @param  duration The time the note should be held\n   * @param  time     When to start the attack\n   * @param  velocity The velocity of the attack\n   */\n\n\n  Sampler.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n    var _this = this;\n\n    if (velocity === void 0) {\n      velocity = 1;\n    }\n\n    var computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n\n    if (isArray(duration)) {\n      assert(isArray(notes), \"notes must be an array when duration is array\");\n      notes.forEach(function (note, index) {\n        var d = duration[Math.min(index, duration.length - 1)];\n\n        _this.triggerRelease(note, computedTime + _this.toSeconds(d));\n      });\n    } else {\n      this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n    }\n\n    return this;\n  };\n  /**\n   * Add a note to the sampler.\n   * @param  note      The buffer's pitch.\n   * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n   * @param  callback  The callback to invoke when the url is loaded.\n   */\n\n\n  Sampler.prototype.add = function (note, url, callback) {\n    assert(isNote(note) || isFinite(note), \"note must be a pitch or midi: \" + note);\n\n    if (isNote(note)) {\n      // convert the note name to MIDI\n      var mid = new FrequencyClass(this.context, note).toMidi();\n\n      this._buffers.add(mid, url, callback);\n    } else {\n      // otherwise if it's numbers assume it's midi\n      this._buffers.add(note, url, callback);\n    }\n\n    return this;\n  };\n\n  Object.defineProperty(Sampler.prototype, \"loaded\", {\n    /**\n     * If the buffers are loaded or not\n     */\n    get: function () {\n      return this._buffers.loaded;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up\n   */\n\n  Sampler.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffers.dispose();\n\n    this._activeSources.forEach(function (sources) {\n      sources.forEach(function (source) {\n        return source.dispose();\n      });\n    });\n\n    this._activeSources.clear();\n\n    return this;\n  };\n\n  __decorate([timeRange(0)], Sampler.prototype, \"attack\", void 0);\n\n  __decorate([timeRange(0)], Sampler.prototype, \"release\", void 0);\n\n  return Sampler;\n}(Instrument);\n\nexport { Sampler };","import { __extends } from \"tslib\";\nimport \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\n\nvar ToneEvent =\n/** @class */\nfunction (_super) {\n  __extends(ToneEvent, _super);\n\n  function ToneEvent() {\n    var _this = _super.call(this, optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"])) || this;\n\n    _this.name = \"ToneEvent\";\n    /**\n     * Tracks the scheduled events\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * A delay time from when the event is scheduled to start\n     */\n\n    _this._startOffset = 0;\n    var options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n    _this._loop = options.loop;\n    _this.callback = options.callback;\n    _this.value = options.value;\n    _this._loopStart = _this.toTicks(options.loopStart);\n    _this._loopEnd = _this.toTicks(options.loopEnd);\n    _this._playbackRate = options.playbackRate;\n    _this._probability = options.probability;\n    _this._humanize = options.humanize;\n    _this.mute = options.mute;\n    _this._playbackRate = options.playbackRate;\n    _this._state.increasing = true; // schedule the events for the first time\n\n    _this._rescheduleEvents();\n\n    return _this;\n  }\n\n  ToneEvent.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      humanize: false,\n      loop: false,\n      loopEnd: \"1m\",\n      loopStart: 0,\n      mute: false,\n      playbackRate: 1,\n      probability: 1,\n      value: null\n    });\n  };\n  /**\n   * Reschedule all of the events along the timeline\n   * with the updated values.\n   * @param after Only reschedules events after the given time.\n   */\n\n\n  ToneEvent.prototype._rescheduleEvents = function (after) {\n    var _this = this;\n\n    if (after === void 0) {\n      after = -1;\n    } // if no argument is given, schedules all of the events\n\n\n    this._state.forEachFrom(after, function (event) {\n      var duration;\n\n      if (event.state === \"started\") {\n        if (event.id !== -1) {\n          _this.context.transport.clear(event.id);\n        }\n\n        var startTick = event.time + Math.round(_this.startOffset / _this._playbackRate);\n\n        if (_this._loop === true || isNumber(_this._loop) && _this._loop > 1) {\n          duration = Infinity;\n\n          if (isNumber(_this._loop)) {\n            duration = _this._loop * _this._getLoopDuration();\n          }\n\n          var nextEvent = _this._state.getAfter(startTick);\n\n          if (nextEvent !== null) {\n            duration = Math.min(duration, nextEvent.time - startTick);\n          }\n\n          if (duration !== Infinity) {\n            // schedule a stop since it's finite duration\n            _this._state.setStateAtTime(\"stopped\", startTick + duration + 1, {\n              id: -1\n            });\n\n            duration = new TicksClass(_this.context, duration);\n          }\n\n          var interval = new TicksClass(_this.context, _this._getLoopDuration());\n          event.id = _this.context.transport.scheduleRepeat(_this._tick.bind(_this), interval, new TicksClass(_this.context, startTick), duration);\n        } else {\n          event.id = _this.context.transport.schedule(_this._tick.bind(_this), new TicksClass(_this.context, startTick));\n        }\n      }\n    });\n  };\n\n  Object.defineProperty(ToneEvent.prototype, \"state\", {\n    /**\n     * Returns the playback state of the note, either \"started\" or \"stopped\".\n     */\n    get: function () {\n      return this._state.getValueAtTime(this.context.transport.ticks);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"startOffset\", {\n    /**\n     * The start from the scheduled start time.\n     */\n    get: function () {\n      return this._startOffset;\n    },\n    set: function (offset) {\n      this._startOffset = offset;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"probability\", {\n    /**\n     * The probability of the notes being triggered.\n     */\n    get: function () {\n      return this._probability;\n    },\n    set: function (prob) {\n      this._probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"humanize\", {\n    /**\n     * If set to true, will apply small random variation\n     * to the callback time. If the value is given as a time, it will randomize\n     * by that amount.\n     * @example\n     * const event = new Tone.ToneEvent();\n     * event.humanize = true;\n     */\n    get: function () {\n      return this._humanize;\n    },\n    set: function (variation) {\n      this._humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the note at the given time.\n   * @param  time  When the event should start.\n   */\n\n  ToneEvent.prototype.start = function (time) {\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) === \"stopped\") {\n      this._state.add({\n        id: -1,\n        state: \"started\",\n        time: ticks\n      });\n\n      this._rescheduleEvents(ticks);\n    }\n\n    return this;\n  };\n  /**\n   * Stop the Event at the given time.\n   * @param  time  When the event should stop.\n   */\n\n\n  ToneEvent.prototype.stop = function (time) {\n    this.cancel(time);\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) === \"started\") {\n      this._state.setStateAtTime(\"stopped\", ticks, {\n        id: -1\n      });\n\n      var previousEvent = this._state.getBefore(ticks);\n\n      var reschedulTime = ticks;\n\n      if (previousEvent !== null) {\n        reschedulTime = previousEvent.time;\n      }\n\n      this._rescheduleEvents(reschedulTime);\n    }\n\n    return this;\n  };\n  /**\n   * Cancel all scheduled events greater than or equal to the given time\n   * @param  time  The time after which events will be cancel.\n   */\n\n\n  ToneEvent.prototype.cancel = function (time) {\n    var _this = this;\n\n    time = defaultArg(time, -Infinity);\n    var ticks = this.toTicks(time);\n\n    this._state.forEachFrom(ticks, function (event) {\n      _this.context.transport.clear(event.id);\n    });\n\n    this._state.cancel(ticks);\n\n    return this;\n  };\n  /**\n   * The callback function invoker. Also\n   * checks if the Event is done playing\n   * @param  time  The time of the event in seconds\n   */\n\n\n  ToneEvent.prototype._tick = function (time) {\n    var ticks = this.context.transport.getTicksAtTime(time);\n\n    if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n      if (this.probability < 1 && Math.random() > this.probability) {\n        return;\n      }\n\n      if (this.humanize) {\n        var variation = 0.02;\n\n        if (!isBoolean(this.humanize)) {\n          variation = this.toSeconds(this.humanize);\n        }\n\n        time += (Math.random() * 2 - 1) * variation;\n      }\n\n      this.callback(time, this.value);\n    }\n  };\n  /**\n   * Get the duration of the loop.\n   */\n\n\n  ToneEvent.prototype._getLoopDuration = function () {\n    return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n  };\n\n  Object.defineProperty(ToneEvent.prototype, \"loop\", {\n    /**\n     * If the note should loop or not\n     * between ToneEvent.loopStart and\n     * ToneEvent.loopEnd. If set to true,\n     * the event will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      this._loop = loop;\n\n      this._rescheduleEvents();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the note. Defaults to 1.\n     * @example\n     * const note = new Tone.ToneEvent();\n     * note.loop = true;\n     * // repeat the note twice as fast\n     * note.playbackRate = 2;\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      this._rescheduleEvents();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"loopEnd\", {\n    /**\n     * The loopEnd point is the time the event will loop\n     * if ToneEvent.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopEnd).toSeconds();\n    },\n    set: function (loopEnd) {\n      this._loopEnd = this.toTicks(loopEnd);\n\n      if (this._loop) {\n        this._rescheduleEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"loopStart\", {\n    /**\n     * The time when the loop should start.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopStart).toSeconds();\n    },\n    set: function (loopStart) {\n      this._loopStart = this.toTicks(loopStart);\n\n      if (this._loop) {\n        this._rescheduleEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToneEvent.prototype, \"progress\", {\n    /**\n     * The current progress of the loop interval.\n     * Returns 0 if the event is not started yet or\n     * it is not set to loop.\n     */\n    get: function () {\n      if (this._loop) {\n        var ticks = this.context.transport.ticks;\n\n        var lastEvent = this._state.get(ticks);\n\n        if (lastEvent !== null && lastEvent.state === \"started\") {\n          var loopDuration = this._getLoopDuration();\n\n          var progress = (ticks - lastEvent.time) % loopDuration;\n          return progress / loopDuration;\n        } else {\n          return 0;\n        }\n      } else {\n        return 0;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ToneEvent.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.cancel();\n\n    this._state.dispose();\n\n    return this;\n  };\n\n  return ToneEvent;\n}(ToneWithContext);\n\nexport { ToneEvent };","import { __extends } from \"tslib\";\nimport { ToneEvent } from \"./ToneEvent\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Loop creates a looped callback at the\n * specified interval. The callback can be\n * started, stopped and scheduled along\n * the Transport's timeline.\n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note.\n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\n\nvar Loop =\n/** @class */\nfunction (_super) {\n  __extends(Loop, _super);\n\n  function Loop() {\n    var _this = _super.call(this, optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"])) || this;\n\n    _this.name = \"Loop\";\n    var options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n    _this._event = new ToneEvent({\n      context: _this.context,\n      callback: _this._tick.bind(_this),\n      loop: true,\n      loopEnd: options.interval,\n      playbackRate: options.playbackRate,\n      probability: options.probability\n    });\n    _this.callback = options.callback; // set the iterations\n\n    _this.iterations = options.iterations;\n    return _this;\n  }\n\n  Loop.getDefaults = function () {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      interval: \"4n\",\n      callback: noOp,\n      playbackRate: 1,\n      iterations: Infinity,\n      probability: 1,\n      mute: false,\n      humanize: false\n    });\n  };\n  /**\n   * Start the loop at the specified time along the Transport's timeline.\n   * @param  time  When to start the Loop.\n   */\n\n\n  Loop.prototype.start = function (time) {\n    this._event.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the loop at the given time.\n   * @param  time  When to stop the Loop.\n   */\n\n\n  Loop.prototype.stop = function (time) {\n    this._event.stop(time);\n\n    return this;\n  };\n  /**\n   * Cancel all scheduled events greater than or equal to the given time\n   * @param  time  The time after which events will be cancel.\n   */\n\n\n  Loop.prototype.cancel = function (time) {\n    this._event.cancel(time);\n\n    return this;\n  };\n  /**\n   * Internal function called when the notes should be called\n   * @param time  The time the event occurs\n   */\n\n\n  Loop.prototype._tick = function (time) {\n    this.callback(time);\n  };\n\n  Object.defineProperty(Loop.prototype, \"state\", {\n    /**\n     * The state of the Loop, either started or stopped.\n     */\n    get: function () {\n      return this._event.state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"progress\", {\n    /**\n     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.\n     */\n    get: function () {\n      return this._event.progress;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"interval\", {\n    /**\n     * The time between successive callbacks.\n     * @example\n     * const loop = new Tone.Loop();\n     * loop.interval = \"8n\"; // loop every 8n\n     */\n    get: function () {\n      return this._event.loopEnd;\n    },\n    set: function (interval) {\n      this._event.loopEnd = interval;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the loop. The normal playback rate is 1 (no change).\n     * A `playbackRate` of 2 would be twice as fast.\n     */\n    get: function () {\n      return this._event.playbackRate;\n    },\n    set: function (rate) {\n      this._event.playbackRate = rate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"humanize\", {\n    /**\n     * Random variation +/-0.01s to the scheduled time.\n     * Or give it a time value which it will randomize by.\n     */\n    get: function () {\n      return this._event.humanize;\n    },\n    set: function (variation) {\n      this._event.humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"probability\", {\n    /**\n     * The probably of the callback being invoked.\n     */\n    get: function () {\n      return this._event.probability;\n    },\n    set: function (prob) {\n      this._event.probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"mute\", {\n    /**\n     * Muting the Loop means that no callbacks are invoked.\n     */\n    get: function () {\n      return this._event.mute;\n    },\n    set: function (mute) {\n      this._event.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Loop.prototype, \"iterations\", {\n    /**\n     * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n     */\n    get: function () {\n      if (this._event.loop === true) {\n        return Infinity;\n      } else {\n        return this._event.loop;\n      }\n    },\n    set: function (iters) {\n      if (iters === Infinity) {\n        this._event.loop = true;\n      } else {\n        this._event.loop = iters;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Loop.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._event.dispose();\n\n    return this;\n  };\n\n  return Loop;\n}(ToneWithContext);\n\nexport { Loop };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * @category Event\n */\n\nvar Part =\n/** @class */\nfunction (_super) {\n  __extends(Part, _super);\n\n  function Part() {\n    var _this = _super.call(this, optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"])) || this;\n\n    _this.name = \"Part\";\n    /**\n     * Tracks the scheduled events\n     */\n\n    _this._state = new StateTimeline(\"stopped\");\n    /**\n     * The events that belong to this part\n     */\n\n    _this._events = new Set();\n    var options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]); // make sure things are assigned in the right order\n\n    _this._state.increasing = true; // add the events\n\n    options.events.forEach(function (event) {\n      if (isArray(event)) {\n        _this.add(event[0], event[1]);\n      } else {\n        _this.add(event);\n      }\n    });\n    return _this;\n  }\n\n  Part.getDefaults = function () {\n    return Object.assign(ToneEvent.getDefaults(), {\n      events: []\n    });\n  };\n  /**\n   * Start the part at the given time.\n   * @param  time    When to start the part.\n   * @param  offset  The offset from the start of the part to begin playing at.\n   */\n\n\n  Part.prototype.start = function (time, offset) {\n    var _this = this;\n\n    var ticks = this.toTicks(time);\n\n    if (this._state.getValueAtTime(ticks) !== \"started\") {\n      offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n\n      if (this._loop) {\n        offset = defaultArg(offset, this._loopStart);\n      } else {\n        offset = defaultArg(offset, 0);\n      }\n\n      var computedOffset_1 = this.toTicks(offset);\n\n      this._state.add({\n        id: -1,\n        offset: computedOffset_1,\n        state: \"started\",\n        time: ticks\n      });\n\n      this._forEach(function (event) {\n        _this._startNote(event, ticks, computedOffset_1);\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Start the event in the given event at the correct time given\n   * the ticks and offset and looping.\n   * @param  event\n   * @param  ticks\n   * @param  offset\n   */\n\n\n  Part.prototype._startNote = function (event, ticks, offset) {\n    ticks -= offset;\n\n    if (this._loop) {\n      if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n        if (event.startOffset < offset) {\n          // start it on the next loop\n          ticks += this._getLoopDuration();\n        }\n\n        event.start(new TicksClass(this.context, ticks));\n      } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n        event.loop = false;\n        event.start(new TicksClass(this.context, ticks));\n      }\n    } else if (event.startOffset >= offset) {\n      event.start(new TicksClass(this.context, ticks));\n    }\n  };\n\n  Object.defineProperty(Part.prototype, \"startOffset\", {\n    get: function () {\n      return this._startOffset;\n    },\n    set: function (offset) {\n      var _this = this;\n\n      this._startOffset = offset;\n\n      this._forEach(function (event) {\n        event.startOffset += _this._startOffset;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Stop the part at the given time.\n   * @param  time  When to stop the part.\n   */\n\n  Part.prototype.stop = function (time) {\n    var ticks = this.toTicks(time);\n\n    this._state.cancel(ticks);\n\n    this._state.setStateAtTime(\"stopped\", ticks);\n\n    this._forEach(function (event) {\n      event.stop(time);\n    });\n\n    return this;\n  };\n  /**\n   * Get/Set an Event's value at the given time.\n   * If a value is passed in and no event exists at\n   * the given time, one will be created with that value.\n   * If two events are at the same time, the first one will\n   * be returned.\n   * @example\n   * const part = new Tone.Part();\n   * part.at(\"1m\"); // returns the part at the first measure\n   * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n   * // if an event didn't exist at that time, it will be created.\n   * @param time The time of the event to get or set.\n   * @param value If a value is passed in, the value of the event at the given time will be set to it.\n   */\n\n\n  Part.prototype.at = function (time, value) {\n    var timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n    var tickTime = new TicksClass(this.context, 1).toSeconds();\n\n    var iterator = this._events.values();\n\n    var result = iterator.next();\n\n    while (!result.done) {\n      var event_1 = result.value;\n\n      if (Math.abs(timeInTicks - event_1.startOffset) < tickTime) {\n        if (isDefined(value)) {\n          event_1.value = value;\n        }\n\n        return event_1;\n      }\n\n      result = iterator.next();\n    } // if there was no event at that time, create one\n\n\n    if (isDefined(value)) {\n      this.add(time, value); // return the new event\n\n      return this.at(time);\n    } else {\n      return null;\n    }\n  };\n\n  Part.prototype.add = function (time, value) {\n    // extract the parameters\n    if (time instanceof Object && Reflect.has(time, \"time\")) {\n      value = time;\n      time = value.time;\n    }\n\n    var ticks = this.toTicks(time);\n    var event;\n\n    if (value instanceof ToneEvent) {\n      event = value;\n      event.callback = this._tick.bind(this);\n    } else {\n      event = new ToneEvent({\n        callback: this._tick.bind(this),\n        context: this.context,\n        value: value\n      });\n    } // the start offset\n\n\n    event.startOffset = ticks; // initialize the values\n\n    event.set({\n      humanize: this.humanize,\n      loop: this.loop,\n      loopEnd: this.loopEnd,\n      loopStart: this.loopStart,\n      playbackRate: this.playbackRate,\n      probability: this.probability\n    });\n\n    this._events.add(event); // start the note if it should be played right now\n\n\n    this._restartEvent(event);\n\n    return this;\n  };\n  /**\n   * Restart the given event\n   */\n\n\n  Part.prototype._restartEvent = function (event) {\n    var _this = this;\n\n    this._state.forEach(function (stateEvent) {\n      if (stateEvent.state === \"started\") {\n        _this._startNote(event, stateEvent.time, stateEvent.offset);\n      } else {\n        // stop the note\n        event.stop(new TicksClass(_this.context, stateEvent.time));\n      }\n    });\n  };\n\n  Part.prototype.remove = function (time, value) {\n    var _this = this; // extract the parameters\n\n\n    if (isObject(time) && time.hasOwnProperty(\"time\")) {\n      value = time;\n      time = value.time;\n    }\n\n    time = this.toTicks(time);\n\n    this._events.forEach(function (event) {\n      if (event.startOffset === time) {\n        if (isUndef(value) || isDefined(value) && event.value === value) {\n          _this._events.delete(event);\n\n          event.dispose();\n        }\n      }\n    });\n\n    return this;\n  };\n  /**\n   * Remove all of the notes from the group.\n   */\n\n\n  Part.prototype.clear = function () {\n    this._forEach(function (event) {\n      return event.dispose();\n    });\n\n    this._events.clear();\n\n    return this;\n  };\n  /**\n   * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n   * @param after The time after which to cancel the scheduled events.\n   */\n\n\n  Part.prototype.cancel = function (after) {\n    this._forEach(function (event) {\n      return event.cancel(after);\n    });\n\n    this._state.cancel(this.toTicks(after));\n\n    return this;\n  };\n  /**\n   * Iterate over all of the events\n   */\n\n\n  Part.prototype._forEach = function (callback) {\n    if (this._events) {\n      this._events.forEach(function (event) {\n        if (event instanceof Part) {\n          event._forEach(callback);\n        } else {\n          callback(event);\n        }\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Set the attribute of all of the events\n   * @param  attr  the attribute to set\n   * @param  value      The value to set it to\n   */\n\n\n  Part.prototype._setAll = function (attr, value) {\n    this._forEach(function (event) {\n      event[attr] = value;\n    });\n  };\n  /**\n   * Internal tick method\n   * @param  time  The time of the event in seconds\n   */\n\n\n  Part.prototype._tick = function (time, value) {\n    if (!this.mute) {\n      this.callback(time, value);\n    }\n  };\n  /**\n   * Determine if the event should be currently looping\n   * given the loop boundries of this Part.\n   * @param  event  The event to test\n   */\n\n\n  Part.prototype._testLoopBoundries = function (event) {\n    if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n      event.cancel(0);\n    } else if (event.state === \"stopped\") {\n      // reschedule it if it's stopped\n      this._restartEvent(event);\n    }\n  };\n\n  Object.defineProperty(Part.prototype, \"probability\", {\n    get: function () {\n      return this._probability;\n    },\n    set: function (prob) {\n      this._probability = prob;\n\n      this._setAll(\"probability\", prob);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"humanize\", {\n    get: function () {\n      return this._humanize;\n    },\n    set: function (variation) {\n      this._humanize = variation;\n\n      this._setAll(\"humanize\", variation);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loop\", {\n    /**\n     * If the part should loop or not\n     * between Part.loopStart and\n     * Part.loopEnd. If set to true,\n     * the part will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     * @example\n     * const part = new Tone.Part();\n     * // loop the part 8 times\n     * part.loop = 8;\n     */\n    get: function () {\n      return this._loop;\n    },\n    set: function (loop) {\n      var _this = this;\n\n      this._loop = loop;\n\n      this._forEach(function (event) {\n        event.loopStart = _this.loopStart;\n        event.loopEnd = _this.loopEnd;\n        event.loop = loop;\n\n        _this._testLoopBoundries(event);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loopEnd\", {\n    /**\n     * The loopEnd point determines when it will\n     * loop if Part.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopEnd).toSeconds();\n    },\n    set: function (loopEnd) {\n      var _this = this;\n\n      this._loopEnd = this.toTicks(loopEnd);\n\n      if (this._loop) {\n        this._forEach(function (event) {\n          event.loopEnd = loopEnd;\n\n          _this._testLoopBoundries(event);\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"loopStart\", {\n    /**\n     * The loopStart point determines when it will\n     * loop if Part.loop is true.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._loopStart).toSeconds();\n    },\n    set: function (loopStart) {\n      var _this = this;\n\n      this._loopStart = this.toTicks(loopStart);\n\n      if (this._loop) {\n        this._forEach(function (event) {\n          event.loopStart = _this.loopStart;\n\n          _this._testLoopBoundries(event);\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"playbackRate\", {\n    /**\n     * The playback rate of the part\n     */\n    get: function () {\n      return this._playbackRate;\n    },\n    set: function (rate) {\n      this._playbackRate = rate;\n\n      this._setAll(\"playbackRate\", rate);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Part.prototype, \"length\", {\n    /**\n     * The number of scheduled notes in the part.\n     */\n    get: function () {\n      return this._events.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Part.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.clear();\n    return this;\n  };\n\n  return Part;\n}(ToneEvent);\n\nexport { Part };","import { __generator, __values } from \"tslib\";\nimport { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n/**\n * Start at the first value and go up to the last\n */\n\nfunction upPatternGen(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index < values.length)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        index++;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Start at the last value and go down to 0\n */\n\n\nfunction downPatternGen(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = values.length - 1;\n        _a.label = 1;\n\n      case 1:\n        if (!(index >= 0)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        index--;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Infinitely yield the generator\n */\n\n\nfunction infiniteGen(values, gen) {\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        if (!true) return [3\n        /*break*/\n        , 2];\n        return [5\n        /*yield**/\n        , __values(gen(values))];\n\n      case 1:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 0];\n\n      case 2:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Make sure that the index is in the given range\n */\n\n\nfunction clampToArraySize(index, values) {\n  return clamp(index, 0, values.length - 1);\n}\n/**\n * Alternate between two generators\n */\n\n\nfunction alternatingGenerator(values, directionUp) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = directionUp ? 0 : values.length - 1;\n        _a.label = 1;\n\n      case 1:\n        if (!true) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        if (directionUp) {\n          index++;\n\n          if (index >= values.length - 1) {\n            directionUp = false;\n          }\n        } else {\n          index--;\n\n          if (index <= 0) {\n            directionUp = true;\n          }\n        }\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Starting from the bottom move up 2, down 1\n */\n\n\nfunction jumpUp(values) {\n  var index, stepIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = 0;\n        stepIndex = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index < values.length)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        stepIndex++;\n        index += stepIndex % 2 ? 2 : -1;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Starting from the top move down 2, up 1\n */\n\n\nfunction jumpDown(values) {\n  var index, stepIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = values.length - 1;\n        stepIndex = 0;\n        _a.label = 1;\n\n      case 1:\n        if (!(index >= 0)) return [3\n        /*break*/\n        , 3];\n        index = clampToArraySize(index, values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        stepIndex++;\n        index += stepIndex % 2 ? -2 : 1;\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Choose a random index each time\n */\n\n\nfunction randomGen(values) {\n  var randomIndex;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        if (!true) return [3\n        /*break*/\n        , 2];\n        randomIndex = Math.floor(Math.random() * values.length);\n        return [4\n        /*yield*/\n        , values[randomIndex]];\n\n      case 1:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 0];\n\n      case 2:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\n\n\nfunction randomOnce(values) {\n  var copy, i, randVal, index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        copy = [];\n\n        for (i = 0; i < values.length; i++) {\n          copy.push(i);\n        }\n\n        _a.label = 1;\n\n      case 1:\n        if (!(copy.length > 0)) return [3\n        /*break*/\n        , 3];\n        randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n        index = clampToArraySize(randVal[0], values);\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\n\n\nfunction randomWalk(values) {\n  var index;\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        index = Math.floor(Math.random() * values.length);\n        _a.label = 1;\n\n      case 1:\n        if (!true) return [3\n        /*break*/\n        , 3];\n\n        if (index === 0) {\n          index++; // at bottom of array, so force upward step\n        } else if (index === values.length - 1) {\n          index--; // at top of array, so force downward step\n        } else if (Math.random() < 0.5) {\n          // else choose random downward or upward step\n          index--;\n        } else {\n          index++;\n        }\n\n        return [4\n        /*yield*/\n        , values[index]];\n\n      case 2:\n        _a.sent();\n\n        return [3\n        /*break*/\n        , 1];\n\n      case 3:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\n\n\nexport function PatternGenerator(values, pattern, index) {\n  var _a;\n\n  if (pattern === void 0) {\n    pattern = \"up\";\n  }\n\n  if (index === void 0) {\n    index = 0;\n  }\n\n  return __generator(this, function (_b) {\n    switch (_b.label) {\n      case 0:\n        // safeguards\n        assert(values.length > 0, \"The array must have more than one value in it\");\n        _a = pattern;\n\n        switch (_a) {\n          case \"up\":\n            return [3\n            /*break*/\n            , 1];\n\n          case \"down\":\n            return [3\n            /*break*/\n            , 3];\n\n          case \"upDown\":\n            return [3\n            /*break*/\n            , 5];\n\n          case \"downUp\":\n            return [3\n            /*break*/\n            , 7];\n\n          case \"alternateUp\":\n            return [3\n            /*break*/\n            , 9];\n\n          case \"alternateDown\":\n            return [3\n            /*break*/\n            , 11];\n\n          case \"random\":\n            return [3\n            /*break*/\n            , 13];\n\n          case \"randomOnce\":\n            return [3\n            /*break*/\n            , 15];\n\n          case \"randomWalk\":\n            return [3\n            /*break*/\n            , 17];\n        }\n\n        return [3\n        /*break*/\n        , 19];\n\n      case 1:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, upPatternGen))];\n\n      case 2:\n        _b.sent();\n\n        _b.label = 3;\n\n      case 3:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, downPatternGen))];\n\n      case 4:\n        _b.sent();\n\n        _b.label = 5;\n\n      case 5:\n        return [5\n        /*yield**/\n        , __values(alternatingGenerator(values, true))];\n\n      case 6:\n        _b.sent();\n\n        _b.label = 7;\n\n      case 7:\n        return [5\n        /*yield**/\n        , __values(alternatingGenerator(values, false))];\n\n      case 8:\n        _b.sent();\n\n        _b.label = 9;\n\n      case 9:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, jumpUp))];\n\n      case 10:\n        _b.sent();\n\n        _b.label = 11;\n\n      case 11:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, jumpDown))];\n\n      case 12:\n        _b.sent();\n\n        _b.label = 13;\n\n      case 13:\n        return [5\n        /*yield**/\n        , __values(randomGen(values))];\n\n      case 14:\n        _b.sent();\n\n        _b.label = 15;\n\n      case 15:\n        return [5\n        /*yield**/\n        , __values(infiniteGen(values, randomOnce))];\n\n      case 16:\n        _b.sent();\n\n        _b.label = 17;\n\n      case 17:\n        return [5\n        /*yield**/\n        , __values(randomWalk(values))];\n\n      case 18:\n        _b.sent();\n\n        _b.label = 19;\n\n      case 19:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}","import { __extends } from \"tslib\";\nimport { Loop } from \"./Loop\";\nimport { PatternGenerator } from \"./PatternGenerator\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns.\n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\n\nvar Pattern =\n/** @class */\nfunction (_super) {\n  __extends(Pattern, _super);\n\n  function Pattern() {\n    var _this = _super.call(this, optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"])) || this;\n\n    _this.name = \"Pattern\";\n    var options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n    _this.callback = options.callback;\n    _this._values = options.values;\n    _this._pattern = PatternGenerator(options.values, options.pattern);\n    _this._type = options.pattern;\n    return _this;\n  }\n\n  Pattern.getDefaults = function () {\n    return Object.assign(Loop.getDefaults(), {\n      pattern: \"up\",\n      values: [],\n      callback: noOp\n    });\n  };\n  /**\n   * Internal function called when the notes should be called\n   */\n\n\n  Pattern.prototype._tick = function (time) {\n    var value = this._pattern.next();\n\n    this._value = value.value;\n    this.callback(time, this._value);\n  };\n\n  Object.defineProperty(Pattern.prototype, \"values\", {\n    /**\n     * The array of events.\n     */\n    get: function () {\n      return this._values;\n    },\n    set: function (val) {\n      this._values = val; // reset the pattern\n\n      this.pattern = this._type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"value\", {\n    /**\n     * The current value of the pattern.\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"pattern\", {\n    /**\n     * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (pattern) {\n      this._type = pattern;\n      this._pattern = PatternGenerator(this._values, this._type);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Pattern;\n}(Loop);\n\nexport { Pattern };","import { __extends } from \"tslib\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\n\nvar Sequence =\n/** @class */\nfunction (_super) {\n  __extends(Sequence, _super);\n\n  function Sequence() {\n    var _this = _super.call(this, optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"])) || this;\n\n    _this.name = \"Sequence\";\n    /**\n     * The object responsible for scheduling all of the events\n     */\n\n    _this._part = new Part({\n      callback: _this._seqCallback.bind(_this),\n      context: _this.context\n    });\n    /**\n     * private reference to all of the sequence proxies\n     */\n\n    _this._events = [];\n    /**\n     * The proxied array\n     */\n\n    _this._eventsArray = [];\n    var options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n    _this._subdivision = _this.toTicks(options.subdivision);\n    _this.events = options.events; // set all of the values\n\n    _this.loop = options.loop;\n    _this.loopStart = options.loopStart;\n    _this.loopEnd = options.loopEnd;\n    _this.playbackRate = options.playbackRate;\n    _this.probability = options.probability;\n    _this.humanize = options.humanize;\n    _this.mute = options.mute;\n    _this.playbackRate = options.playbackRate;\n    return _this;\n  }\n\n  Sequence.getDefaults = function () {\n    return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n      events: [],\n      loop: true,\n      loopEnd: 0,\n      loopStart: 0,\n      subdivision: \"8n\"\n    });\n  };\n  /**\n   * The internal callback for when an event is invoked\n   */\n\n\n  Sequence.prototype._seqCallback = function (time, value) {\n    if (value !== null) {\n      this.callback(time, value);\n    }\n  };\n\n  Object.defineProperty(Sequence.prototype, \"events\", {\n    /**\n     * The sequence\n     */\n    get: function () {\n      return this._events;\n    },\n    set: function (s) {\n      this.clear();\n      this._eventsArray = s;\n      this._events = this._createSequence(this._eventsArray);\n\n      this._eventsUpdated();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the part at the given time.\n   * @param  time    When to start the part.\n   * @param  offset  The offset index to start at\n   */\n\n  Sequence.prototype.start = function (time, offset) {\n    this._part.start(time, offset ? this._indexTime(offset) : offset);\n\n    return this;\n  };\n  /**\n   * Stop the part at the given time.\n   * @param  time  When to stop the part.\n   */\n\n\n  Sequence.prototype.stop = function (time) {\n    this._part.stop(time);\n\n    return this;\n  };\n\n  Object.defineProperty(Sequence.prototype, \"subdivision\", {\n    /**\n     * The subdivision of the sequence. This can only be\n     * set in the constructor. The subdivision is the\n     * interval between successive steps.\n     */\n    get: function () {\n      return new TicksClass(this.context, this._subdivision).toSeconds();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Create a sequence proxy which can be monitored to create subsequences\n   */\n\n  Sequence.prototype._createSequence = function (array) {\n    var _this = this;\n\n    return new Proxy(array, {\n      get: function (target, property) {\n        // property is index in this case\n        return target[property];\n      },\n      set: function (target, property, value) {\n        if (isString(property) && isFinite(parseInt(property, 10))) {\n          if (isArray(value)) {\n            target[property] = _this._createSequence(value);\n          } else {\n            target[property] = value;\n          }\n        } else {\n          target[property] = value;\n        }\n\n        _this._eventsUpdated(); // return true to accept the changes\n\n\n        return true;\n      }\n    });\n  };\n  /**\n   * When the sequence has changed, all of the events need to be recreated\n   */\n\n\n  Sequence.prototype._eventsUpdated = function () {\n    this._part.clear();\n\n    this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset); // update the loopEnd\n\n\n    this.loopEnd = this.loopEnd;\n  };\n  /**\n   * reschedule all of the events that need to be rescheduled\n   */\n\n\n  Sequence.prototype._rescheduleSequence = function (sequence, subdivision, startOffset) {\n    var _this = this;\n\n    sequence.forEach(function (value, index) {\n      var eventOffset = index * subdivision + startOffset;\n\n      if (isArray(value)) {\n        _this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n      } else {\n        var startTime = new TicksClass(_this.context, eventOffset, \"i\").toSeconds();\n\n        _this._part.add(startTime, value);\n      }\n    });\n  };\n  /**\n   * Get the time of the index given the Sequence's subdivision\n   * @param  index\n   * @return The time of that index\n   */\n\n\n  Sequence.prototype._indexTime = function (index) {\n    return new TicksClass(this.context, index * this._subdivision + this.startOffset).toSeconds();\n  };\n  /**\n   * Clear all of the events\n   */\n\n\n  Sequence.prototype.clear = function () {\n    this._part.clear();\n\n    return this;\n  };\n\n  Sequence.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._part.dispose();\n\n    return this;\n  };\n\n  Object.defineProperty(Sequence.prototype, \"loop\", {\n    //-------------------------------------\n    // PROXY CALLS\n    //-------------------------------------\n    get: function () {\n      return this._part.loop;\n    },\n    set: function (l) {\n      this._part.loop = l;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"loopStart\", {\n    /**\n     * The index at which the sequence should start looping\n     */\n    get: function () {\n      return this._loopStart;\n    },\n    set: function (index) {\n      this._loopStart = index;\n      this._part.loopStart = this._indexTime(index);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"loopEnd\", {\n    /**\n     * The index at which the sequence should end looping\n     */\n    get: function () {\n      return this._loopEnd;\n    },\n    set: function (index) {\n      this._loopEnd = index;\n\n      if (index === 0) {\n        this._part.loopEnd = this._indexTime(this._eventsArray.length);\n      } else {\n        this._part.loopEnd = this._indexTime(index);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"startOffset\", {\n    get: function () {\n      return this._part.startOffset;\n    },\n    set: function (start) {\n      this._part.startOffset = start;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"playbackRate\", {\n    get: function () {\n      return this._part.playbackRate;\n    },\n    set: function (rate) {\n      this._part.playbackRate = rate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"probability\", {\n    get: function () {\n      return this._part.probability;\n    },\n    set: function (prob) {\n      this._part.probability = prob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"progress\", {\n    get: function () {\n      return this._part.progress;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"humanize\", {\n    get: function () {\n      return this._part.humanize;\n    },\n    set: function (variation) {\n      this._part.humanize = variation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sequence.prototype, \"length\", {\n    /**\n     * The number of scheduled events\n     */\n    get: function () {\n      return this._part.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Sequence;\n}(ToneEvent);\n\nexport { Sequence };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\n\nvar CrossFade =\n/** @class */\nfunction (_super) {\n  __extends(CrossFade, _super);\n\n  function CrossFade() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]))) || this;\n\n    _this.name = \"CrossFade\";\n    /**\n     * The crossfading is done by a StereoPannerNode\n     */\n\n    _this._panner = _this.context.createStereoPanner();\n    /**\n     * Split the output of the panner node into two values used to control the gains.\n     */\n\n    _this._split = _this.context.createChannelSplitter(2);\n    /**\n     * Convert the fade value into an audio range value so it can be connected\n     * to the panner.pan AudioParam\n     */\n\n    _this._g2a = new GainToAudio({\n      context: _this.context\n    });\n    /**\n     * The input which is at full level when fade = 0\n     */\n\n    _this.a = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The input which is at full level when fade = 1\n     */\n\n    _this.b = new Gain({\n      context: _this.context,\n      gain: 0\n    });\n    /**\n     * The output is a mix between `a` and `b` at the ratio of `fade`\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._internalChannels = [_this.a, _this.b];\n    var options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n    _this.fade = new Signal({\n      context: _this.context,\n      units: \"normalRange\",\n      value: options.fade\n    });\n    readOnly(_this, \"fade\");\n\n    _this.context.getConstant(1).connect(_this._panner);\n\n    _this._panner.connect(_this._split); // this is necessary for standardized-audio-context\n    // doesn't make any difference for the native AudioContext\n    // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\n\n    _this._panner.channelCount = 1;\n    _this._panner.channelCountMode = \"explicit\";\n    connect(_this._split, _this.a.gain, 0);\n    connect(_this._split, _this.b.gain, 1);\n\n    _this.fade.chain(_this._g2a, _this._panner.pan);\n\n    _this.a.connect(_this.output);\n\n    _this.b.connect(_this.output);\n\n    return _this;\n  }\n\n  CrossFade.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      fade: 0.5\n    });\n  };\n\n  CrossFade.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.a.dispose();\n    this.b.dispose();\n    this.output.dispose();\n    this.fade.dispose();\n\n    this._g2a.dispose();\n\n    this._panner.disconnect();\n\n    this._split.disconnect();\n\n    return this;\n  };\n\n  return CrossFade;\n}(ToneAudioNode);\n\nexport { CrossFade };","import { __extends } from \"tslib\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\n\nvar Effect =\n/** @class */\nfunction (_super) {\n  __extends(Effect, _super);\n\n  function Effect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"Effect\";\n    /**\n     * the drywet knob to control the amount of effect\n     */\n\n    _this._dryWet = new CrossFade({\n      context: _this.context\n    });\n    /**\n     * The wet control is how much of the effected\n     * will pass through to the output. 1 = 100% effected\n     * signal, 0 = 100% dry signal.\n     */\n\n    _this.wet = _this._dryWet.fade;\n    /**\n     * connect the effectSend to the input of hte effect\n     */\n\n    _this.effectSend = new Gain({\n      context: _this.context\n    });\n    /**\n     * connect the output of the effect to the effectReturn\n     */\n\n    _this.effectReturn = new Gain({\n      context: _this.context\n    });\n    /**\n     * The effect input node\n     */\n\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * The effect output\n     */\n\n    _this.output = _this._dryWet; // connections\n\n    _this.input.fan(_this._dryWet.a, _this.effectSend);\n\n    _this.effectReturn.connect(_this._dryWet.b);\n\n    _this.wet.setValueAtTime(options.wet, 0);\n\n    _this._internalChannels = [_this.effectReturn, _this.effectSend];\n    readOnly(_this, \"wet\");\n    return _this;\n  }\n\n  Effect.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  };\n  /**\n   * chains the effect in between the effectSend and effectReturn\n   */\n\n\n  Effect.prototype.connectEffect = function (effect) {\n    // add it to the internal channels\n    this._internalChannels.push(effect);\n\n    this.effectSend.chain(effect, this.effectReturn);\n    return this;\n  };\n\n  Effect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dryWet.dispose();\n\n    this.effectSend.dispose();\n    this.effectReturn.dispose();\n    this.wet.dispose();\n    return this;\n  };\n\n  return Effect;\n}(ToneAudioNode);\n\nexport { Effect };","import { __extends } from \"tslib\";\nimport { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\n\nvar LFOEffect =\n/** @class */\nfunction (_super) {\n  __extends(LFOEffect, _super);\n\n  function LFOEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"LFOEffect\";\n    _this._lfo = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      amplitude: options.depth\n    });\n    _this.depth = _this._lfo.amplitude;\n    _this.frequency = _this._lfo.frequency;\n    _this.type = options.type;\n    readOnly(_this, [\"frequency\", \"depth\"]);\n    return _this;\n  }\n\n  LFOEffect.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n  };\n  /**\n   * Start the effect.\n   */\n\n\n  LFOEffect.prototype.start = function (time) {\n    this._lfo.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the lfo\n   */\n\n\n  LFOEffect.prototype.stop = function (time) {\n    this._lfo.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n\n\n  LFOEffect.prototype.sync = function () {\n    this._lfo.sync();\n\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport.\n   */\n\n\n  LFOEffect.prototype.unsync = function () {\n    this._lfo.unsync();\n\n    return this;\n  };\n\n  Object.defineProperty(LFOEffect.prototype, \"type\", {\n    /**\n     * The type of the LFO's oscillator: See [[Oscillator.type]]\n     * @example\n     * const autoFilter = new Tone.AutoFilter().start().toDestination();\n     * const noise = new Tone.Noise().start().connect(autoFilter);\n     * autoFilter.type = \"square\";\n     */\n    get: function () {\n      return this._lfo.type;\n    },\n    set: function (type) {\n      this._lfo.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LFOEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfo.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return LFOEffect;\n}(Effect);\n\nexport { LFOEffect };","import { __extends } from \"tslib\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate\n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\n\nvar AutoFilter =\n/** @class */\nfunction (_super) {\n  __extends(AutoFilter, _super);\n\n  function AutoFilter() {\n    var _this = _super.call(this, optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"])) || this;\n\n    _this.name = \"AutoFilter\";\n    var options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    })); // connections\n\n    _this.connectEffect(_this.filter);\n\n    _this._lfo.connect(_this.filter.frequency);\n\n    _this.octaves = options.octaves;\n    _this.baseFrequency = options.baseFrequency;\n    return _this;\n  }\n\n  AutoFilter.getDefaults = function () {\n    return Object.assign(LFOEffect.getDefaults(), {\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n  };\n\n  Object.defineProperty(AutoFilter.prototype, \"baseFrequency\", {\n    /**\n     * The minimum value of the filter's cutoff frequency.\n     */\n    get: function () {\n      return this._lfo.min;\n    },\n    set: function (freq) {\n      this._lfo.min = this.toFrequency(freq); // and set the max\n\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoFilter.prototype, \"octaves\", {\n    /**\n     * The maximum value of the filter's cutoff frequency.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (oct) {\n      this._octaves = oct;\n      this._lfo.max = this._lfo.min * Math.pow(2, oct);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AutoFilter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.filter.dispose();\n    return this;\n  };\n\n  return AutoFilter;\n}(LFOEffect);\n\nexport { AutoFilter };","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @offline 0.5 2\n * @example\n * // move the input signal from right to left\n * const panner = new Tone.Panner(1).toDestination();\n * panner.pan.rampTo(-1, 0.5);\n * const osc = new Tone.Oscillator(100).connect(panner).start();\n * @category Component\n */\n\nvar Panner =\n/** @class */\nfunction (_super) {\n  __extends(Panner, _super);\n\n  function Panner() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]))) || this;\n\n    _this.name = \"Panner\";\n    /**\n     * the panner node\n     */\n\n    _this._panner = _this.context.createStereoPanner();\n    _this.input = _this._panner;\n    _this.output = _this._panner;\n    var options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n    _this.pan = new Param({\n      context: _this.context,\n      param: _this._panner.pan,\n      value: options.pan,\n      minValue: -1,\n      maxValue: 1\n    }); // this is necessary for standardized-audio-context\n    // doesn't make any difference for the native AudioContext\n    // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\n    _this._panner.channelCount = options.channelCount;\n    _this._panner.channelCountMode = \"explicit\"; // initial value\n\n    readOnly(_this, \"pan\");\n    return _this;\n  }\n\n  Panner.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      channelCount: 1\n    });\n  };\n\n  Panner.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.disconnect();\n\n    this.pan.dispose();\n    return this;\n  };\n\n  return Panner;\n}(ToneAudioNode);\n\nexport { Panner };","import { __extends } from \"tslib\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\n\nvar AutoPanner =\n/** @class */\nfunction (_super) {\n  __extends(AutoPanner, _super);\n\n  function AutoPanner() {\n    var _this = _super.call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"AutoPanner\";\n    var options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n    _this._panner = new Panner({\n      context: _this.context,\n      channelCount: options.channelCount\n    }); // connections\n\n    _this.connectEffect(_this._panner);\n\n    _this._lfo.connect(_this._panner.pan);\n\n    _this._lfo.min = -1;\n    _this._lfo.max = 1;\n    return _this;\n  }\n\n  AutoPanner.getDefaults = function () {\n    return Object.assign(LFOEffect.getDefaults(), {\n      channelCount: 1\n    });\n  };\n\n  AutoPanner.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.dispose();\n\n    return this;\n  };\n\n  return AutoPanner;\n}(LFOEffect);\n\nexport { AutoPanner };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\n\nvar Follower =\n/** @class */\nfunction (_super) {\n  __extends(Follower, _super);\n\n  function Follower() {\n    var _this = _super.call(this, optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"])) || this;\n\n    _this.name = \"Follower\";\n    var options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n    _this._abs = _this.input = new Abs({\n      context: _this.context\n    });\n    _this._lowpass = _this.output = new OnePoleFilter({\n      context: _this.context,\n      frequency: 1 / _this.toSeconds(options.smoothing),\n      type: \"lowpass\"\n    });\n\n    _this._abs.connect(_this._lowpass);\n\n    _this._smoothing = options.smoothing;\n    return _this;\n  }\n\n  Follower.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.05\n    });\n  };\n\n  Object.defineProperty(Follower.prototype, \"smoothing\", {\n    /**\n     * The amount of time it takes a value change to arrive at the updated value.\n     */\n    get: function () {\n      return this._smoothing;\n    },\n    set: function (smoothing) {\n      this._smoothing = smoothing;\n      this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Follower.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._abs.dispose();\n\n    this._lowpass.dispose();\n\n    return this;\n  };\n\n  return Follower;\n}(ToneAudioNode);\n\nexport { Follower };","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]].\n * The frequency of the filter, follows the input amplitude curve.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\n\nvar AutoWah =\n/** @class */\nfunction (_super) {\n  __extends(AutoWah, _super);\n\n  function AutoWah() {\n    var _this = _super.call(this, optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"])) || this;\n\n    _this.name = \"AutoWah\";\n    var options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n    _this._follower = new Follower({\n      context: _this.context,\n      smoothing: options.follower\n    });\n    _this._sweepRange = new ScaleExp({\n      context: _this.context,\n      min: 0,\n      max: 1,\n      exponent: 0.5\n    });\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._octaves = options.octaves;\n    _this._inputBoost = new Gain({\n      context: _this.context\n    });\n    _this._bandpass = new Filter({\n      context: _this.context,\n      rolloff: -48,\n      frequency: 0,\n      Q: options.Q\n    });\n    _this._peaking = new Filter({\n      context: _this.context,\n      type: \"peaking\"\n    });\n    _this._peaking.gain.value = options.gain;\n    _this.gain = _this._peaking.gain;\n    _this.Q = _this._bandpass.Q; // the control signal path\n\n    _this.effectSend.chain(_this._inputBoost, _this._follower, _this._sweepRange);\n\n    _this._sweepRange.connect(_this._bandpass.frequency);\n\n    _this._sweepRange.connect(_this._peaking.frequency); // the filtered path\n\n\n    _this.effectSend.chain(_this._bandpass, _this._peaking, _this.effectReturn); // set the initial value\n\n\n    _this._setSweepRange();\n\n    _this.sensitivity = options.sensitivity;\n    readOnly(_this, [\"gain\", \"Q\"]);\n    return _this;\n  }\n\n  AutoWah.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: 0.2\n    });\n  };\n\n  Object.defineProperty(AutoWah.prototype, \"octaves\", {\n    /**\n     * The number of octaves that the filter will sweep above the baseFrequency.\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      this._octaves = octaves;\n\n      this._setSweepRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"follower\", {\n    /**\n     * The follower's smoothing time\n     */\n    get: function () {\n      return this._follower.smoothing;\n    },\n    set: function (follower) {\n      this._follower.smoothing = follower;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"baseFrequency\", {\n    /**\n     * The base frequency from which the sweep will start from.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (baseFreq) {\n      this._baseFrequency = this.toFrequency(baseFreq);\n\n      this._setSweepRange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoWah.prototype, \"sensitivity\", {\n    /**\n     * The sensitivity to control how responsive to the input signal the filter is.\n     */\n    get: function () {\n      return gainToDb(1 / this._inputBoost.gain.value);\n    },\n    set: function (sensitivity) {\n      this._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * sets the sweep range of the scaler\n   */\n\n  AutoWah.prototype._setSweepRange = function () {\n    this._sweepRange.min = this._baseFrequency;\n    this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n  };\n\n  AutoWah.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._follower.dispose();\n\n    this._sweepRange.dispose();\n\n    this._bandpass.dispose();\n\n    this._peaking.dispose();\n\n    this._inputBoost.dispose();\n\n    return this;\n  };\n\n  return AutoWah;\n}(Effect);\n\nexport { AutoWah };","import { __extends } from \"tslib\";\nimport { ToneAudioWorklet } from \"../core/context/ToneAudioWorklet\";\nimport { Effect } from \"./Effect\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n *\n * @category Effect\n */\n\nvar BitCrusher =\n/** @class */\nfunction (_super) {\n  __extends(BitCrusher, _super);\n\n  function BitCrusher() {\n    var _this = _super.call(this, optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"])) || this;\n\n    _this.name = \"BitCrusher\";\n    var options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n    _this._bitCrusherWorklet = new BitCrusherWorklet({\n      context: _this.context,\n      bits: options.bits\n    }); // connect it up\n\n    _this.connectEffect(_this._bitCrusherWorklet);\n\n    _this.bits = _this._bitCrusherWorklet.bits;\n    return _this;\n  }\n\n  BitCrusher.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      bits: 4,\n      frequencyReduction: 0.5\n    });\n  };\n\n  BitCrusher.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._bitCrusherWorklet.dispose();\n\n    return this;\n  };\n\n  return BitCrusher;\n}(Effect);\n\nexport { BitCrusher };\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\n\nvar BitCrusherWorklet =\n/** @class */\nfunction (_super) {\n  __extends(BitCrusherWorklet, _super);\n\n  function BitCrusherWorklet() {\n    var _this = _super.call(this, optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments)) || this;\n\n    _this.name = \"BitCrusherWorklet\";\n    _this.workletOptions = {\n      numberOfInputs: 1,\n      numberOfOutputs: 1\n    };\n    var options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    });\n\n    var dummyGain = _this.context.createGain();\n\n    _this.bits = new Param({\n      context: _this.context,\n      value: options.bits,\n      units: \"positive\",\n      minValue: 1,\n      maxValue: 16,\n      param: dummyGain.gain,\n      swappable: true\n    });\n    return _this;\n  }\n\n  BitCrusherWorklet.getDefaults = function () {\n    return Object.assign(ToneAudioWorklet.getDefaults(), {\n      bits: 12\n    });\n  };\n\n  BitCrusherWorklet.prototype._audioWorkletName = function () {\n    return \"bit-crusher\";\n  };\n\n  BitCrusherWorklet.prototype._audioWorklet = function () {\n    return (\n      /* javascript */\n      \" \\n\\t\\tregisterProcessor(\\\"\" + this._audioWorkletName() + \"\\\", class extends AudioWorkletProcessor {\\n\\t\\t\\tstatic get parameterDescriptors () {\\n\\t\\t\\t\\treturn [{\\n\\t\\t\\t\\t\\tname: 'bits',\\n\\t\\t\\t\\t\\tdefaultValue: 12,\\n\\t\\t\\t\\t\\tminValue: 1,\\n\\t\\t\\t\\t\\tmaxValue: 16\\n\\t\\t\\t\\t}];\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tprocess (inputs, outputs, parameters) {\\n\\t\\t\\t\\tconst input = inputs[0];\\n\\t\\t\\t\\tconst output = outputs[0];\\n\\t\\t\\t\\tif (input && output && input.length === output.length) {\\n\\t\\t\\t\\t\\tconst bits = parameters.bits;\\n\\t\\t\\t\\t\\tfor (let channelNum = 0; channelNum < input.length; channelNum++) {\\n\\t\\t\\t\\t\\t\\tconst inputChannel = input[channelNum];\\n\\t\\t\\t\\t\\t\\tfor (let index = 0; index < inputChannel.length; index++) {\\n\\t\\t\\t\\t\\t\\t\\tconst value = inputChannel[index];\\n\\t\\t\\t\\t\\t\\t\\tconst step = bits.length > 1 ? Math.pow(0.5, bits[index]) : Math.pow(0.5, bits[0]);\\n\\t\\t\\t\\t\\t\\t\\tconst val = step * Math.floor(value / step + 0.5);\\n\\t\\t\\t\\t\\t\\t\\toutput[channelNum][index] = val;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\"\n    );\n  };\n\n  BitCrusherWorklet.prototype.onReady = function (node) {\n    connectSeries(this.input, node, this.output); // @ts-ignore\n\n    var bits = node.parameters.get(\"bits\");\n    this.bits.setParam(bits);\n  };\n\n  BitCrusherWorklet.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.bits.dispose();\n    return this;\n  };\n\n  return BitCrusherWorklet;\n}(ToneAudioWorklet);","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\n/**\n * Chebyshev is a waveshaper which is good\n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones,\n * and order = 1 is no change.\n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\n\nvar Chebyshev =\n/** @class */\nfunction (_super) {\n  __extends(Chebyshev, _super);\n\n  function Chebyshev() {\n    var _this = _super.call(this, optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"])) || this;\n\n    _this.name = \"Chebyshev\";\n    var options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n    _this._shaper = new WaveShaper({\n      context: _this.context,\n      length: 4096\n    });\n    _this._order = options.order;\n\n    _this.connectEffect(_this._shaper);\n\n    _this.order = options.order;\n    _this.oversample = options.oversample;\n    return _this;\n  }\n\n  Chebyshev.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      order: 1,\n      oversample: \"none\"\n    });\n  };\n  /**\n   * get the coefficient for that degree\n   * @param  x the x value\n   * @param  degree\n   * @param  memo memoize the computed value. this speeds up computation greatly.\n   */\n\n\n  Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n    if (memo.has(degree)) {\n      return memo.get(degree);\n    } else if (degree === 0) {\n      memo.set(degree, 0);\n    } else if (degree === 1) {\n      memo.set(degree, x);\n    } else {\n      memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n    }\n\n    return memo.get(degree);\n  };\n\n  Object.defineProperty(Chebyshev.prototype, \"order\", {\n    /**\n     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming\n     * signal through a Tone.WaveShaper. The equations are in the form:\n     * ```\n     * order 2: 2x^2 + 1\n     * order 3: 4x^3 + 3x\n     * ```\n     * @min 1\n     * @max 100\n     */\n    get: function () {\n      return this._order;\n    },\n    set: function (order) {\n      var _this = this;\n\n      this._order = order;\n\n      this._shaper.setMap(function (x) {\n        return _this._getCoefficient(x, order, new Map());\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chebyshev.prototype, \"oversample\", {\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Chebyshev.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.dispose();\n\n    return this;\n  };\n\n  return Chebyshev;\n}(Effect);\n\nexport { Chebyshev };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\n\nvar Split =\n/** @class */\nfunction (_super) {\n  __extends(Split, _super);\n\n  function Split() {\n    var _this = _super.call(this, optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"])) || this;\n\n    _this.name = \"Split\";\n    var options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n    _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);\n    _this._internalChannels = [_this._splitter];\n    return _this;\n  }\n\n  Split.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  };\n\n  Split.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._splitter.disconnect();\n\n    return this;\n  };\n\n  return Split;\n}(ToneAudioNode);\n\nexport { Split };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\n\nvar Merge =\n/** @class */\nfunction (_super) {\n  __extends(Merge, _super);\n\n  function Merge() {\n    var _this = _super.call(this, optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"])) || this;\n\n    _this.name = \"Merge\";\n    var options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n    _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);\n    return _this;\n  }\n\n  Merge.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  };\n\n  Merge.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._merger.disconnect();\n\n    return this;\n  };\n\n  return Merge;\n}(ToneAudioNode);\n\nexport { Merge };","import { __extends, __read, __spread } from \"tslib\";\nimport { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\n\nvar StereoEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoEffect, _super);\n\n  function StereoEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"StereoEffect\";\n    _this.input = new Gain({\n      context: _this.context\n    }); // force mono sources to be stereo\n\n    _this.input.channelCount = 2;\n    _this.input.channelCountMode = \"explicit\";\n    _this._dryWet = _this.output = new CrossFade({\n      context: _this.context,\n      fade: options.wet\n    });\n    _this.wet = _this._dryWet.fade;\n    _this._split = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._merge = new Merge({\n      context: _this.context,\n      channels: 2\n    }); // connections\n\n    _this.input.connect(_this._split); // dry wet connections\n\n\n    _this.input.connect(_this._dryWet.a);\n\n    _this._merge.connect(_this._dryWet.b);\n\n    readOnly(_this, [\"wet\"]);\n    return _this;\n  }\n  /**\n   * Connect the left part of the effect\n   */\n\n\n  StereoEffect.prototype.connectEffectLeft = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    this._split.connect(nodes[0], 0, 0);\n\n    connectSeries.apply(void 0, __spread(nodes));\n    connect(nodes[nodes.length - 1], this._merge, 0, 0);\n  };\n  /**\n   * Connect the right part of the effect\n   */\n\n\n  StereoEffect.prototype.connectEffectRight = function () {\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    this._split.connect(nodes[0], 1, 0);\n\n    connectSeries.apply(void 0, __spread(nodes));\n    connect(nodes[nodes.length - 1], this._merge, 0, 1);\n  };\n\n  StereoEffect.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  };\n\n  StereoEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dryWet.dispose();\n\n    this._split.dispose();\n\n    this._merge.dispose();\n\n    return this;\n  };\n\n  return StereoEffect;\n}(ToneAudioNode);\n\nexport { StereoEffect };","import { __extends } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Just like a stereo feedback effect, but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +---+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit\n * +-->                          +----->        +---->                          +---+\n * |                                                                                |\n * +--------------------------------+ feedbackR <-----------------------------------+\n * ```\n */\n\nvar StereoFeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoFeedbackEffect, _super);\n\n  function StereoFeedbackEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.feedback = new Signal({\n      context: _this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    _this._feedbackL = new Gain({\n      context: _this.context\n    });\n    _this._feedbackR = new Gain({\n      context: _this.context\n    });\n    _this._feedbackSplit = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._feedbackMerge = new Merge({\n      context: _this.context,\n      channels: 2\n    });\n\n    _this._merge.connect(_this._feedbackSplit);\n\n    _this._feedbackMerge.connect(_this._split); // the left output connected to the left input\n\n\n    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 0); // the right output connected to the right input\n\n\n    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 1); // the feedback control\n\n\n    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n\n    readOnly(_this, [\"feedback\"]);\n    return _this;\n  }\n\n  StereoFeedbackEffect.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      feedback: 0.5\n    });\n  };\n\n  StereoFeedbackEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.feedback.dispose();\n\n    this._feedbackL.dispose();\n\n    this._feedbackR.dispose();\n\n    this._feedbackSplit.dispose();\n\n    this._feedbackMerge.dispose();\n\n    return this;\n  };\n\n  return StereoFeedbackEffect;\n}(StereoEffect);\n\nexport { StereoFeedbackEffect };","import { __extends } from \"tslib\";\nimport { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5);\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\n\nvar Chorus =\n/** @class */\nfunction (_super) {\n  __extends(Chorus, _super);\n\n  function Chorus() {\n    var _this = _super.call(this, optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"])) || this;\n\n    _this.name = \"Chorus\";\n    var options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n    _this._depth = options.depth;\n    _this._delayTime = options.delayTime / 1000;\n    _this._lfoL = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    _this._delayNodeL = new Delay({\n      context: _this.context\n    });\n    _this._delayNodeR = new Delay({\n      context: _this.context\n    });\n    _this.frequency = _this._lfoL.frequency;\n    readOnly(_this, [\"frequency\"]); // have one LFO frequency control the other\n\n    _this._lfoL.frequency.connect(_this._lfoR.frequency); // connections\n\n\n    _this.connectEffectLeft(_this._delayNodeL);\n\n    _this.connectEffectRight(_this._delayNodeR); // lfo setup\n\n\n    _this._lfoL.connect(_this._delayNodeL.delayTime);\n\n    _this._lfoR.connect(_this._delayNodeR.delayTime); // set the initial values\n\n\n    _this.depth = _this._depth;\n    _this.type = options.type;\n    _this.spread = options.spread;\n    return _this;\n  }\n\n  Chorus.getDefaults = function () {\n    return Object.assign(StereoFeedbackEffect.getDefaults(), {\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180,\n      feedback: 0,\n      wet: 0.5\n    });\n  };\n\n  Object.defineProperty(Chorus.prototype, \"depth\", {\n    /**\n     * The depth of the effect. A depth of 1 makes the delayTime\n     * modulate between 0 and 2*delayTime (centered around the delayTime).\n     */\n    get: function () {\n      return this._depth;\n    },\n    set: function (depth) {\n      this._depth = depth;\n      var deviation = this._delayTime * depth;\n      this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoL.max = this._delayTime + deviation;\n      this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n      this._lfoR.max = this._delayTime + deviation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"delayTime\", {\n    /**\n     * The delayTime in milliseconds of the chorus. A larger delayTime\n     * will give a more pronounced effect. Nominal range a delayTime\n     * is between 2 and 20ms.\n     */\n    get: function () {\n      return this._delayTime * 1000;\n    },\n    set: function (delayTime) {\n      this._delayTime = delayTime / 1000;\n      this.depth = this._depth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"type\", {\n    /**\n     * The oscillator type of the LFO.\n     */\n    get: function () {\n      return this._lfoL.type;\n    },\n    set: function (type) {\n      this._lfoL.type = type;\n      this._lfoR.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chorus.prototype, \"spread\", {\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get: function () {\n      return this._lfoR.phase - this._lfoL.phase;\n    },\n    set: function (spread) {\n      this._lfoL.phase = 90 - spread / 2;\n      this._lfoR.phase = spread / 2 + 90;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Start the effect.\n   */\n\n  Chorus.prototype.start = function (time) {\n    this._lfoL.start(time);\n\n    this._lfoR.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the lfo\n   */\n\n\n  Chorus.prototype.stop = function (time) {\n    this._lfoL.stop(time);\n\n    this._lfoR.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n\n\n  Chorus.prototype.sync = function () {\n    this._lfoL.sync();\n\n    this._lfoR.sync();\n\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport.\n   */\n\n\n  Chorus.prototype.unsync = function () {\n    this._lfoL.unsync();\n\n    this._lfoR.unsync();\n\n    return this;\n  };\n\n  Chorus.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._delayNodeL.dispose();\n\n    this._delayNodeR.dispose();\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return Chorus;\n}(StereoFeedbackEffect);\n\nexport { Chorus };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect } from \"./Effect\";\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\n\nvar Distortion =\n/** @class */\nfunction (_super) {\n  __extends(Distortion, _super);\n\n  function Distortion() {\n    var _this = _super.call(this, optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"])) || this;\n\n    _this.name = \"Distortion\";\n    var options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n    _this._shaper = new WaveShaper({\n      context: _this.context,\n      length: 4096\n    });\n    _this._distortion = options.distortion;\n\n    _this.connectEffect(_this._shaper);\n\n    _this.distortion = options.distortion;\n    _this.oversample = options.oversample;\n    return _this;\n  }\n\n  Distortion.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      distortion: 0.4,\n      oversample: \"none\"\n    });\n  };\n\n  Object.defineProperty(Distortion.prototype, \"distortion\", {\n    /**\n     * The amount of distortion. Nominal range is between 0 and 1.\n     */\n    get: function () {\n      return this._distortion;\n    },\n    set: function (amount) {\n      this._distortion = amount;\n      var k = amount * 100;\n      var deg = Math.PI / 180;\n\n      this._shaper.setMap(function (x) {\n        if (Math.abs(x) < 0.001) {\n          // should output 0 when input is 0\n          return 0;\n        } else {\n          return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n        }\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Distortion.prototype, \"oversample\", {\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get: function () {\n      return this._shaper.oversample;\n    },\n    set: function (oversampling) {\n      this._shaper.oversample = oversampling;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Distortion.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._shaper.dispose();\n\n    return this;\n  };\n\n  return Distortion;\n}(Effect);\n\nexport { Distortion };","import { __extends } from \"tslib\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nvar FeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackEffect, _super);\n\n  function FeedbackEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"FeedbackEffect\";\n    _this._feedbackGain = new Gain({\n      context: _this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    _this.feedback = _this._feedbackGain.gain;\n    readOnly(_this, \"feedback\"); // the feedback loop\n\n    _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n\n    return _this;\n  }\n\n  FeedbackEffect.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      feedback: 0.125\n    });\n  };\n\n  FeedbackEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._feedbackGain.dispose();\n\n    this.feedback.dispose();\n    return this;\n  };\n\n  return FeedbackEffect;\n}(Effect);\n\nexport { FeedbackEffect };","import { __extends } from \"tslib\";\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\n\nvar FeedbackDelay =\n/** @class */\nfunction (_super) {\n  __extends(FeedbackDelay, _super);\n\n  function FeedbackDelay() {\n    var _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n\n    _this.name = \"FeedbackDelay\";\n    var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: options.delayTime,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = _this._delayNode.delayTime; // connect it up\n\n    _this.connectEffect(_this._delayNode);\n\n    readOnly(_this, \"delayTime\");\n    return _this;\n  }\n\n  FeedbackDelay.getDefaults = function () {\n    return Object.assign(FeedbackEffect.getDefaults(), {\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n  };\n\n  FeedbackDelay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.dispose();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return FeedbackDelay;\n}(FeedbackEffect);\n\nexport { FeedbackDelay };","import { __extends, __read, __spread } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\n\nvar PhaseShiftAllpass =\n/** @class */\nfunction (_super) {\n  __extends(PhaseShiftAllpass, _super);\n\n  function PhaseShiftAllpass(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"PhaseShiftAllpass\";\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * The phase shifted output\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    /**\n     * The PhaseShifted allpass output\n     */\n\n    _this.offset90 = new Gain({\n      context: _this.context\n    });\n    var allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n    var allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n    _this._bank0 = _this._createAllPassFilterBank(allpassBank1Values);\n    _this._bank1 = _this._createAllPassFilterBank(allpassBank2Values);\n    _this._oneSampleDelay = _this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]); // connect Allpass filter banks\n\n    connectSeries.apply(void 0, __spread([_this.input], _this._bank0, [_this._oneSampleDelay, _this.output]));\n    connectSeries.apply(void 0, __spread([_this.input], _this._bank1, [_this.offset90]));\n    return _this;\n  }\n  /**\n   * Create all of the IIR filters from an array of values using the coefficient calculation.\n   */\n\n\n  PhaseShiftAllpass.prototype._createAllPassFilterBank = function (bankValues) {\n    var _this = this;\n\n    var nodes = bankValues.map(function (value) {\n      var coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n      return _this.context.createIIRFilter(coefficients[0], coefficients[1]);\n    });\n    return nodes;\n  };\n\n  PhaseShiftAllpass.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n    this.output.dispose();\n    this.offset90.dispose();\n\n    this._bank0.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._bank1.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._oneSampleDelay.disconnect();\n\n    return this;\n  };\n\n  return PhaseShiftAllpass;\n}(ToneAudioNode);\n\nexport { PhaseShiftAllpass };","import { __extends } from \"tslib\";\nimport { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\n\nvar FrequencyShifter =\n/** @class */\nfunction (_super) {\n  __extends(FrequencyShifter, _super);\n\n  function FrequencyShifter() {\n    var _this = _super.call(this, optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"])) || this;\n\n    _this.name = \"FrequencyShifter\";\n    var options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency,\n      minValue: -_this.context.sampleRate / 2,\n      maxValue: _this.context.sampleRate / 2\n    });\n    _this._sine = new ToneOscillatorNode({\n      context: _this.context,\n      type: \"sine\"\n    });\n    _this._cosine = new Oscillator({\n      context: _this.context,\n      phase: -90,\n      type: \"sine\"\n    });\n    _this._sineMultiply = new Multiply({\n      context: _this.context\n    });\n    _this._cosineMultiply = new Multiply({\n      context: _this.context\n    });\n    _this._negate = new Negate({\n      context: _this.context\n    });\n    _this._add = new Add({\n      context: _this.context\n    });\n    _this._phaseShifter = new PhaseShiftAllpass({\n      context: _this.context\n    });\n\n    _this.effectSend.connect(_this._phaseShifter); // connect the carrier frequency signal to the two oscillators\n\n\n    _this.frequency.fan(_this._sine.frequency, _this._cosine.frequency);\n\n    _this._phaseShifter.offset90.connect(_this._cosineMultiply);\n\n    _this._cosine.connect(_this._cosineMultiply.factor);\n\n    _this._phaseShifter.connect(_this._sineMultiply);\n\n    _this._sine.connect(_this._sineMultiply.factor);\n\n    _this._sineMultiply.connect(_this._negate);\n\n    _this._cosineMultiply.connect(_this._add);\n\n    _this._negate.connect(_this._add.addend);\n\n    _this._add.connect(_this.effectReturn); // start the oscillators at the same time\n\n\n    var now = _this.immediate();\n\n    _this._sine.start(now);\n\n    _this._cosine.start(now);\n\n    return _this;\n  }\n\n  FrequencyShifter.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 0\n    });\n  };\n\n  FrequencyShifter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.frequency.dispose();\n\n    this._add.dispose();\n\n    this._cosine.dispose();\n\n    this._cosineMultiply.dispose();\n\n    this._negate.dispose();\n\n    this._phaseShifter.dispose();\n\n    this._sine.dispose();\n\n    this._sineMultiply.dispose();\n\n    return this;\n  };\n\n  return FrequencyShifter;\n}(Effect);\n\nexport { FrequencyShifter };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\n\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\n\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\n\nvar Freeverb =\n/** @class */\nfunction (_super) {\n  __extends(Freeverb, _super);\n\n  function Freeverb() {\n    var _this = _super.call(this, optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"])) || this;\n\n    _this.name = \"Freeverb\";\n    /**\n     * the comb filters\n     */\n\n    _this._combFilters = [];\n    /**\n     * the allpass filters on the left\n     */\n\n    _this._allpassFiltersL = [];\n    /**\n     * the allpass filters on the right\n     */\n\n    _this._allpassFiltersR = [];\n    var options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n    _this.roomSize = new Signal({\n      context: _this.context,\n      value: options.roomSize,\n      units: \"normalRange\"\n    }); // make the allpass filters on the right\n\n    _this._allpassFiltersL = allpassFilterFrequencies.map(function (freq) {\n      var allpassL = _this.context.createBiquadFilter();\n\n      allpassL.type = \"allpass\";\n      allpassL.frequency.value = freq;\n      return allpassL;\n    }); // make the allpass filters on the left\n\n    _this._allpassFiltersR = allpassFilterFrequencies.map(function (freq) {\n      var allpassR = _this.context.createBiquadFilter();\n\n      allpassR.type = \"allpass\";\n      allpassR.frequency.value = freq;\n      return allpassR;\n    }); // make the comb filters\n\n    _this._combFilters = combFilterTunings.map(function (delayTime, index) {\n      var lfpf = new LowpassCombFilter({\n        context: _this.context,\n        dampening: options.dampening,\n        delayTime: delayTime\n      });\n\n      if (index < combFilterTunings.length / 2) {\n        _this.connectEffectLeft.apply(_this, __spread([lfpf], _this._allpassFiltersL));\n      } else {\n        _this.connectEffectRight.apply(_this, __spread([lfpf], _this._allpassFiltersR));\n      }\n\n      _this.roomSize.connect(lfpf.resonance);\n\n      return lfpf;\n    });\n    readOnly(_this, [\"roomSize\"]);\n    return _this;\n  }\n\n  Freeverb.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      roomSize: 0.7,\n      dampening: 3000\n    });\n  };\n\n  Object.defineProperty(Freeverb.prototype, \"dampening\", {\n    /**\n     * The amount of dampening of the reverberant signal.\n     */\n    get: function () {\n      return this._combFilters[0].dampening;\n    },\n    set: function (d) {\n      this._combFilters.forEach(function (c) {\n        return c.dampening = d;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Freeverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._allpassFiltersL.forEach(function (al) {\n      return al.disconnect();\n    });\n\n    this._allpassFiltersR.forEach(function (ar) {\n      return ar.disconnect();\n    });\n\n    this._combFilters.forEach(function (cf) {\n      return cf.dispose();\n    });\n\n    this.roomSize.dispose();\n    return this;\n  };\n\n  return Freeverb;\n}(StereoEffect);\n\nexport { Freeverb };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * an array of the comb filter delay time values\n */\n\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\n\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\n\nvar allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n *\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\n\nvar JCReverb =\n/** @class */\nfunction (_super) {\n  __extends(JCReverb, _super);\n\n  function JCReverb() {\n    var _this = _super.call(this, optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"])) || this;\n\n    _this.name = \"JCReverb\";\n    /**\n     * a series of allpass filters\n     */\n\n    _this._allpassFilters = [];\n    /**\n     * parallel feedback comb filters\n     */\n\n    _this._feedbackCombFilters = [];\n    var options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n    _this.roomSize = new Signal({\n      context: _this.context,\n      value: options.roomSize,\n      units: \"normalRange\"\n    });\n    _this._scaleRoomSize = new Scale({\n      context: _this.context,\n      min: -0.733,\n      max: 0.197\n    }); // make the allpass filters\n\n    _this._allpassFilters = allpassFilterFreqs.map(function (freq) {\n      var allpass = _this.context.createBiquadFilter();\n\n      allpass.type = \"allpass\";\n      allpass.frequency.value = freq;\n      return allpass;\n    }); // and the comb filters\n\n    _this._feedbackCombFilters = combFilterDelayTimes.map(function (delayTime, index) {\n      var fbcf = new FeedbackCombFilter({\n        context: _this.context,\n        delayTime: delayTime\n      });\n\n      _this._scaleRoomSize.connect(fbcf.resonance);\n\n      fbcf.resonance.value = combFilterResonances[index];\n\n      if (index < combFilterDelayTimes.length / 2) {\n        _this.connectEffectLeft.apply(_this, __spread(_this._allpassFilters, [fbcf]));\n      } else {\n        _this.connectEffectRight.apply(_this, __spread(_this._allpassFilters, [fbcf]));\n      }\n\n      return fbcf;\n    }); // chain the allpass filters together\n\n    _this.roomSize.connect(_this._scaleRoomSize);\n\n    readOnly(_this, [\"roomSize\"]);\n    return _this;\n  }\n\n  JCReverb.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      roomSize: 0.5\n    });\n  };\n\n  JCReverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._allpassFilters.forEach(function (apf) {\n      return apf.disconnect();\n    });\n\n    this._feedbackCombFilters.forEach(function (fbcf) {\n      return fbcf.dispose();\n    });\n\n    this.roomSize.dispose();\n\n    this._scaleRoomSize.dispose();\n\n    return this;\n  };\n\n  return JCReverb;\n}(StereoEffect);\n\nexport { JCReverb };","import { __extends } from \"tslib\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\n\nvar StereoXFeedbackEffect =\n/** @class */\nfunction (_super) {\n  __extends(StereoXFeedbackEffect, _super);\n\n  function StereoXFeedbackEffect(options) {\n    var _this = _super.call(this, options) || this; // the left output connected to the right input\n\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 1); // the left output connected to the right input\n\n\n    _this._feedbackR.disconnect();\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n\n    readOnly(_this, [\"feedback\"]);\n    return _this;\n  }\n\n  return StereoXFeedbackEffect;\n}(StereoFeedbackEffect);\n\nexport { StereoXFeedbackEffect };","import { __extends } from \"tslib\";\nimport { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\n\nvar PingPongDelay =\n/** @class */\nfunction (_super) {\n  __extends(PingPongDelay, _super);\n\n  function PingPongDelay() {\n    var _this = _super.call(this, optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n\n    _this.name = \"PingPongDelay\";\n    var options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._leftDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightPreDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = new Signal({\n      context: _this.context,\n      units: \"time\",\n      value: options.delayTime\n    }); // connect it up\n\n    _this.connectEffectLeft(_this._leftDelay);\n\n    _this.connectEffectRight(_this._rightPreDelay, _this._rightDelay);\n\n    _this.delayTime.fan(_this._leftDelay.delayTime, _this._rightDelay.delayTime, _this._rightPreDelay.delayTime); // rearranged the feedback to be after the rightPreDelay\n\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._rightDelay);\n\n    readOnly(_this, [\"delayTime\"]);\n    return _this;\n  }\n\n  PingPongDelay.getDefaults = function () {\n    return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n  };\n\n  PingPongDelay.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._leftDelay.dispose();\n\n    this._rightDelay.dispose();\n\n    this._rightPreDelay.dispose();\n\n    this.delayTime.dispose();\n    return this;\n  };\n\n  return PingPongDelay;\n}(StereoXFeedbackEffect);\n\nexport { PingPongDelay };","import { __extends } from \"tslib\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\n\nvar PitchShift =\n/** @class */\nfunction (_super) {\n  __extends(PitchShift, _super);\n\n  function PitchShift() {\n    var _this = _super.call(this, optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"])) || this;\n\n    _this.name = \"PitchShift\";\n    var options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n    _this._frequency = new Signal({\n      context: _this.context\n    });\n    _this._delayA = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoA = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\"\n    }).connect(_this._delayA.delayTime);\n    _this._delayB = new Delay({\n      maxDelay: 1,\n      context: _this.context\n    });\n    _this._lfoB = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 0.1,\n      type: \"sawtooth\",\n      phase: 180\n    }).connect(_this._delayB.delayTime);\n    _this._crossFade = new CrossFade({\n      context: _this.context\n    });\n    _this._crossFadeLFO = new LFO({\n      context: _this.context,\n      min: 0,\n      max: 1,\n      type: \"triangle\",\n      phase: 90\n    }).connect(_this._crossFade.fade);\n    _this._feedbackDelay = new Delay({\n      delayTime: options.delayTime,\n      context: _this.context\n    });\n    _this.delayTime = _this._feedbackDelay.delayTime;\n    readOnly(_this, \"delayTime\");\n    _this._pitch = options.pitch;\n    _this._windowSize = options.windowSize; // connect the two delay lines up\n\n    _this._delayA.connect(_this._crossFade.a);\n\n    _this._delayB.connect(_this._crossFade.b); // connect the frequency\n\n\n    _this._frequency.fan(_this._lfoA.frequency, _this._lfoB.frequency, _this._crossFadeLFO.frequency); // route the input\n\n\n    _this.effectSend.fan(_this._delayA, _this._delayB);\n\n    _this._crossFade.chain(_this._feedbackDelay, _this.effectReturn); // start the LFOs at the same time\n\n\n    var now = _this.now();\n\n    _this._lfoA.start(now);\n\n    _this._lfoB.start(now);\n\n    _this._crossFadeLFO.start(now); // set the initial value\n\n\n    _this.windowSize = _this._windowSize;\n    return _this;\n  }\n\n  PitchShift.getDefaults = function () {\n    return Object.assign(FeedbackEffect.getDefaults(), {\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n  };\n\n  Object.defineProperty(PitchShift.prototype, \"pitch\", {\n    /**\n     * Repitch the incoming signal by some interval (measured in semi-tones).\n     * @example\n     * const pitchShift = new Tone.PitchShift().toDestination();\n     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n     * pitchShift.pitch = -12; // down one octave\n     * pitchShift.pitch = 7; // up a fifth\n     */\n    get: function () {\n      return this._pitch;\n    },\n    set: function (interval) {\n      this._pitch = interval;\n      var factor = 0;\n\n      if (interval < 0) {\n        this._lfoA.min = 0;\n        this._lfoA.max = this._windowSize;\n        this._lfoB.min = 0;\n        this._lfoB.max = this._windowSize;\n        factor = intervalToFrequencyRatio(interval - 1) + 1;\n      } else {\n        this._lfoA.min = this._windowSize;\n        this._lfoA.max = 0;\n        this._lfoB.min = this._windowSize;\n        this._lfoB.max = 0;\n        factor = intervalToFrequencyRatio(interval) - 1;\n      }\n\n      this._frequency.value = factor * (1.2 / this._windowSize);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PitchShift.prototype, \"windowSize\", {\n    /**\n     * The window size corresponds roughly to the sample length in a looping sampler.\n     * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n     * signal, but larger values will result in smoother pitch shifting for larger intervals.\n     * A nominal range of 0.03 to 0.1 is recommended.\n     */\n    get: function () {\n      return this._windowSize;\n    },\n    set: function (size) {\n      this._windowSize = this.toSeconds(size);\n      this.pitch = this._pitch;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PitchShift.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._frequency.dispose();\n\n    this._delayA.dispose();\n\n    this._delayB.dispose();\n\n    this._lfoA.dispose();\n\n    this._lfoB.dispose();\n\n    this._crossFade.dispose();\n\n    this._crossFadeLFO.dispose();\n\n    this._feedbackDelay.dispose();\n\n    return this;\n  };\n\n  return PitchShift;\n}(FeedbackEffect);\n\nexport { PitchShift };","import { __extends, __read, __spread } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\n\nvar Phaser =\n/** @class */\nfunction (_super) {\n  __extends(Phaser, _super);\n\n  function Phaser() {\n    var _this = _super.call(this, optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"])) || this;\n\n    _this.name = \"Phaser\";\n    var options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n    _this._lfoL = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    _this._baseFrequency = _this.toFrequency(options.baseFrequency);\n    _this._octaves = options.octaves;\n    _this.Q = new Signal({\n      context: _this.context,\n      value: options.Q,\n      units: \"positive\"\n    });\n    _this._filtersL = _this._makeFilters(options.stages, _this._lfoL);\n    _this._filtersR = _this._makeFilters(options.stages, _this._lfoR);\n    _this.frequency = _this._lfoL.frequency;\n    _this.frequency.value = options.frequency; // connect them up\n\n    _this.connectEffectLeft.apply(_this, __spread(_this._filtersL));\n\n    _this.connectEffectRight.apply(_this, __spread(_this._filtersR)); // control the frequency with one LFO\n\n\n    _this._lfoL.frequency.connect(_this._lfoR.frequency); // set the options\n\n\n    _this.baseFrequency = options.baseFrequency;\n    _this.octaves = options.octaves; // start the lfo\n\n    _this._lfoL.start();\n\n    _this._lfoR.start();\n\n    readOnly(_this, [\"frequency\", \"Q\"]);\n    return _this;\n  }\n\n  Phaser.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n  };\n\n  Phaser.prototype._makeFilters = function (stages, connectToFreq) {\n    var filters = []; // make all the filters\n\n    for (var i = 0; i < stages; i++) {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"allpass\";\n      this.Q.connect(filter.Q);\n      connectToFreq.connect(filter.frequency);\n      filters.push(filter);\n    }\n\n    return filters;\n  };\n\n  Object.defineProperty(Phaser.prototype, \"octaves\", {\n    /**\n     * The number of octaves the phase goes above the baseFrequency\n     */\n    get: function () {\n      return this._octaves;\n    },\n    set: function (octaves) {\n      this._octaves = octaves;\n      var max = this._baseFrequency * Math.pow(2, octaves);\n      this._lfoL.max = max;\n      this._lfoR.max = max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Phaser.prototype, \"baseFrequency\", {\n    /**\n     * The the base frequency of the filters.\n     */\n    get: function () {\n      return this._baseFrequency;\n    },\n    set: function (freq) {\n      this._baseFrequency = this.toFrequency(freq);\n      this._lfoL.min = this._baseFrequency;\n      this._lfoR.min = this._baseFrequency;\n      this.octaves = this._octaves;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Phaser.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.Q.dispose();\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._filtersL.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this._filtersR.forEach(function (f) {\n      return f.disconnect();\n    });\n\n    this.frequency.dispose();\n    return this;\n  };\n\n  return Phaser;\n}(StereoEffect);\n\nexport { Phaser };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\n\nvar Reverb =\n/** @class */\nfunction (_super) {\n  __extends(Reverb, _super);\n\n  function Reverb() {\n    var _this = _super.call(this, optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"])) || this;\n\n    _this.name = \"Reverb\";\n    /**\n     * Convolver node\n     */\n\n    _this._convolver = _this.context.createConvolver();\n    /**\n     * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n     * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n     * before the IR is generated with the latest values.\n     */\n\n    _this.ready = Promise.resolve();\n    var options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n    _this._decay = options.decay;\n    _this._preDelay = options.preDelay;\n\n    _this.generate();\n\n    _this.connectEffect(_this._convolver);\n\n    return _this;\n  }\n\n  Reverb.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      decay: 1.5,\n      preDelay: 0.01\n    });\n  };\n\n  Object.defineProperty(Reverb.prototype, \"decay\", {\n    /**\n     * The duration of the reverb.\n     */\n    get: function () {\n      return this._decay;\n    },\n    set: function (time) {\n      time = this.toSeconds(time);\n      assertRange(time, 0.001);\n      this._decay = time;\n      this.generate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reverb.prototype, \"preDelay\", {\n    /**\n     * The amount of time before the reverb is fully ramped in.\n     */\n    get: function () {\n      return this._preDelay;\n    },\n    set: function (time) {\n      time = this.toSeconds(time);\n      assertRange(time, 0);\n      this._preDelay = time;\n      this.generate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Generate the Impulse Response. Returns a promise while the IR is being generated.\n   * @return Promise which returns this object.\n   */\n\n  Reverb.prototype.generate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var previousReady, context, noiseL, noiseR, merge, gainNode, renderPromise, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            previousReady = this.ready;\n            context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n            noiseL = new Noise({\n              context: context\n            });\n            noiseR = new Noise({\n              context: context\n            });\n            merge = new Merge({\n              context: context\n            });\n            noiseL.connect(merge, 0, 0);\n            noiseR.connect(merge, 0, 1);\n            gainNode = new Gain({\n              context: context\n            }).toDestination();\n            merge.connect(gainNode);\n            noiseL.start(0);\n            noiseR.start(0); // predelay\n\n            gainNode.gain.setValueAtTime(0, 0);\n            gainNode.gain.setValueAtTime(1, this._preDelay); // decay\n\n            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n            renderPromise = context.render();\n            this.ready = renderPromise.then(noOp); // wait for the previous `ready` to resolve\n\n            return [4\n            /*yield*/\n            , previousReady];\n\n          case 1:\n            // wait for the previous `ready` to resolve\n            _b.sent(); // set the buffer\n\n\n            _a = this._convolver;\n            return [4\n            /*yield*/\n            , renderPromise];\n\n          case 2:\n            // set the buffer\n            _a.buffer = _b.sent().get();\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  Reverb.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._convolver.disconnect();\n\n    return this;\n  };\n\n  return Reverb;\n}(Effect);\n\nexport { Reverb };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n */\n\nvar MidSideSplit =\n/** @class */\nfunction (_super) {\n  __extends(MidSideSplit, _super);\n\n  function MidSideSplit() {\n    var _this = _super.call(this, optionsFromArguments(MidSideSplit.getDefaults(), arguments)) || this;\n\n    _this.name = \"MidSideSplit\";\n    _this._split = _this.input = new Split({\n      channels: 2,\n      context: _this.context\n    });\n    _this._midAdd = new Add({\n      context: _this.context\n    });\n    _this.mid = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._sideSubtract = new Subtract({\n      context: _this.context\n    });\n    _this.side = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n\n    _this._split.connect(_this._midAdd, 0);\n\n    _this._split.connect(_this._midAdd.addend, 1);\n\n    _this._split.connect(_this._sideSubtract, 0);\n\n    _this._split.connect(_this._sideSubtract.subtrahend, 1);\n\n    _this._midAdd.connect(_this.mid);\n\n    _this._sideSubtract.connect(_this.side);\n\n    return _this;\n  }\n\n  MidSideSplit.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._midAdd.dispose();\n\n    this._sideSubtract.dispose();\n\n    this._split.dispose();\n\n    return this;\n  };\n\n  return MidSideSplit;\n}(ToneAudioNode);\n\nexport { MidSideSplit };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ\n * ```\n */\n\nvar MidSideMerge =\n/** @class */\nfunction (_super) {\n  __extends(MidSideMerge, _super);\n\n  function MidSideMerge() {\n    var _this = _super.call(this, optionsFromArguments(MidSideMerge.getDefaults(), arguments)) || this;\n\n    _this.name = \"MidSideMerge\";\n    _this.mid = new Gain({\n      context: _this.context\n    });\n    _this.side = new Gain({\n      context: _this.context\n    });\n    _this._left = new Add({\n      context: _this.context\n    });\n    _this._leftMult = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._right = new Subtract({\n      context: _this.context\n    });\n    _this._rightMult = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._merge = _this.output = new Merge({\n      context: _this.context\n    });\n\n    _this.mid.fan(_this._left);\n\n    _this.side.connect(_this._left.addend);\n\n    _this.mid.connect(_this._right);\n\n    _this.side.connect(_this._right.subtrahend);\n\n    _this._left.connect(_this._leftMult);\n\n    _this._right.connect(_this._rightMult);\n\n    _this._leftMult.connect(_this._merge, 0, 0);\n\n    _this._rightMult.connect(_this._merge, 0, 1);\n\n    return _this;\n  }\n\n  MidSideMerge.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._leftMult.dispose();\n\n    this._rightMult.dispose();\n\n    this._left.dispose();\n\n    this._right.dispose();\n\n    return this;\n  };\n\n  return MidSideMerge;\n}(ToneAudioNode);\n\nexport { MidSideMerge };","import { __extends, __read, __spread } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n */\n\nvar MidSideEffect =\n/** @class */\nfunction (_super) {\n  __extends(MidSideEffect, _super);\n\n  function MidSideEffect(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.name = \"MidSideEffect\";\n    _this._midSideMerge = new MidSideMerge({\n      context: _this.context\n    });\n    _this._midSideSplit = new MidSideSplit({\n      context: _this.context\n    });\n    _this._midSend = _this._midSideSplit.mid;\n    _this._sideSend = _this._midSideSplit.side;\n    _this._midReturn = _this._midSideMerge.mid;\n    _this._sideReturn = _this._midSideMerge.side; // the connections\n\n    _this.effectSend.connect(_this._midSideSplit);\n\n    _this._midSideMerge.connect(_this.effectReturn);\n\n    return _this;\n  }\n  /**\n   * Connect the mid chain of the effect\n   */\n\n\n  MidSideEffect.prototype.connectEffectMid = function () {\n    var _a;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    (_a = this._midSend).chain.apply(_a, __spread(nodes, [this._midReturn]));\n  };\n  /**\n   * Connect the side chain of the effect\n   */\n\n\n  MidSideEffect.prototype.connectEffectSide = function () {\n    var _a;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    (_a = this._sideSend).chain.apply(_a, __spread(nodes, [this._sideReturn]));\n  };\n\n  MidSideEffect.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._midSideSplit.dispose();\n\n    this._midSideMerge.dispose();\n\n    this._midSend.dispose();\n\n    this._sideSend.dispose();\n\n    this._midReturn.dispose();\n\n    this._sideReturn.dispose();\n\n    return this;\n  };\n\n  return MidSideEffect;\n}(Effect);\n\nexport { MidSideEffect };","import { __extends } from \"tslib\";\nimport { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\n\nvar StereoWidener =\n/** @class */\nfunction (_super) {\n  __extends(StereoWidener, _super);\n\n  function StereoWidener() {\n    var _this = _super.call(this, optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"])) || this;\n\n    _this.name = \"StereoWidener\";\n    var options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      value: options.width,\n      units: \"normalRange\"\n    });\n    readOnly(_this, [\"width\"]);\n    _this._twoTimesWidthMid = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._twoTimesWidthSide = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._midMult = new Multiply({\n      context: _this.context\n    });\n\n    _this._twoTimesWidthMid.connect(_this._midMult.factor);\n\n    _this.connectEffectMid(_this._midMult);\n\n    _this._oneMinusWidth = new Subtract({\n      context: _this.context\n    });\n\n    _this._oneMinusWidth.connect(_this._twoTimesWidthMid);\n\n    connect(_this.context.getConstant(1), _this._oneMinusWidth);\n\n    _this.width.connect(_this._oneMinusWidth.subtrahend);\n\n    _this._sideMult = new Multiply({\n      context: _this.context\n    });\n\n    _this.width.connect(_this._twoTimesWidthSide);\n\n    _this._twoTimesWidthSide.connect(_this._sideMult.factor);\n\n    _this.connectEffectSide(_this._sideMult);\n\n    return _this;\n  }\n\n  StereoWidener.getDefaults = function () {\n    return Object.assign(MidSideEffect.getDefaults(), {\n      width: 0.5\n    });\n  };\n\n  StereoWidener.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.width.dispose();\n\n    this._midMult.dispose();\n\n    this._sideMult.dispose();\n\n    this._twoTimesWidthMid.dispose();\n\n    this._twoTimesWidthSide.dispose();\n\n    this._oneMinusWidth.dispose();\n\n    return this;\n  };\n\n  return StereoWidener;\n}(MidSideEffect);\n\nexport { StereoWidener };","import { __extends } from \"tslib\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n *\n * @category Effect\n */\n\nvar Tremolo =\n/** @class */\nfunction (_super) {\n  __extends(Tremolo, _super);\n\n  function Tremolo() {\n    var _this = _super.call(this, optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n\n    _this.name = \"Tremolo\";\n    var options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._lfoL = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 1,\n      max: 0\n    });\n    _this._lfoR = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 1,\n      max: 0\n    });\n    _this._amplitudeL = new Gain({\n      context: _this.context\n    });\n    _this._amplitudeR = new Gain({\n      context: _this.context\n    });\n    _this.frequency = new Signal({\n      context: _this.context,\n      value: options.frequency,\n      units: \"frequency\"\n    });\n    _this.depth = new Signal({\n      context: _this.context,\n      value: options.depth,\n      units: \"normalRange\"\n    });\n    readOnly(_this, [\"frequency\", \"depth\"]);\n\n    _this.connectEffectLeft(_this._amplitudeL);\n\n    _this.connectEffectRight(_this._amplitudeR);\n\n    _this._lfoL.connect(_this._amplitudeL.gain);\n\n    _this._lfoR.connect(_this._amplitudeR.gain);\n\n    _this.frequency.fan(_this._lfoL.frequency, _this._lfoR.frequency);\n\n    _this.depth.fan(_this._lfoR.amplitude, _this._lfoL.amplitude);\n\n    _this.spread = options.spread;\n    return _this;\n  }\n\n  Tremolo.getDefaults = function () {\n    return Object.assign(StereoEffect.getDefaults(), {\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n  };\n  /**\n   * Start the tremolo.\n   */\n\n\n  Tremolo.prototype.start = function (time) {\n    this._lfoL.start(time);\n\n    this._lfoR.start(time);\n\n    return this;\n  };\n  /**\n   * Stop the tremolo.\n   */\n\n\n  Tremolo.prototype.stop = function (time) {\n    this._lfoL.stop(time);\n\n    this._lfoR.stop(time);\n\n    return this;\n  };\n  /**\n   * Sync the effect to the transport.\n   */\n\n\n  Tremolo.prototype.sync = function () {\n    this._lfoL.sync();\n\n    this._lfoR.sync();\n\n    this.context.transport.syncSignal(this.frequency);\n    return this;\n  };\n  /**\n   * Unsync the filter from the transport\n   */\n\n\n  Tremolo.prototype.unsync = function () {\n    this._lfoL.unsync();\n\n    this._lfoR.unsync();\n\n    this.context.transport.unsyncSignal(this.frequency);\n    return this;\n  };\n\n  Object.defineProperty(Tremolo.prototype, \"type\", {\n    /**\n     * The oscillator type.\n     */\n    get: function () {\n      return this._lfoL.type;\n    },\n    set: function (type) {\n      this._lfoL.type = type;\n      this._lfoR.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Tremolo.prototype, \"spread\", {\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get: function () {\n      return this._lfoR.phase - this._lfoL.phase; // 180\n    },\n    set: function (spread) {\n      this._lfoL.phase = 90 - spread / 2;\n      this._lfoR.phase = spread / 2 + 90;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Tremolo.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._amplitudeL.dispose();\n\n    this._amplitudeR.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return Tremolo;\n}(StereoEffect);\n\nexport { Tremolo };","import { __extends } from \"tslib\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\n\nvar Vibrato =\n/** @class */\nfunction (_super) {\n  __extends(Vibrato, _super);\n\n  function Vibrato() {\n    var _this = _super.call(this, optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"])) || this;\n\n    _this.name = \"Vibrato\";\n    var options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    _this._lfo = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n\n    }).start().connect(_this._delayNode.delayTime);\n    _this.frequency = _this._lfo.frequency;\n    _this.depth = _this._lfo.amplitude;\n    _this.depth.value = options.depth;\n    readOnly(_this, [\"frequency\", \"depth\"]);\n\n    _this.effectSend.chain(_this._delayNode, _this.effectReturn);\n\n    return _this;\n  }\n\n  Vibrato.getDefaults = function () {\n    return Object.assign(Effect.getDefaults(), {\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n  };\n\n  Object.defineProperty(Vibrato.prototype, \"type\", {\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get: function () {\n      return this._lfo.type;\n    },\n    set: function (type) {\n      this._lfo.type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Vibrato.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._delayNode.dispose();\n\n    this._lfo.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  };\n\n  return Vibrato;\n}(Effect);\n\nexport { Vibrato };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\n\nvar Analyser =\n/** @class */\nfunction (_super) {\n  __extends(Analyser, _super);\n\n  function Analyser() {\n    var _this = _super.call(this, optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"])) || this;\n\n    _this.name = \"Analyser\";\n    /**\n     * The analyser node.\n     */\n\n    _this._analysers = [];\n    /**\n     * The buffer that the FFT data is written to\n     */\n\n    _this._buffers = [];\n    var options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n    _this.input = _this.output = _this._gain = new Gain({\n      context: _this.context\n    });\n    _this._split = new Split({\n      context: _this.context,\n      channels: options.channels\n    });\n\n    _this.input.connect(_this._split);\n\n    assertRange(options.channels, 1); // create the analysers\n\n    for (var channel = 0; channel < options.channels; channel++) {\n      _this._analysers[channel] = _this.context.createAnalyser();\n\n      _this._split.connect(_this._analysers[channel], channel, 0);\n    } // set the values initially\n\n\n    _this.size = options.size;\n    _this.type = options.type;\n    return _this;\n  }\n\n  Analyser.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      size: 1024,\n      smoothing: 0.8,\n      type: \"fft\",\n      channels: 1\n    });\n  };\n  /**\n   * Run the analysis given the current settings. If [[channels]] = 1,\n   * it will return a Float32Array. If [[channels]] > 1, it will\n   * return an array of Float32Arrays where each index in the array\n   * represents the analysis done on a channel.\n   */\n\n\n  Analyser.prototype.getValue = function () {\n    var _this = this;\n\n    this._analysers.forEach(function (analyser, index) {\n      var buffer = _this._buffers[index];\n\n      if (_this._type === \"fft\") {\n        analyser.getFloatFrequencyData(buffer);\n      } else if (_this._type === \"waveform\") {\n        analyser.getFloatTimeDomainData(buffer);\n      }\n    });\n\n    if (this.channels === 1) {\n      return this._buffers[0];\n    } else {\n      return this._buffers;\n    }\n  };\n\n  Object.defineProperty(Analyser.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     */\n    get: function () {\n      return this._analysers[0].frequencyBinCount;\n    },\n    set: function (size) {\n      var _this = this;\n\n      this._analysers.forEach(function (analyser, index) {\n        analyser.fftSize = size * 2;\n        _this._buffers[index] = new Float32Array(size);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"channels\", {\n    /**\n     * The number of channels the analyser does the analysis on. Channel\n     * separation is done using [[Split]]\n     */\n    get: function () {\n      return this._analysers.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"type\", {\n    /**\n     * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n     */\n    get: function () {\n      return this._type;\n    },\n    set: function (type) {\n      assert(type === \"waveform\" || type === \"fft\", \"Analyser: invalid type: \" + type);\n      this._type = type;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Analyser.prototype, \"smoothing\", {\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get: function () {\n      return this._analysers[0].smoothingTimeConstant;\n    },\n    set: function (val) {\n      this._analysers.forEach(function (a) {\n        return a.smoothingTimeConstant = val;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Clean up.\n   */\n\n  Analyser.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analysers.forEach(function (a) {\n      return a.disconnect();\n    });\n\n    this._split.dispose();\n\n    this._gain.dispose();\n\n    return this;\n  };\n\n  return Analyser;\n}(ToneAudioNode);\n\nexport { Analyser };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\n\nvar MeterBase =\n/** @class */\nfunction (_super) {\n  __extends(MeterBase, _super);\n\n  function MeterBase() {\n    var _this = _super.call(this, optionsFromArguments(MeterBase.getDefaults(), arguments)) || this;\n\n    _this.name = \"MeterBase\";\n    _this.input = _this.output = _this._analyser = new Analyser({\n      context: _this.context,\n      size: 256,\n      type: \"waveform\"\n    });\n    return _this;\n  }\n\n  MeterBase.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analyser.dispose();\n\n    return this;\n  };\n\n  return MeterBase;\n}(ToneAudioNode);\n\nexport { MeterBase };","import { __extends } from \"tslib\";\nimport { gainToDb } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nvar Meter =\n/** @class */\nfunction (_super) {\n  __extends(Meter, _super);\n\n  function Meter() {\n    var _this = _super.call(this, optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"])) || this;\n\n    _this.name = \"Meter\";\n    /**\n     * The previous frame's value\n     */\n\n    _this._rms = 0;\n    var options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n    _this.input = _this.output = _this._analyser = new Analyser({\n      context: _this.context,\n      size: 256,\n      type: \"waveform\",\n      channels: options.channels\n    });\n    _this.smoothing = options.smoothing, _this.normalRange = options.normalRange;\n    return _this;\n  }\n\n  Meter.getDefaults = function () {\n    return Object.assign(MeterBase.getDefaults(), {\n      smoothing: 0.8,\n      normalRange: false,\n      channels: 1\n    });\n  };\n  /**\n   * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n   * @deprecated\n   */\n\n\n  Meter.prototype.getLevel = function () {\n    warn(\"'getLevel' has been changed to 'getValue'\");\n    return this.getValue();\n  };\n  /**\n   * Get the current value of the incoming signal.\n   * Output is in decibels when [[normalRange]] is `false`.\n   * If [[channels]] = 1, then the output is a single number\n   * representing the value of the input signal. When [[channels]] > 1,\n   * then each channel is returned as a value in a number array.\n   */\n\n\n  Meter.prototype.getValue = function () {\n    var _this = this;\n\n    var aValues = this._analyser.getValue();\n\n    var channelValues = this.channels === 1 ? [aValues] : aValues;\n    var vals = channelValues.map(function (values) {\n      var totalSquared = values.reduce(function (total, current) {\n        return total + current * current;\n      }, 0);\n      var rms = Math.sqrt(totalSquared / values.length); // the rms can only fall at the rate of the smoothing\n      // but can jump up instantly\n\n      _this._rms = Math.max(rms, _this._rms * _this.smoothing);\n      return _this.normalRange ? _this._rms : gainToDb(_this._rms);\n    });\n\n    if (this.channels === 1) {\n      return vals[0];\n    } else {\n      return vals;\n    }\n  };\n\n  Object.defineProperty(Meter.prototype, \"channels\", {\n    /**\n     * The number of channels of analysis.\n     */\n    get: function () {\n      return this._analyser.channels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Meter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._analyser.dispose();\n\n    return this;\n  };\n\n  return Meter;\n}(MeterBase);\n\nexport { Meter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\n\nvar FFT =\n/** @class */\nfunction (_super) {\n  __extends(FFT, _super);\n\n  function FFT() {\n    var _this = _super.call(this, optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"])) || this;\n\n    _this.name = \"FFT\";\n    var options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n    _this.normalRange = options.normalRange;\n    _this._analyser.type = \"fft\";\n    _this.size = options.size;\n    return _this;\n  }\n\n  FFT.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      normalRange: false,\n      size: 1024,\n      smoothing: 0.8\n    });\n  };\n  /**\n   * Gets the current frequency data from the connected audio source.\n   * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n   */\n\n\n  FFT.prototype.getValue = function () {\n    var _this = this;\n\n    var values = this._analyser.getValue();\n\n    return values.map(function (v) {\n      return _this.normalRange ? dbToGain(v) : v;\n    });\n  };\n\n  Object.defineProperty(FFT.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]] (i.e. the number of\n     * frequency bins). Large FFT sizes may be costly to compute.\n     */\n    get: function () {\n      return this._analyser.size;\n    },\n    set: function (size) {\n      this._analyser.size = size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FFT.prototype, \"smoothing\", {\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get: function () {\n      return this._analyser.smoothing;\n    },\n    set: function (val) {\n      this._analyser.smoothing = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FFT;\n}(MeterBase);\n\nexport { FFT };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nvar DCMeter =\n/** @class */\nfunction (_super) {\n  __extends(DCMeter, _super);\n\n  function DCMeter() {\n    var _this = _super.call(this, optionsFromArguments(DCMeter.getDefaults(), arguments)) || this;\n\n    _this.name = \"DCMeter\";\n    _this._analyser.type = \"waveform\";\n    _this._analyser.size = 256;\n    return _this;\n  }\n  /**\n   * Get the signal value of the incoming signal\n   */\n\n\n  DCMeter.prototype.getValue = function () {\n    var value = this._analyser.getValue();\n\n    return value[0];\n  };\n\n  return DCMeter;\n}(MeterBase);\n\nexport { DCMeter };","import { __extends } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\n\nvar Waveform =\n/** @class */\nfunction (_super) {\n  __extends(Waveform, _super);\n\n  function Waveform() {\n    var _this = _super.call(this, optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"])) || this;\n\n    _this.name = \"Waveform\";\n    var options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n    _this._analyser.type = \"waveform\";\n    _this.size = options.size;\n    return _this;\n  }\n\n  Waveform.getDefaults = function () {\n    return Object.assign(MeterBase.getDefaults(), {\n      size: 1024\n    });\n  };\n  /**\n   * Return the waveform for the current time as a Float32Array where each value in the array\n   * represents a sample in the waveform.\n   */\n\n\n  Waveform.prototype.getValue = function () {\n    return this._analyser.getValue();\n  };\n\n  Object.defineProperty(Waveform.prototype, \"size\", {\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]].\n     */\n    get: function () {\n      return this._analyser.size;\n    },\n    set: function (size) {\n      this._analyser.size = size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Waveform;\n}(MeterBase);\n\nexport { Waveform };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\n\nvar Solo =\n/** @class */\nfunction (_super) {\n  __extends(Solo, _super);\n\n  function Solo() {\n    var _this = _super.call(this, optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"])) || this;\n\n    _this.name = \"Solo\";\n    var options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n    _this.input = _this.output = new Gain({\n      context: _this.context\n    });\n\n    if (!Solo._allSolos.has(_this.context)) {\n      Solo._allSolos.set(_this.context, new Set());\n    }\n\n    Solo._allSolos.get(_this.context).add(_this); // set initially\n\n\n    _this.solo = options.solo;\n    return _this;\n  }\n\n  Solo.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      solo: false\n    });\n  };\n\n  Object.defineProperty(Solo.prototype, \"solo\", {\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get: function () {\n      return this._isSoloed();\n    },\n    set: function (solo) {\n      if (solo) {\n        this._addSolo();\n      } else {\n        this._removeSolo();\n      }\n\n      Solo._allSolos.get(this.context).forEach(function (instance) {\n        return instance._updateSolo();\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Solo.prototype, \"muted\", {\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get: function () {\n      return this.input.gain.value === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Add this to the soloed array\n   */\n\n  Solo.prototype._addSolo = function () {\n    if (!Solo._soloed.has(this.context)) {\n      Solo._soloed.set(this.context, new Set());\n    }\n\n    Solo._soloed.get(this.context).add(this);\n  };\n  /**\n   * Remove this from the soloed array\n   */\n\n\n  Solo.prototype._removeSolo = function () {\n    if (Solo._soloed.has(this.context)) {\n      Solo._soloed.get(this.context).delete(this);\n    }\n  };\n  /**\n   * Is this on the soloed array\n   */\n\n\n  Solo.prototype._isSoloed = function () {\n    return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n  };\n  /**\n   * Returns true if no one is soloed\n   */\n\n\n  Solo.prototype._noSolos = function () {\n    // either does not have any soloed added\n    return !Solo._soloed.has(this.context) || // or has a solo set but doesn't include any items\n    Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;\n  };\n  /**\n   * Solo the current instance and unsolo all other instances.\n   */\n\n\n  Solo.prototype._updateSolo = function () {\n    if (this._isSoloed()) {\n      this.input.gain.value = 1;\n    } else if (this._noSolos()) {\n      // no one is soloed\n      this.input.gain.value = 1;\n    } else {\n      this.input.gain.value = 0;\n    }\n  };\n\n  Solo.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    Solo._allSolos.get(this.context).delete(this);\n\n    this._removeSolo();\n\n    return this;\n  };\n  /**\n   * Hold all of the solo'ed tracks belonging to a specific context\n   */\n\n\n  Solo._allSolos = new Map();\n  /**\n   * Hold the currently solo'ed instance(s)\n   */\n\n  Solo._soloed = new Map();\n  return Solo;\n}(ToneAudioNode);\n\nexport { Solo };","import { __extends } from \"tslib\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\n\nvar PanVol =\n/** @class */\nfunction (_super) {\n  __extends(PanVol, _super);\n\n  function PanVol() {\n    var _this = _super.call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"])) || this;\n\n    _this.name = \"PanVol\";\n    var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    _this._panner = _this.input = new Panner({\n      context: _this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    _this.pan = _this._panner.pan;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume; // connections\n\n    _this._panner.connect(_this._volume);\n\n    _this.mute = options.mute;\n    readOnly(_this, [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  PanVol.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      pan: 0,\n      volume: 0,\n      channelCount: 1\n    });\n  };\n\n  Object.defineProperty(PanVol.prototype, \"mute\", {\n    /**\n     * Mute/unmute the volume\n     */\n    get: function () {\n      return this._volume.mute;\n    },\n    set: function (mute) {\n      this._volume.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PanVol.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.dispose();\n\n    this.pan.dispose();\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n    return this;\n  };\n\n  return PanVol;\n}(ToneAudioNode);\n\nexport { PanVol };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\n\nvar Channel =\n/** @class */\nfunction (_super) {\n  __extends(Channel, _super);\n\n  function Channel() {\n    var _this = _super.call(this, optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"])) || this;\n\n    _this.name = \"Channel\";\n    var options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n    _this._solo = _this.input = new Solo({\n      solo: options.solo,\n      context: _this.context\n    });\n    _this._panVol = _this.output = new PanVol({\n      context: _this.context,\n      pan: options.pan,\n      volume: options.volume,\n      mute: options.mute\n    });\n    _this.pan = _this._panVol.pan;\n    _this.volume = _this._panVol.volume;\n\n    _this._solo.connect(_this._panVol);\n\n    readOnly(_this, [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  Channel.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      volume: 0,\n      mute: false,\n      solo: false\n    });\n  };\n\n  Object.defineProperty(Channel.prototype, \"solo\", {\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get: function () {\n      return this._solo.solo;\n    },\n    set: function (solo) {\n      this._solo.solo = solo;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Channel.prototype, \"muted\", {\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get: function () {\n      return this._solo.muted || this.mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Channel.prototype, \"mute\", {\n    /**\n     * Mute/unmute the volume\n     */\n    get: function () {\n      return this._panVol.mute;\n    },\n    set: function (mute) {\n      this._panVol.mute = mute;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Get the gain node belonging to the bus name. Create it if\n   * it doesn't exist\n   * @param name The bus name\n   */\n\n  Channel.prototype._getBus = function (name) {\n    if (!Channel.buses.has(name)) {\n      Channel.buses.set(name, new Gain({\n        context: this.context\n      }));\n    }\n\n    return Channel.buses.get(name);\n  };\n  /**\n   * Send audio to another channel using a string. `send` is a lot like\n   * [[connect]], except it uses a string instead of an object. This can\n   * be useful in large applications to decouple sections since [[send]]\n   * and [[receive]] can be invoked separately in order to connect an object\n   * @param name The channel name to send the audio\n   * @param volume The amount of the signal to send.\n   * \tDefaults to 0db, i.e. send the entire signal\n   * @returns Returns the gain node of this connection.\n   */\n\n\n  Channel.prototype.send = function (name, volume) {\n    if (volume === void 0) {\n      volume = 0;\n    }\n\n    var bus = this._getBus(name);\n\n    var sendKnob = new Gain({\n      context: this.context,\n      units: \"decibels\",\n      gain: volume\n    });\n    this.connect(sendKnob);\n    sendKnob.connect(bus);\n    return sendKnob;\n  };\n  /**\n   * Receive audio from a channel which was connected with [[send]].\n   * @param name The channel name to receive audio from.\n   */\n\n\n  Channel.prototype.receive = function (name) {\n    var bus = this._getBus(name);\n\n    bus.connect(this);\n    return this;\n  };\n\n  Channel.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panVol.dispose();\n\n    this.pan.dispose();\n    this.volume.dispose();\n\n    this._solo.dispose();\n\n    return this;\n  };\n  /**\n   * Store the send/receive channels by name.\n   */\n\n\n  Channel.buses = new Map();\n  return Channel;\n}(ToneAudioNode);\n\nexport { Channel };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\n\nvar MultibandSplit =\n/** @class */\nfunction (_super) {\n  __extends(MultibandSplit, _super);\n\n  function MultibandSplit() {\n    var _this = _super.call(this, optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"])) || this;\n\n    _this.name = \"MultibandSplit\";\n    /**\n     * the input\n     */\n\n    _this.input = new Gain({\n      context: _this.context\n    });\n    /**\n     * no output node, use either low, mid or high outputs\n     */\n\n    _this.output = undefined;\n    /**\n     * The low band.\n     */\n\n    _this.low = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"lowpass\"\n    });\n    /**\n     * the lower filter of the mid band\n     */\n\n    _this._lowMidFilter = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"highpass\"\n    });\n    /**\n     * The mid band output.\n     */\n\n    _this.mid = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"lowpass\"\n    });\n    /**\n     * The high band output.\n     */\n\n    _this.high = new Filter({\n      context: _this.context,\n      frequency: 0,\n      type: \"highpass\"\n    });\n    _this._internalChannels = [_this.low, _this.mid, _this.high];\n    var options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n    _this.lowFrequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.lowFrequency\n    });\n    _this.highFrequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.highFrequency\n    });\n    _this.Q = new Signal({\n      context: _this.context,\n      units: \"positive\",\n      value: options.Q\n    });\n\n    _this.input.fan(_this.low, _this.high);\n\n    _this.input.chain(_this._lowMidFilter, _this.mid); // the frequency control signal\n\n\n    _this.lowFrequency.fan(_this.low.frequency, _this._lowMidFilter.frequency);\n\n    _this.highFrequency.fan(_this.mid.frequency, _this.high.frequency); // the Q value\n\n\n    _this.Q.connect(_this.low.Q);\n\n    _this.Q.connect(_this._lowMidFilter.Q);\n\n    _this.Q.connect(_this.mid.Q);\n\n    _this.Q.connect(_this.high.Q);\n\n    readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    return _this;\n  }\n\n  MultibandSplit.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      highFrequency: 2500,\n      lowFrequency: 400\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  MultibandSplit.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    this.low.dispose();\n\n    this._lowMidFilter.dispose();\n\n    this.mid.dispose();\n    this.high.dispose();\n    this.lowFrequency.dispose();\n    this.highFrequency.dispose();\n    this.Q.dispose();\n    return this;\n  };\n\n  return MultibandSplit;\n}(ToneAudioNode);\n\nexport { MultibandSplit };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\n\nvar Listener =\n/** @class */\nfunction (_super) {\n  __extends(Listener, _super);\n\n  function Listener() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Listener\";\n    _this.positionX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionX\n    });\n    _this.positionY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionY\n    });\n    _this.positionZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionZ\n    });\n    _this.forwardX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardX\n    });\n    _this.forwardY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardY\n    });\n    _this.forwardZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardZ\n    });\n    _this.upX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upX\n    });\n    _this.upY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upY\n    });\n    _this.upZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upZ\n    });\n    return _this;\n  }\n\n  Listener.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      forwardX: 0,\n      forwardY: 0,\n      forwardZ: -1,\n      upX: 0,\n      upY: 1,\n      upZ: 0\n    });\n  };\n\n  Listener.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    this.forwardX.dispose();\n    this.forwardY.dispose();\n    this.forwardZ.dispose();\n    this.upX.dispose();\n    this.upY.dispose();\n    this.upZ.dispose();\n    return this;\n  };\n\n  return Listener;\n}(ToneAudioNode);\n\nexport { Listener }; //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.listener = new Listener({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.listener.dispose();\n});","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\n\nvar Panner3D =\n/** @class */\nfunction (_super) {\n  __extends(Panner3D, _super);\n\n  function Panner3D() {\n    var _this = _super.call(this, optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"])) || this;\n\n    _this.name = \"Panner3D\";\n    var options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n    _this._panner = _this.input = _this.output = _this.context.createPanner(); // set some values\n\n    _this.panningModel = options.panningModel;\n    _this.maxDistance = options.maxDistance;\n    _this.distanceModel = options.distanceModel;\n    _this.coneOuterGain = options.coneOuterGain;\n    _this.coneOuterAngle = options.coneOuterAngle;\n    _this.coneInnerAngle = options.coneInnerAngle;\n    _this.refDistance = options.refDistance;\n    _this.rolloffFactor = options.rolloffFactor;\n    _this.positionX = new Param({\n      context: _this.context,\n      param: _this._panner.positionX,\n      value: options.positionX\n    });\n    _this.positionY = new Param({\n      context: _this.context,\n      param: _this._panner.positionY,\n      value: options.positionY\n    });\n    _this.positionZ = new Param({\n      context: _this.context,\n      param: _this._panner.positionZ,\n      value: options.positionZ\n    });\n    _this.orientationX = new Param({\n      context: _this.context,\n      param: _this._panner.orientationX,\n      value: options.orientationX\n    });\n    _this.orientationY = new Param({\n      context: _this.context,\n      param: _this._panner.orientationY,\n      value: options.orientationY\n    });\n    _this.orientationZ = new Param({\n      context: _this.context,\n      param: _this._panner.orientationZ,\n      value: options.orientationZ\n    });\n    return _this;\n  }\n\n  Panner3D.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      coneInnerAngle: 360,\n      coneOuterAngle: 360,\n      coneOuterGain: 0,\n      distanceModel: \"inverse\",\n      maxDistance: 10000,\n      orientationX: 0,\n      orientationY: 0,\n      orientationZ: 0,\n      panningModel: \"equalpower\",\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      refDistance: 1,\n      rolloffFactor: 1\n    });\n  };\n  /**\n   * Sets the position of the source in 3d space.\n   */\n\n\n  Panner3D.prototype.setPosition = function (x, y, z) {\n    this.positionX.value = x;\n    this.positionY.value = y;\n    this.positionZ.value = z;\n    return this;\n  };\n  /**\n   * Sets the orientation of the source in 3d space.\n   */\n\n\n  Panner3D.prototype.setOrientation = function (x, y, z) {\n    this.orientationX.value = x;\n    this.orientationY.value = y;\n    this.orientationZ.value = z;\n    return this;\n  };\n\n  Object.defineProperty(Panner3D.prototype, \"panningModel\", {\n    /**\n     * The panning model. Either \"equalpower\" or \"HRTF\".\n     */\n    get: function () {\n      return this._panner.panningModel;\n    },\n    set: function (val) {\n      this._panner.panningModel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"refDistance\", {\n    /**\n     * A reference distance for reducing volume as source move further from the listener\n     */\n    get: function () {\n      return this._panner.refDistance;\n    },\n    set: function (val) {\n      this._panner.refDistance = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"rolloffFactor\", {\n    /**\n     * Describes how quickly the volume is reduced as source moves away from listener.\n     */\n    get: function () {\n      return this._panner.rolloffFactor;\n    },\n    set: function (val) {\n      this._panner.rolloffFactor = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"distanceModel\", {\n    /**\n     * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n     */\n    get: function () {\n      return this._panner.distanceModel;\n    },\n    set: function (val) {\n      this._panner.distanceModel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneInnerAngle\", {\n    /**\n     * The angle, in degrees, inside of which there will be no volume reduction\n     */\n    get: function () {\n      return this._panner.coneInnerAngle;\n    },\n    set: function (val) {\n      this._panner.coneInnerAngle = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneOuterAngle\", {\n    /**\n     * The angle, in degrees, outside of which the volume will be reduced\n     * to a constant value of coneOuterGain\n     */\n    get: function () {\n      return this._panner.coneOuterAngle;\n    },\n    set: function (val) {\n      this._panner.coneOuterAngle = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"coneOuterGain\", {\n    /**\n     * The gain outside of the coneOuterAngle\n     */\n    get: function () {\n      return this._panner.coneOuterGain;\n    },\n    set: function (val) {\n      this._panner.coneOuterGain = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Panner3D.prototype, \"maxDistance\", {\n    /**\n     * The maximum distance between source and listener,\n     * after which the volume will not be reduced any further.\n     */\n    get: function () {\n      return this._panner.maxDistance;\n    },\n    set: function (val) {\n      this._panner.maxDistance = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Panner3D.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._panner.disconnect();\n\n    this.orientationX.dispose();\n    this.orientationY.dispose();\n    this.orientationZ.dispose();\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    return this;\n  };\n\n  return Panner3D;\n}(ToneAudioNode);\n\nexport { Panner3D };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * This is only natively supported in Chrome and Firefox.\n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n */\n\nvar Recorder =\n/** @class */\nfunction (_super) {\n  __extends(Recorder, _super);\n\n  function Recorder() {\n    var _this = _super.call(this, optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n\n    _this.name = \"Recorder\";\n    var options = optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"]);\n    _this.input = new Gain({\n      context: _this.context\n    });\n    assert(Recorder.supported, \"Media Recorder API is not available\");\n    _this._stream = _this.context.createMediaStreamDestination();\n\n    _this.input.connect(_this._stream);\n\n    _this._recorder = new MediaRecorder(_this._stream.stream, {\n      mimeType: options.mimeType\n    });\n    return _this;\n  }\n\n  Recorder.getDefaults = function () {\n    return ToneAudioNode.getDefaults();\n  };\n\n  Object.defineProperty(Recorder.prototype, \"mimeType\", {\n    /**\n     * The mime type is the format that the audio is encoded in. For Chrome\n     * that is typically webm encoded as \"vorbis\".\n     */\n    get: function () {\n      return this._recorder.mimeType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Recorder, \"supported\", {\n    /**\n     * Test if your platform supports the Media Recorder API. If it's not available,\n     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n     */\n    get: function () {\n      return theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Recorder.prototype, \"state\", {\n    /**\n     * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n     */\n    get: function () {\n      if (this._recorder.state === \"inactive\") {\n        return \"stopped\";\n      } else if (this._recorder.state === \"paused\") {\n        return \"paused\";\n      } else {\n        return \"started\";\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Recorder.prototype.start = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var startPromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(this.state !== \"started\", \"Recorder is already started\");\n            startPromise = new Promise(function (done) {\n              var handleStart = function () {\n                _this._recorder.removeEventListener(\"start\", handleStart, false);\n\n                done();\n              };\n\n              _this._recorder.addEventListener(\"start\", handleStart, false);\n            });\n\n            this._recorder.start();\n\n            return [4\n            /*yield*/\n            , startPromise];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Recorder.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataPromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert(this.state !== \"stopped\", \"Recorder is not started\");\n            dataPromise = new Promise(function (done) {\n              var handleData = function (e) {\n                _this._recorder.removeEventListener(\"dataavailable\", handleData, false);\n\n                done(e.data);\n              };\n\n              _this._recorder.addEventListener(\"dataavailable\", handleData, false);\n            });\n\n            this._recorder.stop();\n\n            return [4\n            /*yield*/\n            , dataPromise];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Recorder.prototype.pause = function () {\n    assert(this.state === \"started\", \"Recorder must be started\");\n\n    this._recorder.pause();\n\n    return this;\n  };\n\n  Recorder.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n\n    this._stream.disconnect();\n\n    return this;\n  };\n\n  return Recorder;\n}(ToneAudioNode);\n\nexport { Recorder };","import { __extends } from \"tslib\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\n\nvar Compressor =\n/** @class */\nfunction (_super) {\n  __extends(Compressor, _super);\n\n  function Compressor() {\n    var _this = _super.call(this, optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"])) || this;\n\n    _this.name = \"Compressor\";\n    /**\n     * the compressor node\n     */\n\n    _this._compressor = _this.context.createDynamicsCompressor();\n    _this.input = _this._compressor;\n    _this.output = _this._compressor;\n    var options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n    _this.threshold = new Param({\n      minValue: _this._compressor.threshold.minValue,\n      maxValue: _this._compressor.threshold.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.threshold,\n      units: \"decibels\",\n      value: options.threshold\n    });\n    _this.attack = new Param({\n      minValue: _this._compressor.attack.minValue,\n      maxValue: _this._compressor.attack.maxValue,\n      context: _this.context,\n      param: _this._compressor.attack,\n      units: \"time\",\n      value: options.attack\n    });\n    _this.release = new Param({\n      minValue: _this._compressor.release.minValue,\n      maxValue: _this._compressor.release.maxValue,\n      context: _this.context,\n      param: _this._compressor.release,\n      units: \"time\",\n      value: options.release\n    });\n    _this.knee = new Param({\n      minValue: _this._compressor.knee.minValue,\n      maxValue: _this._compressor.knee.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.knee,\n      units: \"decibels\",\n      value: options.knee\n    });\n    _this.ratio = new Param({\n      minValue: _this._compressor.ratio.minValue,\n      maxValue: _this._compressor.ratio.maxValue,\n      context: _this.context,\n      convert: false,\n      param: _this._compressor.ratio,\n      units: \"positive\",\n      value: options.ratio\n    }); // set the defaults\n\n    readOnly(_this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n    return _this;\n  }\n\n  Compressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 0.003,\n      knee: 30,\n      ratio: 12,\n      release: 0.25,\n      threshold: -24\n    });\n  };\n\n  Object.defineProperty(Compressor.prototype, \"reduction\", {\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n     */\n    get: function () {\n      return this._compressor.reduction;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Compressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._compressor.disconnect();\n\n    this.attack.dispose();\n    this.release.dispose();\n    this.threshold.dispose();\n    this.ratio.dispose();\n    this.knee.dispose();\n    return this;\n  };\n\n  return Compressor;\n}(ToneAudioNode);\n\nexport { Compressor };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n */\n\nvar Gate =\n/** @class */\nfunction (_super) {\n  __extends(Gate, _super);\n\n  function Gate() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]))) || this;\n\n    _this.name = \"Gate\";\n    var options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n    _this._follower = new Follower({\n      context: _this.context,\n      smoothing: options.smoothing\n    });\n    _this._gt = new GreaterThan({\n      context: _this.context,\n      value: dbToGain(options.threshold)\n    });\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this._gate = _this.output = new Gain({\n      context: _this.context\n    }); // connections\n\n    _this.input.connect(_this._gate); // the control signal\n\n\n    _this.input.chain(_this._follower, _this._gt, _this._gate.gain);\n\n    return _this;\n  }\n\n  Gate.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.1,\n      threshold: -40\n    });\n  };\n\n  Object.defineProperty(Gate.prototype, \"threshold\", {\n    /**\n     * The threshold of the gate in decibels\n     */\n    get: function () {\n      return gainToDb(this._gt.value);\n    },\n    set: function (thresh) {\n      this._gt.value = dbToGain(thresh);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Gate.prototype, \"smoothing\", {\n    /**\n     * The attack/decay speed of the gate. See [[Follower.smoothing]]\n     */\n    get: function () {\n      return this._follower.smoothing;\n    },\n    set: function (smoothingTime) {\n      this._follower.smoothing = smoothingTime;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Gate.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.input.dispose();\n\n    this._follower.dispose();\n\n    this._gt.dispose();\n\n    this._gate.dispose();\n\n    return this;\n  };\n\n  return Gate;\n}(ToneAudioNode);\n\nexport { Gate };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { readOnly } from \"../../core/util/Interface\";\n;\n/**\n * Limiter will limit the loudness of an incoming signal.\n * It is composed of a [[Compressor]] with a fast attack\n * and release and max ratio. Limiters are commonly used to safeguard against\n * signal clipping. Unlike a compressor, limiters do not provide\n * smooth gain reduction and almost completely prevent\n * additional gain above the threshold.\n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n */\n\nvar Limiter =\n/** @class */\nfunction (_super) {\n  __extends(Limiter, _super);\n\n  function Limiter() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]))) || this;\n\n    _this.name = \"Limiter\";\n    var options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n    _this._compressor = _this.input = _this.output = new Compressor({\n      context: _this.context,\n      ratio: 20,\n      attack: 0,\n      release: 0,\n      threshold: options.threshold\n    });\n    _this.threshold = _this._compressor.threshold;\n    readOnly(_this, \"threshold\");\n    return _this;\n  }\n\n  Limiter.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      threshold: -12\n    });\n  };\n\n  Object.defineProperty(Limiter.prototype, \"reduction\", {\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal.\n     */\n    get: function () {\n      return this._compressor.reduction;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Limiter.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._compressor.dispose();\n\n    this.threshold.dispose();\n    return this;\n  };\n\n  return Limiter;\n}(ToneAudioNode);\n\nexport { Limiter };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n */\n\nvar MidSideCompressor =\n/** @class */\nfunction (_super) {\n  __extends(MidSideCompressor, _super);\n\n  function MidSideCompressor() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments))) || this;\n\n    _this.name = \"MidSideCompressor\";\n    var options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n    _this._midSideSplit = _this.input = new MidSideSplit({\n      context: _this.context\n    });\n    _this._midSideMerge = _this.output = new MidSideMerge({\n      context: _this.context\n    });\n    _this.mid = new Compressor(Object.assign(options.mid, {\n      context: _this.context\n    }));\n    _this.side = new Compressor(Object.assign(options.side, {\n      context: _this.context\n    }));\n\n    _this._midSideSplit.mid.chain(_this.mid, _this._midSideMerge.mid);\n\n    _this._midSideSplit.side.chain(_this.side, _this._midSideMerge.side);\n\n    readOnly(_this, [\"mid\", \"side\"]);\n    return _this;\n  }\n\n  MidSideCompressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      side: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      }\n    });\n  };\n\n  MidSideCompressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._midSideSplit.dispose();\n\n    this._midSideMerge.dispose();\n\n    return this;\n  };\n\n  return MidSideCompressor;\n}(ToneAudioNode);\n\nexport { MidSideCompressor };","import { __extends } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n */\n\nvar MultibandCompressor =\n/** @class */\nfunction (_super) {\n  __extends(MultibandCompressor, _super);\n\n  function MultibandCompressor() {\n    var _this = _super.call(this, Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments))) || this;\n\n    _this.name = \"MultibandCompressor\";\n    var options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n    _this._splitter = _this.input = new MultibandSplit({\n      context: _this.context,\n      lowFrequency: options.lowFrequency,\n      highFrequency: options.highFrequency\n    });\n    _this.lowFrequency = _this._splitter.lowFrequency;\n    _this.highFrequency = _this._splitter.highFrequency;\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this.low = new Compressor(Object.assign(options.low, {\n      context: _this.context\n    }));\n    _this.mid = new Compressor(Object.assign(options.mid, {\n      context: _this.context\n    }));\n    _this.high = new Compressor(Object.assign(options.high, {\n      context: _this.context\n    })); // connect the compressor\n\n    _this._splitter.low.chain(_this.low, _this.output);\n\n    _this._splitter.mid.chain(_this.mid, _this.output);\n\n    _this._splitter.high.chain(_this.high, _this.output);\n\n    readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    return _this;\n  }\n\n  MultibandCompressor.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      lowFrequency: 250,\n      highFrequency: 2000,\n      low: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      },\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      high: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      }\n    });\n  };\n\n  MultibandCompressor.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._splitter.dispose();\n\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.output.dispose();\n    return this;\n  };\n\n  return MultibandCompressor;\n}(ToneAudioNode);\n\nexport { MultibandCompressor };","import { __extends } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High.\n * @category Component\n */\n\nvar EQ3 =\n/** @class */\nfunction (_super) {\n  __extends(EQ3, _super);\n\n  function EQ3() {\n    var _this = _super.call(this, optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"])) || this;\n\n    _this.name = \"EQ3\";\n    /**\n     * the output\n     */\n\n    _this.output = new Gain({\n      context: _this.context\n    });\n    _this._internalChannels = [];\n    var options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n    _this.input = _this._multibandSplit = new MultibandSplit({\n      context: _this.context,\n      highFrequency: options.highFrequency,\n      lowFrequency: options.lowFrequency\n    });\n    _this._lowGain = new Gain({\n      context: _this.context,\n      gain: options.low,\n      units: \"decibels\"\n    });\n    _this._midGain = new Gain({\n      context: _this.context,\n      gain: options.mid,\n      units: \"decibels\"\n    });\n    _this._highGain = new Gain({\n      context: _this.context,\n      gain: options.high,\n      units: \"decibels\"\n    });\n    _this.low = _this._lowGain.gain;\n    _this.mid = _this._midGain.gain;\n    _this.high = _this._highGain.gain;\n    _this.Q = _this._multibandSplit.Q;\n    _this.lowFrequency = _this._multibandSplit.lowFrequency;\n    _this.highFrequency = _this._multibandSplit.highFrequency; // the frequency bands\n\n    _this._multibandSplit.low.chain(_this._lowGain, _this.output);\n\n    _this._multibandSplit.mid.chain(_this._midGain, _this.output);\n\n    _this._multibandSplit.high.chain(_this._highGain, _this.output);\n\n    readOnly(_this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n    _this._internalChannels = [_this._multibandSplit];\n    return _this;\n  }\n\n  EQ3.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      high: 0,\n      highFrequency: 2500,\n      low: 0,\n      lowFrequency: 400,\n      mid: 0\n    });\n  };\n  /**\n   * Clean up.\n   */\n\n\n  EQ3.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\n    this._multibandSplit.dispose();\n\n    this.lowFrequency.dispose();\n    this.highFrequency.dispose();\n\n    this._lowGain.dispose();\n\n    this._midGain.dispose();\n\n    this._highGain.dispose();\n\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.Q.dispose();\n    return this;\n  };\n\n  return EQ3;\n}(ToneAudioNode);\n\nexport { EQ3 };","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\n\nvar Convolver =\n/** @class */\nfunction (_super) {\n  __extends(Convolver, _super);\n\n  function Convolver() {\n    var _this = _super.call(this, optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n\n    _this.name = \"Convolver\";\n    /**\n     * The native ConvolverNode\n     */\n\n    _this._convolver = _this.context.createConvolver();\n    var options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n    _this._buffer = new ToneAudioBuffer(options.url, function (buffer) {\n      _this.buffer = buffer;\n      options.onload();\n    });\n    _this.input = new Gain({\n      context: _this.context\n    });\n    _this.output = new Gain({\n      context: _this.context\n    }); // set if it's already loaded, set it immediately\n\n    if (_this._buffer.loaded) {\n      _this.buffer = _this._buffer;\n    } // initially set normalization\n\n\n    _this.normalize = options.normalize; // connect it up\n\n    _this.input.chain(_this._convolver, _this.output);\n\n    return _this;\n  }\n\n  Convolver.getDefaults = function () {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      normalize: true,\n      onload: noOp\n    });\n  };\n  /**\n   * Load an impulse response url as an audio buffer.\n   * Decodes the audio asynchronously and invokes\n   * the callback once the audio buffer loads.\n   * @param url The url of the buffer to load. filetype support depends on the browser.\n   */\n\n\n  Convolver.prototype.load = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , this._buffer.load(url)];\n\n          case 1:\n            _a.buffer = _b.sent();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Convolver.prototype, \"buffer\", {\n    /**\n     * The convolver's buffer\n     */\n    get: function () {\n      if (this._buffer.length) {\n        return this._buffer;\n      } else {\n        return null;\n      }\n    },\n    set: function (buffer) {\n      if (buffer) {\n        this._buffer.set(buffer);\n      } // if it's already got a buffer, create a new one\n\n\n      if (this._convolver.buffer) {\n        // disconnect the old one\n        this.input.disconnect();\n\n        this._convolver.disconnect(); // create and connect a new one\n\n\n        this._convolver = this.context.createConvolver();\n        this.input.chain(this._convolver, this.output);\n      }\n\n      var buff = this._buffer.get();\n\n      this._convolver.buffer = buff ? buff : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Convolver.prototype, \"normalize\", {\n    /**\n     * The normalize property of the ConvolverNode interface is a boolean that\n     * controls whether the impulse response from the buffer will be scaled by\n     * an equal-power normalization when the buffer attribute is set, or not.\n     */\n    get: function () {\n      return this._convolver.normalize;\n    },\n    set: function (norm) {\n      this._convolver.normalize = norm;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Convolver.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._buffer.dispose();\n\n    this._convolver.disconnect();\n\n    return this;\n  };\n\n  return Convolver;\n}(ToneAudioNode);\n\nexport { Convolver };","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\n\nexport var now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\n\nexport var immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\n\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\n\nexport var Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\n\nexport var Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\n\nexport var Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\n\nexport var context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\n\nexport var loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer); // this fills in name changes from 13.x to 14.x\n\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport var Buffer = ToneAudioBuffer;\nexport var Buffers = ToneAudioBuffers;\nexport var BufferSource = ToneBufferSource;","export const testPromiseSupport = nativeContext => {\n  // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n  try {\n    // Bug #1: Safari requires a successCallback.\n    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {// Ignore the success callback.\n    });\n\n    if (promise === undefined) {\n      return false;\n    }\n\n    promise.catch(() => {// Ignore rejected errors.\n    });\n    return true;\n  } catch {// Ignore errors.\n  }\n\n  return false;\n};","export const createIndexSizeError = () => {\n  try {\n    return new DOMException('', 'IndexSizeError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 1;\n    err.name = 'IndexSizeError';\n    return err;\n  }\n};","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n  for (const lmnt of set) {\n    if (predicate(lmnt)) {\n      if (ignoreDuplicates) {\n        return false;\n      }\n\n      throw Error('The set contains at least one similar element.');\n    }\n  }\n\n  set.add(element);\n  return true;\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = audioNode => {\n  if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error('The AudioNode is already stored.');\n  }\n\n  ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach(eventListener => eventListener(true));\n};","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) : typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) : (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {\n  'use strict';\n\n  _slicedToArray = _slicedToArray && Object.prototype.hasOwnProperty.call(_slicedToArray, 'default') ? _slicedToArray['default'] : _slicedToArray;\n  _classCallCheck = _classCallCheck && Object.prototype.hasOwnProperty.call(_classCallCheck, 'default') ? _classCallCheck['default'] : _classCallCheck;\n  _createClass = _createClass && Object.prototype.hasOwnProperty.call(_createClass, 'default') ? _createClass['default'] : _createClass;\n\n  var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n    return {\n      startTime: startTime,\n      type: 'setValue',\n      value: value\n    };\n  };\n\n  var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n    return {\n      duration: duration,\n      startTime: startTime,\n      type: 'setValueCurve',\n      values: values\n    };\n  };\n\n  var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n    var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n  };\n\n  var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'exponentialRampToValue';\n  };\n\n  var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'linearRampToValue';\n  };\n\n  var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n  };\n\n  var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValue';\n  };\n\n  var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValueCurve';\n  };\n\n  var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n    var automationEvent = automationEvents[index];\n    return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n  };\n\n  var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n    return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n  };\n\n  var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelAndHold';\n  };\n\n  var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelScheduledValues';\n  };\n\n  var getEventTime = function getEventTime(automationEvent) {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n      return automationEvent.cancelTime;\n    }\n\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n      return automationEvent.endTime;\n    }\n\n    return automationEvent.startTime;\n  };\n\n  var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n\n    if (valueAtStartTime === value) {\n      return value;\n    }\n\n    if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n      return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n    }\n\n    return 0;\n  };\n\n  var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n    return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n  };\n\n  var interpolateValue = function interpolateValue(values, theoreticIndex) {\n    var lowerIndex = Math.floor(theoreticIndex);\n    var upperIndex = Math.ceil(theoreticIndex);\n\n    if (lowerIndex === upperIndex) {\n      return values[lowerIndex];\n    }\n\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n  };\n\n  var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n    var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n    var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n  };\n\n  var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setTarget';\n  };\n\n  var AutomationEventList = /*#__PURE__*/function () {\n    function AutomationEventList(defaultValue) {\n      _classCallCheck(this, AutomationEventList);\n\n      this._automationEvents = [];\n      this._currenTime = 0;\n      this._defaultValue = defaultValue;\n    }\n\n    _createClass(AutomationEventList, [{\n      key: Symbol.iterator,\n      value: function value() {\n        return this._automationEvents[Symbol.iterator]();\n      }\n    }, {\n      key: \"add\",\n      value: function add(automationEvent) {\n        var eventTime = getEventTime(automationEvent);\n\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) >= eventTime;\n          });\n\n          var removedAutomationEvent = this._automationEvents[index];\n\n          if (index !== -1) {\n            this._automationEvents = this._automationEvents.slice(0, index);\n          }\n\n          if (isCancelAndHoldAutomationEvent(automationEvent)) {\n            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n              if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                throw new Error('The internal list is malformed.');\n              }\n\n              var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n              var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n              var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n              var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n              this._automationEvents.push(truncatedAutomationEvent);\n            }\n\n            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n              this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n            }\n\n            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n              this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n            }\n          }\n        } else {\n          var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > eventTime;\n          });\n\n          var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n          if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n            return false;\n          }\n\n          var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n          if (_index === -1) {\n            this._automationEvents.push(persistentAutomationEvent);\n          } else {\n            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n              return false;\n            }\n\n            this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"flush\",\n      value: function flush(time) {\n        var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n          return getEventTime(currentAutomationEvent) > time;\n        });\n\n        if (index > 1) {\n          var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n          var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n          if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n            remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n          }\n\n          this._automationEvents = remainingAutomationEvents;\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(time) {\n        if (this._automationEvents.length === 0) {\n          return this._defaultValue;\n        }\n\n        var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n        var index = this._automationEvents.findIndex(function (automationEvent) {\n          return getEventTime(automationEvent) > time;\n        });\n\n        var nextAutomationEvent = this._automationEvents[index];\n        var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n        if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n          return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n          if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n            return getValueCurveValueAtTime(time, currentAutomationEvent);\n          }\n\n          return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n\n        if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n\n          return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n\n          return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n        }\n\n        return this._defaultValue;\n      }\n    }]);\n\n    return AutomationEventList;\n  }();\n\n  var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelAndHold'\n    };\n  };\n\n  var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelScheduledValues'\n    };\n  };\n\n  var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n    return {\n      startTime: startTime,\n      target: target,\n      timeConstant: timeConstant,\n      type: 'setTarget'\n    };\n  };\n\n  exports.AutomationEventList = AutomationEventList;\n  exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n  exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n  exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n  exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n  exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n  exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n  exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = audioNode => {\n  return CYCLE_COUNTERS.has(audioNode);\n};","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = audioNode => {\n  return getValueForKey(EVENT_LISTENERS, audioNode);\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = audioNode => {\n  if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error('The AudioNode is not stored.');\n  }\n\n  ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach(eventListener => eventListener(false));\n};","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = outputConnection => {\n  return isAudioNode(outputConnection[0]);\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = audioNode => ACTIVE_AUDIO_NODE_STORE.has(audioNode);","export const isAudioNode = audioNodeOrAudioParam => {\n  return 'context' in audioNodeOrAudioParam;\n};","export const isNativeAudioNode = nativeAudioNodeOrAudioParam => {\n  return 'context' in nativeAudioNodeOrAudioParam;\n};","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = audioParam => {\n  return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = audioParam => {\n  return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};","export const wrapEventListener = (target, eventListener) => {\n  return event => {\n    const descriptor = {\n      value: target\n    };\n    Object.defineProperties(event, {\n      currentTarget: descriptor,\n      target: descriptor\n    });\n\n    if (typeof eventListener === 'function') {\n      return eventListener.call(target, event);\n    }\n\n    return eventListener.handleEvent.call(target, event);\n  };\n};","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = audioBuffer => {\n  audioBuffer.getChannelData = (getChannelData => {\n    return channel => {\n      try {\n        return getChannelData.call(audioBuffer, channel);\n      } catch (err) {\n        if (err.code === 12) {\n          throw createIndexSizeError();\n        }\n\n        throw err;\n      }\n    };\n  })(audioBuffer.getChannelData);\n};","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = nativeAudioScheduledSourceNode => {\n  nativeAudioScheduledSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {\n        throw new RangeError(\"The parameters can't be negative.\");\n      } // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n\n\n      start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n    };\n  })(nativeAudioScheduledSourceNode.start);\n};","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = nativeAudioScheduledSourceNode => {\n  nativeAudioScheduledSourceNode.stop = (stop => {\n    return (when = 0) => {\n      if (when < 0) {\n        throw new RangeError(\"The parameter can't be negative.\");\n      }\n\n      stop.call(nativeAudioScheduledSourceNode, when);\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = nativeAudioBuffer => {\n  try {\n    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n  } catch {\n    return false;\n  }\n\n  return true;\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n    nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n    return [fakeNativeDestinationAudioNode, output, 0];\n  }\n\n  nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n  return [nativeDestinationAudioNode, output, input];\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n  } else {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n  }\n};","export function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n  if (typeof audioBuffer.copyFromChannel === 'function') {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength === 0) {\n      parent[key] = new Float32Array(128);\n    }\n\n    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset); // Bug #5: Safari does not support copyFromChannel().\n  } else {\n    const channelData = audioBuffer.getChannelData(channelNumber); // The byteLength will be 0 when the ArrayBuffer was transferred.\n\n    if (parent[key].byteLength === 0) {\n      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n    } else {\n      const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n      parent[key].set(slicedInput);\n    }\n  }\n}","export const createNestedArrays = (x, y) => {\n  const arrays = [];\n\n  for (let i = 0; i < x; i += 1) {\n    const array = [];\n    const length = typeof y === 'number' ? y : y[i];\n\n    for (let j = 0; j < length; j += 1) {\n      array.push(new Float32Array(128));\n    }\n\n    arrays.push(array);\n  }\n\n  return arrays;\n};","export const createInvalidAccessError = () => {\n  try {\n    return new DOMException('', 'InvalidAccessError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 15;\n    err.name = 'InvalidAccessError';\n    return err;\n  }\n};","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n  let prototype = Object.getPrototypeOf(object);\n\n  while (!prototype.hasOwnProperty(property)) {\n    prototype = Object.getPrototypeOf(prototype);\n  }\n\n  const {\n    get,\n    set\n  } = Object.getOwnPropertyDescriptor(prototype, property);\n  Object.defineProperty(object, property, {\n    get: createGetter(get),\n    set: createSetter(set)\n  });\n};","export const isValidLatencyHint = latencyHint => {\n  return latencyHint === undefined || typeof latencyHint === 'number' || typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback');\n};","export class ReadOnlyMap {\n  constructor(parameters) {\n    this._map = new Map(parameters);\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  forEach(callback, thisArg = null) {\n    return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n  }\n\n  get(name) {\n    return this._map.get(name);\n  }\n\n  has(name) {\n    return this._map.has(name);\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  values() {\n    return this._map.values();\n  }\n\n}","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n  if (typeof audioBuffer.copyToChannel === 'function') {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n    } // Bug #5: Safari does not support copyToChannel().\n\n  } else {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n    }\n  }\n};","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n  const inputLength = input.length;\n  let i = bufferIndex;\n\n  for (let j = 0; j < inputLength; j += 1) {\n    let y = feedforward[0] * input[j];\n\n    for (let k = 1; k < minLength; k += 1) {\n      const x = i - k & bufferLength - 1; // tslint:disable-line:no-bitwise\n\n      y += feedforward[k] * xBuffer[x];\n      y -= feedback[k] * yBuffer[x];\n    }\n\n    for (let k = minLength; k < feedforwardLength; k += 1) {\n      y += feedforward[k] * xBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise\n    }\n\n    for (let k = minLength; k < feedbackLength; k += 1) {\n      y -= feedback[k] * yBuffer[i - k & bufferLength - 1]; // tslint:disable-line:no-bitwise\n    }\n\n    xBuffer[i] = input[j];\n    yBuffer[i] = y;\n    i = i + 1 & bufferLength - 1; // tslint:disable-line:no-bitwise\n\n    output[j] = y;\n  }\n\n  return i;\n};","export const computeBufferSize = (baseLatency, sampleRate) => {\n  if (baseLatency === null) {\n    return 512;\n  }\n\n  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};","export const createUnknownError = () => {\n  try {\n    return new DOMException('', 'UnknownError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.name = 'UnknownError';\n    return err;\n  }\n};","export const isDCCurve = curve => {\n  if (curve === null) {\n    return false;\n  }\n\n  const length = curve.length;\n\n  if (length % 2 !== 0) {\n    return curve[Math.floor(length / 2)] !== 0;\n  }\n\n  return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};","export * from './analyser-node';\nexport * from './analyser-options';\nexport * from './audio-buffer';\nexport * from './audio-buffer-options';\nexport * from './audio-buffer-source-node';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-options';\nexport * from './audio-context';\nexport * from './audio-context-options';\nexport * from './audio-destination-node';\nexport * from './audio-listener';\nexport * from './audio-node';\nexport * from './audio-node-options';\nexport * from './audio-node-renderer';\nexport * from './audio-param';\nexport * from './audio-param-descriptor';\nexport * from './audio-param-renderer';\nexport * from './audio-scheduled-source-node';\nexport * from './audio-scheduled-source-node-event-map';\nexport * from './audio-worklet';\nexport * from './audio-worklet-node';\nexport * from './audio-worklet-node-event-map';\nexport * from './audio-worklet-node-options';\nexport * from './audio-worklet-processor';\nexport * from './audio-worklet-processor-constructor';\nexport * from './automation';\nexport * from './base-audio-context';\nexport * from './biquad-filter-node';\nexport * from './biquad-filter-options';\nexport * from './channel-merger-options';\nexport * from './channel-splitter-options';\nexport * from './common-audio-context';\nexport * from './common-offline-audio-context';\nexport * from './constant-source-node';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-options';\nexport * from './convolver-node';\nexport * from './convolver-options';\nexport * from './delay-node';\nexport * from './delay-options';\nexport * from './dynamics-compressor-node';\nexport * from './dynamics-compressor-options';\nexport * from './gain-node';\nexport * from './gain-options';\nexport * from './iir-filter-node';\nexport * from './iir-filter-options';\nexport * from './media-element-audio-source-node';\nexport * from './media-element-audio-source-options';\nexport * from './media-stream-audio-destination-node';\nexport * from './media-stream-audio-source-node';\nexport * from './media-stream-audio-source-options';\nexport * from './media-stream-track-audio-source-node';\nexport * from './media-stream-track-audio-source-options';\nexport * from './minimal-audio-context';\nexport * from './minimal-base-audio-context';\nexport * from './minimal-base-audio-context-event-map';\nexport * from './minimal-offline-audio-context';\nexport * from './native-audio-node-faker';\nexport * from './native-audio-worklet-node-faker';\nexport * from './native-constant-source-node-faker';\nexport * from './native-convolver-node-faker';\nexport * from './native-iir-filter-node-faker';\nexport * from './native-panner-node-faker';\nexport * from './native-stereo-panner-node-faker';\nexport * from './native-wave-shaper-node-faker';\nexport * from './offline-audio-completion-event';\nexport * from './offline-audio-context';\nexport * from './offline-audio-context-constructor';\nexport * from './offline-audio-context-options';\nexport * from './oscillator-node';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-options';\nexport * from './panner-node';\nexport * from './panner-options';\nexport * from './periodic-wave';\nexport * from './periodic-wave-constraints';\nexport * from './periodic-wave-options';\nexport * from './read-only-map';\nexport * from './stereo-panner-node';\nexport * from './stereo-panner-options';\nexport * from './wave-shaper-node';\nexport * from './wave-shaper-options';\nexport * from './worklet-options';","export * from './abort-error-factory';\nexport * from './active-input-connection';\nexport * from './add-audio-node-connections-factory';\nexport * from './add-audio-node-connections-function';\nexport * from './add-audio-param-connections-factory';\nexport * from './add-audio-param-connections-function';\nexport * from './add-audio-worklet-module-factory';\nexport * from './add-audio-worklet-module-function';\nexport * from './add-silent-connection-factory';\nexport * from './add-silent-connection-function';\nexport * from './add-unrendered-audio-worklet-node-factory';\nexport * from './add-unrendered-audio-worklet-node-function';\nexport * from './analyser-node-constructor';\nexport * from './analyser-node-constructor-factory';\nexport * from './analyser-node-renderer-factory';\nexport * from './analyser-node-renderer-factory-factory';\nexport * from './any-audio-buffer';\nexport * from './any-context';\nexport * from './audio-buffer-constructor';\nexport * from './audio-buffer-constructor-factory';\nexport * from './audio-buffer-source-node-constructor';\nexport * from './audio-buffer-source-node-constructor-factory';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-node-renderer-factory';\nexport * from './audio-buffer-source-node-renderer-factory-factory';\nexport * from './audio-buffer-store';\nexport * from './audio-context-constructor';\nexport * from './audio-context-constructor-factory';\nexport * from './audio-context-latency-category';\nexport * from './audio-context-state';\nexport * from './audio-destination-node-constructor';\nexport * from './audio-destination-node-constructor-factory';\nexport * from './audio-destination-node-renderer-factory';\nexport * from './audio-listener-factory';\nexport * from './audio-listener-factory-factory';\nexport * from './audio-node-connections';\nexport * from './audio-node-connections-store';\nexport * from './audio-node-constructor';\nexport * from './audio-node-constructor-factory';\nexport * from './audio-node-output-connection';\nexport * from './audio-node-renderer';\nexport * from './audio-node-store';\nexport * from './audio-param-audio-node-store';\nexport * from './audio-param-connections';\nexport * from './audio-param-connections-store';\nexport * from './audio-param-factory';\nexport * from './audio-param-factory-factory';\nexport * from './audio-param-map';\nexport * from './audio-param-output-connection';\nexport * from './audio-param-renderer-factory';\nexport * from './audio-param-store';\nexport * from './audio-worklet-node-constructor';\nexport * from './audio-worklet-node-constructor-factory';\nexport * from './audio-worklet-node-renderer-factory';\nexport * from './audio-worklet-node-renderer-factory-factory';\nexport * from './auxiliary-gain-node-store';\nexport * from './base-audio-context-constructor';\nexport * from './base-audio-context-constructor-factory';\nexport * from './biquad-filter-node-constructor';\nexport * from './biquad-filter-node-constructor-factory';\nexport * from './biquad-filter-node-renderer-factory';\nexport * from './biquad-filter-node-renderer-factory-factory';\nexport * from './biquad-filter-type';\nexport * from './channel-count-mode';\nexport * from './channel-interpretation';\nexport * from './channel-merger-node-constructor';\nexport * from './channel-merger-node-constructor-factory';\nexport * from './channel-merger-node-renderer-factory';\nexport * from './channel-merger-node-renderer-factory-factory';\nexport * from './channel-splitter-node-constructor';\nexport * from './channel-splitter-node-constructor-factory';\nexport * from './channel-splitter-node-renderer-factory';\nexport * from './channel-splitter-node-renderer-factory-factory';\nexport * from './cache-test-result-factory';\nexport * from './cache-test-result-function';\nexport * from './connect-audio-param-factory';\nexport * from './connect-audio-param-function';\nexport * from './connect-multiple-outputs-factory';\nexport * from './connect-multiple-outputs-function';\nexport * from './connect-native-audio-node-to-native-audio-node-function';\nexport * from './connected-native-audio-buffer-source-node-factory';\nexport * from './connected-native-audio-buffer-source-node-factory-factory';\nexport * from './constant-source-node-constructor';\nexport * from './constant-source-node-constructor-factory';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-node-renderer-factory';\nexport * from './constant-source-node-renderer-factory-factory';\nexport * from './constructor';\nexport * from './context';\nexport * from './context-store';\nexport * from './convert-number-to-unsigned-long-factory';\nexport * from './convert-number-to-unsigned-long-function';\nexport * from './convolver-node-constructor';\nexport * from './convolver-node-constructor-factory';\nexport * from './convolver-node-renderer-factory';\nexport * from './convolver-node-renderer-factory-factory';\nexport * from './create-native-offline-audio-context-factory';\nexport * from './create-native-offline-audio-context-function';\nexport * from './cycle-counters';\nexport * from './data-clone-error-factory';\nexport * from './decode-audio-data-factory';\nexport * from './decode-audio-data-function';\nexport * from './decode-error-callback';\nexport * from './decode-success-callback';\nexport * from './decrement-cycle-counter-factory';\nexport * from './decrement-cycle-counter-function';\nexport * from './delay-node-constructor';\nexport * from './delay-node-constructor-factory';\nexport * from './delay-node-renderer-factory';\nexport * from './delay-node-renderer-factory-factory';\nexport * from './delete-unrendered-audio-worklet-node-factory';\nexport * from './delete-unrendered-audio-worklet-node-function';\nexport * from './detect-cycles-factory';\nexport * from './detect-cycles-function';\nexport * from './disconnect-multiple-outputs-factory';\nexport * from './disconnect-multiple-outputs-function';\nexport * from './disconnect-native-audio-node-from-native-audio-node-function';\nexport * from './distance-model-type';\nexport * from './dynamics-compressor-node-constructor';\nexport * from './dynamics-compressor-node-constructor-factory';\nexport * from './dynamics-compressor-node-renderer-factory';\nexport * from './dynamics-compressor-node-renderer-factory-factory';\nexport * from './encoding-error-factory';\nexport * from './error-event-handler';\nexport * from './evaluate-audio-worklet-global-scope-function';\nexport * from './evaluate-source-factory';\nexport * from './evaluate-source-function';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './expose-current-frame-and-current-time-factory';\nexport * from './expose-current-frame-and-current-time-function';\nexport * from './fetch-source-factory';\nexport * from './fetch-source-function';\nexport * from './gain-node-constructor';\nexport * from './gain-node-constructor-factory';\nexport * from './gain-node-renderer-factory';\nexport * from './gain-node-renderer-factory-factory';\nexport * from './get-audio-node-connections-function';\nexport * from './get-audio-node-renderer-factory';\nexport * from './get-audio-node-renderer-function';\nexport * from './get-audio-param-connections-function';\nexport * from './get-audio-param-renderer-factory';\nexport * from './get-audio-param-renderer-function';\nexport * from './get-backup-native-context-factory';\nexport * from './get-backup-native-context-function';\nexport * from './get-native-audio-node-function';\nexport * from './get-native-audio-param-function';\nexport * from './get-native-context-function';\nexport * from './get-native-context-factory';\nexport * from './get-unrendered-audio-worklet-nodes-factory';\nexport * from './get-unrendered-audio-worklet-nodes-function';\nexport * from './get-value-for-key-function';\nexport * from './iir-filter-node-constructor';\nexport * from './iir-filter-node-constructor-factory';\nexport * from './iir-filter-node-renderer-factory';\nexport * from './iir-filter-node-renderer-factory-factory';\nexport * from './increment-cycle-counter-factory';\nexport * from './increment-cycle-counter-factory-factory';\nexport * from './increment-cycle-counter-function';\nexport * from './index-size-error-factory';\nexport * from './insert-element-in-set-function';\nexport * from './internal-state-event-listener';\nexport * from './invalid-access-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-active-audio-node-function';\nexport * from './is-any-audio-context-factory';\nexport * from './is-any-audio-context-function';\nexport * from './is-any-audio-node-factory';\nexport * from './is-any-audio-node-function';\nexport * from './is-any-audio-param-factory';\nexport * from './is-any-audio-param-function';\nexport * from './is-any-offline-audio-context-factory';\nexport * from './is-any-offline-audio-context-function';\nexport * from './is-dc-curve-function';\nexport * from './is-native-audio-context-factory';\nexport * from './is-native-audio-context-function';\nexport * from './is-native-audio-node-factory';\nexport * from './is-native-audio-node-function';\nexport * from './is-native-audio-param-factory';\nexport * from './is-native-audio-param-function';\nexport * from './is-native-context-factory';\nexport * from './is-native-context-function';\nexport * from './is-native-offline-audio-context-factory';\nexport * from './is-native-offline-audio-context-function';\nexport * from './is-part-of-a-cycle-function';\nexport * from './is-secure-context-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-element-audio-source-node-constructor';\nexport * from './media-element-audio-source-node-constructor-factory';\nexport * from './media-stream-audio-destination-node-constructor';\nexport * from './media-stream-audio-destination-node-constructor-factory';\nexport * from './media-stream-audio-source-node-constructor';\nexport * from './media-stream-audio-source-node-constructor-factory';\nexport * from './media-stream-track-audio-source-node-constructor';\nexport * from './media-stream-track-audio-source-node-constructor-factory';\nexport * from './minimal-audio-context-constructor';\nexport * from './minimal-audio-context-constructor-factory';\nexport * from './minimal-base-audio-context-constructor';\nexport * from './minimal-base-audio-context-constructor-factory';\nexport * from './minimal-offline-audio-context-constructor';\nexport * from './minimal-offline-audio-context-constructor-factory';\nexport * from './monitor-connections-factory';\nexport * from './monitor-connections-function';\nexport * from './native-analyser-node';\nexport * from './native-analyser-node-factory';\nexport * from './native-analyser-node-factory-factory';\nexport * from './native-audio-buffer';\nexport * from './native-audio-buffer-constructor';\nexport * from './native-audio-buffer-constructor-factory';\nexport * from './native-audio-buffer-source-node';\nexport * from './native-audio-buffer-source-node-factory';\nexport * from './native-audio-buffer-source-node-factory-factory';\nexport * from './native-audio-context';\nexport * from './native-audio-context-constructor';\nexport * from './native-audio-context-constructor-factory';\nexport * from './native-audio-destination-node';\nexport * from './native-audio-destination-node-factory';\nexport * from './native-audio-destination-node-factory-factory';\nexport * from './native-audio-listener';\nexport * from './native-audio-node';\nexport * from './native-audio-node-factory';\nexport * from './native-audio-node-factory-factory';\nexport * from './native-audio-param';\nexport * from './native-audio-param-map';\nexport * from './native-audio-worklet';\nexport * from './native-audio-worklet-node';\nexport * from './native-audio-worklet-node-constructor';\nexport * from './native-audio-worklet-node-constructor-factory';\nexport * from './native-audio-worklet-node-factory';\nexport * from './native-audio-worklet-node-factory-factory';\nexport * from './native-audio-worklet-node-faker-factory';\nexport * from './native-audio-worklet-node-faker-factory-factory';\nexport * from './native-audio-worklet-node-options';\nexport * from './native-biquad-filter-node';\nexport * from './native-biquad-filter-node-factory';\nexport * from './native-biquad-filter-node-factory-factory';\nexport * from './native-channel-merger-node';\nexport * from './native-channel-merger-node-factory';\nexport * from './native-channel-merger-node-factory-factory';\nexport * from './native-channel-splitter-node';\nexport * from './native-channel-splitter-node-factory';\nexport * from './native-channel-splitter-node-factory-factory';\nexport * from './native-constant-source-node';\nexport * from './native-constant-source-node-factory';\nexport * from './native-constant-source-node-factory-factory';\nexport * from './native-constant-source-node-faker-factory';\nexport * from './native-constant-source-node-faker-factory-factory';\nexport * from './native-context';\nexport * from './native-convolver-node';\nexport * from './native-convolver-node-factory';\nexport * from './native-convolver-node-factory-factory';\nexport * from './native-convolver-node-faker-factory';\nexport * from './native-convolver-node-faker-factory-factory';\nexport * from './native-delay-node-factory';\nexport * from './native-delay-node-factory-factory';\nexport * from './native-delay-node';\nexport * from './native-dynamics-compressor-node';\nexport * from './native-dynamics-compressor-node-factory';\nexport * from './native-dynamics-compressor-node-factory-factory';\nexport * from './native-event-target';\nexport * from './native-gain-node';\nexport * from './native-gain-node-factory';\nexport * from './native-gain-node-factory-factory';\nexport * from './native-iir-filter-node';\nexport * from './native-iir-filter-node-factory';\nexport * from './native-iir-filter-node-factory-factory';\nexport * from './native-iir-filter-node-faker-factory';\nexport * from './native-iir-filter-node-faker-factory-factory';\nexport * from './native-media-element-audio-source-node';\nexport * from './native-media-element-audio-source-node-factory';\nexport * from './native-media-element-audio-source-node-factory-factory';\nexport * from './native-media-stream-audio-destination-node';\nexport * from './native-media-stream-audio-destination-node-factory';\nexport * from './native-media-stream-audio-destination-node-factory-factory';\nexport * from './native-media-stream-audio-source-node';\nexport * from './native-media-stream-audio-source-node-factory';\nexport * from './native-media-stream-audio-source-node-factory-factory';\nexport * from './native-media-stream-track-audio-source-node';\nexport * from './native-media-stream-track-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node-factory-factory';\nexport * from './native-offline-audio-context';\nexport * from './native-offline-audio-context-constructor';\nexport * from './native-offline-audio-context-constructor-factory';\nexport * from './native-oscillator-node';\nexport * from './native-oscillator-node-factory';\nexport * from './native-oscillator-node-factory-factory';\nexport * from './native-panner-node';\nexport * from './native-panner-node-factory';\nexport * from './native-panner-node-factory-factory';\nexport * from './native-panner-node-faker-factory';\nexport * from './native-panner-node-faker-factory-factory';\nexport * from './native-periodic-wave';\nexport * from './native-periodic-wave-factory';\nexport * from './native-periodic-wave-factory-factory';\nexport * from './native-script-processor-node';\nexport * from './native-script-processor-node-factory';\nexport * from './native-script-processor-node-factory-factory';\nexport * from './native-stereo-panner-node';\nexport * from './native-stereo-panner-node-factory';\nexport * from './native-stereo-panner-node-factory-factory';\nexport * from './native-stereo-panner-node-faker-factory';\nexport * from './native-stereo-panner-node-faker-factory-factory';\nexport * from './native-wave-shaper-node';\nexport * from './native-wave-shaper-node-factory';\nexport * from './native-wave-shaper-node-factory-factory';\nexport * from './native-wave-shaper-node-faker-factory';\nexport * from './native-wave-shaper-node-faker-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './offline-audio-context-constructor-factory';\nexport * from './oscillator-node-constructor';\nexport * from './oscillator-node-constructor-factory';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-node-renderer-factory';\nexport * from './oscillator-node-renderer-factory-factory';\nexport * from './oscillator-type';\nexport * from './output-connection';\nexport * from './over-sample-type';\nexport * from './overwrite-accessors-function';\nexport * from './panner-node-constructor';\nexport * from './panner-node-constructor-factory';\nexport * from './panner-node-renderer-factory';\nexport * from './panner-node-renderer-factory-factory';\nexport * from './panning-model-type';\nexport * from './passive-audio-node-input-connection';\nexport * from './passive-audio-param-input-connection';\nexport * from './periodic-wave-constructor';\nexport * from './periodic-wave-constructor-factory';\nexport * from './render-automation-factory';\nexport * from './render-automation-function';\nexport * from './render-inputs-of-audio-node-factory';\nexport * from './render-inputs-of-audio-node-function';\nexport * from './render-inputs-of-audio-param-factory';\nexport * from './render-inputs-of-audio-param-function';\nexport * from './render-native-offline-audio-context-factory';\nexport * from './render-native-offline-audio-context-function';\nexport * from './start-rendering-factory';\nexport * from './start-rendering-function';\nexport * from './stereo-panner-node-constructor';\nexport * from './stereo-panner-node-constructor-factory';\nexport * from './stereo-panner-node-renderer-factory-factory';\nexport * from './stereo-panner-node-renderer-factory';\nexport * from './test-audio-buffer-copy-channel-methods-subarray-support-factory';\nexport * from './test-audio-buffer-constructor-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-duration-parameter-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-offset-clamping-support-factory';\nexport * from './test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory';\nexport * from './test-audio-context-close-method-support-factory';\nexport * from './test-audio-context-decode-audio-data-method-type-error-support-factory';\nexport * from './test-audio-context-options-support-factory';\nexport * from './test-audio-node-connect-method-support-factory';\nexport * from './test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory';\nexport * from './test-audio-worklet-processor-no-outputs-support-factory';\nexport * from './test-channel-merger-node-channel-count-support-factory';\nexport * from './test-constant-source-node-accurate-scheduling-support-factory';\nexport * from './test-convolver-node-buffer-reassignability-support-factory';\nexport * from './test-is-secure-context-support-factory';\nexport * from './test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nexport * from './test-offline-audio-context-current-time-support-factory';\nexport * from './test-stereo-panner-node-default-value-support-factory';\nexport * from './typed-array';\nexport * from './unknown-error-factory';\nexport * from './unrendered-audio-worklet-node-store';\nexport * from './unrendered-audio-worklet-nodes';\nexport * from './wave-shaper-node-constructor';\nexport * from './wave-shaper-node-constructor-factory';\nexport * from './wave-shaper-node-renderer-factory-factory';\nexport * from './wave-shaper-node-renderer-factory';\nexport * from './window-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-function';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\nexport * from './wrap-audio-buffer-source-node-start-method-offset-clamping-function';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-function';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function';\nexport * from './wrap-channel-merger-node-factory';\nexport * from './wrap-channel-merger-node-function';\nexport * from './wrap-event-listener-function';","export const createAbortError = () => {\n  try {\n    return new DOMException('', 'AbortError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 20;\n    err.name = 'AbortError';\n    return err;\n  }\n};","export const createAddAudioNodeConnections = audioNodeConnectionsStore => {\n  return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n    const activeInputs = [];\n\n    for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n      activeInputs.push(new Set());\n    }\n\n    audioNodeConnectionsStore.set(audioNode, {\n      activeInputs,\n      outputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioNodeRenderer\n    });\n  };\n};","export const createAddAudioParamConnections = audioParamConnectionsStore => {\n  return (audioParam, audioParamRenderer) => {\n    audioParamConnectionsStore.set(audioParam, {\n      activeInputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioParamRenderer\n    });\n  };\n};","export const createAddSilentConnection = createNativeGainNode => {\n  return (nativeContext, nativeAudioScheduledSourceNode) => {\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode)\n    /*\n     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n     * used here to make sure to connect the right destination.\n     */\n    .connect(nativeGainNode.context.destination);\n\n    const disconnect = () => {\n      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n  };\n};","export const createAddUnrenderedAudioWorkletNode = getUnrenderedAudioWorkletNodes => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  fftSize: 2048,\n  maxDecibels: -30,\n  minDecibels: -100,\n  smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class AnalyserNode extends audionNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n      const analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;\n      super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n      this._nativeAnalyserNode = nativeAnalyserNode;\n    }\n\n    get fftSize() {\n      return this._nativeAnalyserNode.fftSize;\n    }\n\n    set fftSize(value) {\n      this._nativeAnalyserNode.fftSize = value;\n    }\n\n    get frequencyBinCount() {\n      return this._nativeAnalyserNode.frequencyBinCount;\n    }\n\n    get maxDecibels() {\n      return this._nativeAnalyserNode.maxDecibels;\n    }\n\n    set maxDecibels(value) {\n      // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n      const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n      this._nativeAnalyserNode.maxDecibels = value;\n\n      if (!(value > this._nativeAnalyserNode.minDecibels)) {\n        this._nativeAnalyserNode.maxDecibels = maxDecibels;\n        throw createIndexSizeError();\n      }\n    }\n\n    get minDecibels() {\n      return this._nativeAnalyserNode.minDecibels;\n    }\n\n    set minDecibels(value) {\n      // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n      const minDecibels = this._nativeAnalyserNode.minDecibels;\n      this._nativeAnalyserNode.minDecibels = value;\n\n      if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n        this._nativeAnalyserNode.minDecibels = minDecibels;\n        throw createIndexSizeError();\n      }\n    }\n\n    get smoothingTimeConstant() {\n      return this._nativeAnalyserNode.smoothingTimeConstant;\n    }\n\n    set smoothingTimeConstant(value) {\n      this._nativeAnalyserNode.smoothingTimeConstant = value;\n    }\n\n    getByteFrequencyData(array) {\n      this._nativeAnalyserNode.getByteFrequencyData(array);\n    }\n\n    getByteTimeDomainData(array) {\n      this._nativeAnalyserNode.getByteTimeDomainData(array);\n    }\n\n    getFloatFrequencyData(array) {\n      this._nativeAnalyserNode.getFloatFrequencyData(array);\n    }\n\n    getFloatTimeDomainData(array) {\n      this._nativeAnalyserNode.getFloatTimeDomainData(array);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAnalyserNodes = new WeakMap();\n\n    const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAnalyserNode = getNativeAudioNode(proxy); // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n      if (!nativeAnalyserNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAnalyserNode.channelCount,\n          channelCountMode: nativeAnalyserNode.channelCountMode,\n          channelInterpretation: nativeAnalyserNode.channelInterpretation,\n          fftSize: nativeAnalyserNode.fftSize,\n          maxDecibels: nativeAnalyserNode.maxDecibels,\n          minDecibels: nativeAnalyserNode.minDecibels,\n          smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n        };\n        nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n      return nativeAnalyserNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAnalyserNode !== undefined) {\n          return Promise.resolve(renderedNativeAnalyserNode);\n        }\n\n        return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  let nativeOfflineAudioContext = null;\n  return class AudioBuffer {\n    constructor(options) {\n      if (nativeOfflineAudioContextConstructor === null) {\n        throw new Error('Missing the native OfflineAudioContext constructor.');\n      }\n\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n\n      if (nativeOfflineAudioContext === null) {\n        nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n      }\n      /*\n       * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n       * factory function. But since Firefox also supports the constructor everything should be fine.\n       */\n\n\n      const audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({\n        length,\n        numberOfChannels,\n        sampleRate\n      }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate); // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n\n      if (audioBuffer.numberOfChannels === 0) {\n        throw createNotSupportedError();\n      } // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n      // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n\n\n      if (typeof audioBuffer.copyFromChannel !== 'function') {\n        wrapAudioBufferCopyChannelMethods(audioBuffer);\n        wrapAudioBufferGetChannelDataMethod(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n      } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n      }\n\n      audioBufferStore.add(audioBuffer);\n      /*\n       * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n       * (Offline)AudioContexts.\n       */\n\n      return audioBuffer;\n    }\n\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore.has(instance);\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  // Bug #149: Safari does not yet support the detune AudioParam.\n  loop: false,\n  loopEnd: 0,\n  loopStart: 0,\n  playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class AudioBufferSourceNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;\n      super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n      this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n      this._isBufferNullified = false;\n      this._isBufferSet = options.buffer !== null && options.buffer !== undefined;\n      this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n      this._onended = null; // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n\n      return this._nativeAudioBufferSourceNode.buffer;\n    }\n\n    set buffer(value) {\n      // Bug #71: Edge does not allow to set the buffer to null.\n      try {\n        this._nativeAudioBufferSourceNode.buffer = value;\n      } catch (err) {\n        if (value !== null || err.code !== 17) {\n          throw err;\n        } // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n\n\n        if (this._nativeAudioBufferSourceNode.buffer !== null) {\n          const buffer = this._nativeAudioBufferSourceNode.buffer;\n          const numberOfChannels = buffer.numberOfChannels;\n\n          for (let i = 0; i < numberOfChannels; i += 1) {\n            buffer.getChannelData(i).fill(0);\n          }\n\n          this._isBufferNullified = true;\n        }\n      } // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n\n\n      if (value !== null) {\n        if (this._isBufferSet) {\n          throw createInvalidStateError();\n        }\n\n        this._isBufferSet = true;\n      }\n    }\n\n    get loop() {\n      return this._nativeAudioBufferSourceNode.loop;\n    }\n\n    set loop(value) {\n      this._nativeAudioBufferSourceNode.loop = value;\n    }\n\n    get loopEnd() {\n      return this._nativeAudioBufferSourceNode.loopEnd;\n    }\n\n    set loopEnd(value) {\n      this._nativeAudioBufferSourceNode.loopEnd = value;\n    }\n\n    get loopStart() {\n      return this._nativeAudioBufferSourceNode.loopStart;\n    }\n\n    set loopStart(value) {\n      this._nativeAudioBufferSourceNode.loopStart = value;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeAudioBufferSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    get playbackRate() {\n      return this._playbackRate;\n    }\n\n    start(when = 0, offset = 0, duration) {\n      this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeAudioBufferSourceNode.stop(when);\n\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioBufferSourceNodes = new WeakMap();\n    let start = null;\n    let stop = null;\n\n    const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeAudioBufferSourceNode.buffer,\n          channelCount: nativeAudioBufferSourceNode.channelCount,\n          channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n          channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n          // Bug #149: Safari does not yet support the detune AudioParam.\n          loop: nativeAudioBufferSourceNode.loop,\n          loopEnd: nativeAudioBufferSourceNode.loopEnd,\n          loopStart: nativeAudioBufferSourceNode.loopStart,\n          playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n        };\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeAudioBufferSourceNode.start(...start);\n        }\n\n        if (stop !== null) {\n          nativeAudioBufferSourceNode.stop(stop);\n        }\n      }\n\n      renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n      } else {\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n      return nativeAudioBufferSourceNode;\n    };\n\n    return {\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioBufferSourceNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioBufferSourceNode);\n        }\n\n        return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n  return class AudioContext extends baseAudioContextConstructor {\n    constructor(options = {}) {\n      if (nativeAudioContextConstructor === null) {\n        throw new Error('Missing the native AudioContext constructor.');\n      }\n\n      const nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.\n\n      if (nativeAudioContext === null) {\n        throw createUnknownError();\n      } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n\n\n      if (!isValidLatencyHint(options.latencyHint)) {\n        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n      } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n\n\n      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n        throw createNotSupportedError();\n      }\n\n      super(nativeAudioContext, 2);\n      const {\n        latencyHint\n      } = options;\n      const {\n        sampleRate\n      } = nativeAudioContext; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n\n      this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :\n      /*\n       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n       * ScriptProcessorNode.\n       */\n      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;\n      this._nativeAudioContext = nativeAudioContext;\n      this._state = null;\n      /*\n       * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n       * to 'running'.\n       */\n\n      if (nativeAudioContext.state === 'running') {\n        this._state = 'suspended';\n\n        const revokeState = () => {\n          if (this._state === 'suspended') {\n            this._state = null;\n          }\n\n          nativeAudioContext.removeEventListener('statechange', revokeState);\n        };\n\n        nativeAudioContext.addEventListener('statechange', revokeState);\n      }\n    }\n\n    get baseLatency() {\n      return this._baseLatency;\n    }\n\n    get state() {\n      return this._state !== null ? this._state : this._nativeAudioContext.state;\n    }\n\n    close() {\n      // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n      if (this.state === 'closed') {\n        return this._nativeAudioContext.close().then(() => {\n          throw createInvalidStateError();\n        });\n      } // Bug #34: If the state was set to suspended before it should be revoked now.\n\n\n      if (this._state === 'suspended') {\n        this._state = null;\n      }\n\n      return this._nativeAudioContext.close();\n      /*\n       * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n       * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n       */\n    }\n\n    createMediaElementSource(mediaElement) {\n      return new mediaElementAudioSourceNodeConstructor(this, {\n        mediaElement\n      });\n    }\n\n    createMediaStreamDestination() {\n      return new mediaStreamAudioDestinationNodeConstructor(this);\n    }\n\n    createMediaStreamSource(mediaStream) {\n      return new mediaStreamAudioSourceNodeConstructor(this, {\n        mediaStream\n      });\n    }\n\n    createMediaStreamTrackSource(mediaStreamTrack) {\n      return new mediaStreamTrackAudioSourceNodeConstructor(this, {\n        mediaStreamTrack\n      });\n    }\n\n    resume() {\n      if (this._state === 'suspended') {\n        return new Promise((resolve, reject) => {\n          const resolvePromise = () => {\n            this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n            if (this._nativeAudioContext.state === 'running') {\n              resolve();\n            } else {\n              this.resume().then(resolve, reject);\n            }\n          };\n\n          this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n        });\n      }\n\n      return this._nativeAudioContext.resume().catch(err => {\n        // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined || err.code === 15) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n    suspend() {\n      return this._nativeAudioContext.suspend().catch(err => {\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n  return class AudioDestinationNode extends audioNodeConstructor {\n    constructor(context, channelCount) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      this._isNodeOfNativeOfflineAudioContext = isOffline;\n      this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n    }\n\n    get channelCount() {\n      return this._nativeAudioDestinationNode.channelCount;\n    }\n\n    set channelCount(value) {\n      // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n      // Bug #54: Firefox does throw an IndexSizeError.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      } // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n\n\n      if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n        throw createIndexSizeError();\n      }\n\n      this._nativeAudioDestinationNode.channelCount = value;\n    }\n\n    get channelCountMode() {\n      return this._nativeAudioDestinationNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      // Bug #53: No browser does throw an exception yet.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      }\n\n      this._nativeAudioDestinationNode.channelCountMode = value;\n    }\n\n    get maxChannelCount() {\n      return this._nativeAudioDestinationNode.maxChannelCount;\n    }\n\n  };\n};","export const createAudioDestinationNodeRenderer = renderInputsOfAudioNode => {\n  let nativeAudioDestinationNodePromise = null;\n\n  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n    await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n    return nativeAudioDestinationNode;\n  };\n\n  return {\n    render(proxy, nativeOfflineAudioContext, trace) {\n      if (nativeAudioDestinationNodePromise === null) {\n        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n      return nativeAudioDestinationNodePromise;\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n  return (context, nativeContext) => {\n    const nativeListener = nativeContext.listener; // Bug #117: Only Chrome & Opera support the new interface already.\n\n    const createFakeAudioParams = () => {\n      const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'speakers',\n        numberOfInputs: 9\n      });\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n      const createFakeAudioParam = (input, value) => {\n        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n          channelCount: 1,\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          offset: value\n        });\n        constantSourceNode.connect(channelMergerNode, 0, input); // @todo This should be stopped when the context is closed.\n\n        constantSourceNode.start();\n        Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n          get() {\n            return value;\n          }\n\n        });\n        /*\n         * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n         * minValue for GainNodes.\n         */\n\n        return createAudioParam({\n          context\n        }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      };\n\n      let lastOrientation = [0, 0, -1, 0, 1, 0];\n      let lastPosition = [0, 0, 0];\n\n      scriptProcessorNode.onaudioprocess = ({\n        inputBuffer\n      }) => {\n        const orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0], inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];\n\n        if (orientation.some((value, index) => value !== lastOrientation[index])) {\n          nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n          lastOrientation = orientation;\n        }\n\n        const positon = [inputBuffer.getChannelData(6)[0], inputBuffer.getChannelData(7)[0], inputBuffer.getChannelData(8)[0]];\n\n        if (positon.some((value, index) => value !== lastPosition[index])) {\n          nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n          lastPosition = positon;\n        }\n      };\n\n      channelMergerNode.connect(scriptProcessorNode);\n      return {\n        forwardX: createFakeAudioParam(0, 0),\n        forwardY: createFakeAudioParam(1, 0),\n        forwardZ: createFakeAudioParam(2, -1),\n        positionX: createFakeAudioParam(6, 0),\n        positionY: createFakeAudioParam(7, 0),\n        positionZ: createFakeAudioParam(8, 0),\n        upX: createFakeAudioParam(3, 0),\n        upY: createFakeAudioParam(4, 1),\n        upZ: createFakeAudioParam(5, 0)\n      };\n    };\n\n    const {\n      forwardX,\n      forwardY,\n      forwardZ,\n      positionX,\n      positionY,\n      positionZ,\n      upX,\n      upY,\n      upZ\n    } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n    return {\n      get forwardX() {\n        return forwardX;\n      },\n\n      get forwardY() {\n        return forwardY;\n      },\n\n      get forwardZ() {\n        return forwardZ;\n      },\n\n      get positionX() {\n        return positionX;\n      },\n\n      get positionY() {\n        return positionY;\n      },\n\n      get positionZ() {\n        return positionZ;\n      },\n\n      get upX() {\n        return upX;\n      },\n\n      get upY() {\n        return upY;\n      },\n\n      get upZ() {\n        return upZ;\n      }\n\n    };\n  };\n};","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n  return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n    const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n    const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n    const audioParam = {\n      get defaultValue() {\n        return nativeAudioParam.defaultValue;\n      },\n\n      get maxValue() {\n        return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n      },\n\n      get minValue() {\n        return minValue === null ? nativeAudioParam.minValue : minValue;\n      },\n\n      get value() {\n        return nativeAudioParam.value;\n      },\n\n      set value(value) {\n        nativeAudioParam.value = value; // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n\n        audioParam.setValueAtTime(value, audioNode.context.currentTime);\n      },\n\n      cancelAndHoldAtTime(cancelTime) {\n        // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n        if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n        } else {\n          const previousLastEvent = Array.from(automationEventList).pop();\n\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          const currentLastEvent = Array.from(automationEventList).pop();\n          nativeAudioParam.cancelScheduledValues(cancelTime);\n\n          if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n            if (currentLastEvent.type === 'exponentialRampToValue') {\n              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'linearRampToValue') {\n              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'setValue') {\n              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n            } else if (currentLastEvent.type === 'setValueCurve') {\n              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n            }\n          }\n        }\n\n        return audioParam;\n      },\n\n      cancelScheduledValues(cancelTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n        nativeAudioParam.cancelScheduledValues(cancelTime);\n        return audioParam;\n      },\n\n      exponentialRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n\n      linearRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.linearRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n\n      setTargetAtTime(target, startTime, timeConstant) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n        return audioParam;\n      },\n\n      setValueAtTime(value, startTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n\n        automationEventList.add(createSetValueAutomationEvent(value, startTime));\n        nativeAudioParam.setValueAtTime(value, startTime);\n        return audioParam;\n      },\n\n      setValueCurveAtTime(values, startTime, duration) {\n        /*\n         * Bug #152: Safari does not correctly interpolate the values of the curve.\n         * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n         * existence of the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n          const endTime = startTime + duration;\n          const sampleRate = audioNode.context.sampleRate;\n          const firstSample = Math.ceil(startTime * sampleRate);\n          const lastSample = Math.floor(endTime * sampleRate);\n          const numberOfInterpolatedValues = lastSample - firstSample;\n          const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n          for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n            const theoreticIndex = (values.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            interpolatedValues[i] = lowerIndex === upperIndex ? values[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n          }\n\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n          const timeOfLastSample = lastSample / sampleRate;\n\n          if (timeOfLastSample < endTime) {\n            audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n          }\n\n          audioParam.setValueAtTime(values[values.length - 1], endTime);\n        } else {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n\n          automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n        }\n\n        return audioParam;\n      }\n\n    };\n    audioParamStore.set(audioParam, nativeAudioParam);\n    audioParamAudioNodeStore.set(audioParam, audioNode);\n    addAudioParamConnections(audioParam, audioParamRenderer);\n    return audioParam;\n  };\n};","export const createAudioParamRenderer = automationEventList => {\n  return {\n    replay(audioParam) {\n      for (const automationEvent of automationEventList) {\n        if (automationEvent.type === 'exponentialRampToValue') {\n          const {\n            endTime,\n            value\n          } = automationEvent;\n          audioParam.exponentialRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === 'linearRampToValue') {\n          const {\n            endTime,\n            value\n          } = automationEvent;\n          audioParam.linearRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === 'setTarget') {\n          const {\n            startTime,\n            target,\n            timeConstant\n          } = automationEvent;\n          audioParam.setTargetAtTime(target, startTime, timeConstant);\n        } else if (automationEvent.type === 'setValue') {\n          const {\n            startTime,\n            value\n          } = automationEvent;\n          audioParam.setValueAtTime(value, startTime);\n        } else if (automationEvent.type === 'setValueCurve') {\n          const {\n            duration,\n            startTime,\n            values\n          } = automationEvent;\n          audioParam.setValueCurveAtTime(values, startTime, duration);\n        } else {\n          throw new Error(\"Can't apply an unknown automation.\");\n        }\n      }\n    }\n\n  };\n};","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 1,\n  numberOfOutputs: 1,\n  outputChannelCount: undefined,\n  parameterData: {},\n  processorOptions: {}\n};\n\nconst createChannelCount = length => {\n  const channelCount = [];\n\n  for (let i = 0; i < length; i += 1) {\n    channelCount.push(1);\n  }\n\n  return channelCount;\n};\n\nconst sanitizedOptions = options => {\n  return { ...options,\n    outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ?\n    /*\n     * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n     * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n     * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n     */\n    [options.channelCount] : createChannelCount(options.numberOfOutputs)\n  };\n};\n\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) => {\n  return class AudioWorkletNode extends audioNodeConstructor {\n    constructor(context, name, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n      const processorConstructor = nodeNameToProcessorConstructorMap === undefined ? undefined : nodeNameToProcessorConstructorMap.get(name);\n      const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n      const audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;\n      /*\n       * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n       * returns false.\n       */\n\n      super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n      const parameters = [];\n      nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n        const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n        parameters.push([nm, audioParam]);\n      });\n      this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n      this._onprocessorerror = null;\n      this._parameters = new ReadOnlyMap(parameters);\n      /*\n       * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n       * the destination.\n       */\n\n      if (isOffline) {\n        addUnrenderedAudioWorkletNode(nativeContext, this);\n      }\n    }\n\n    get onprocessorerror() {\n      return this._onprocessorerror;\n    }\n\n    set onprocessorerror(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n      const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n      this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;\n    }\n\n    get parameters() {\n      if (this._parameters === null) {\n        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n        return this._nativeAudioWorkletNode.parameters;\n      }\n\n      return this._parameters;\n    }\n\n    get port() {\n      return this._nativeAudioWorkletNode.port;\n    }\n\n  };\n};","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n  return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext, numberOfChannels);\n      this._nativeContext = _nativeContext;\n      this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {\n        addModule: (moduleURL, options) => {\n          return addAudioWorkletModule(this, moduleURL, options);\n        }\n      };\n    }\n\n    get audioWorklet() {\n      return this._audioWorklet;\n    }\n\n    createAnalyser() {\n      return new analyserNodeConstructor(this);\n    }\n\n    createBiquadFilter() {\n      return new biquadFilterNodeConstructor(this);\n    }\n\n    createBuffer(numberOfChannels, length, sampleRate) {\n      return new audioBufferConstructor({\n        length,\n        numberOfChannels,\n        sampleRate\n      });\n    }\n\n    createBufferSource() {\n      return new audioBufferSourceNodeConstructor(this);\n    }\n\n    createChannelMerger(numberOfInputs = 6) {\n      return new channelMergerNodeConstructor(this, {\n        numberOfInputs\n      });\n    }\n\n    createChannelSplitter(numberOfOutputs = 6) {\n      return new channelSplitterNodeConstructor(this, {\n        numberOfOutputs\n      });\n    }\n\n    createConstantSource() {\n      return new constantSourceNodeConstructor(this);\n    }\n\n    createConvolver() {\n      return new convolverNodeConstructor(this);\n    }\n\n    createDelay(maxDelayTime = 1) {\n      return new delayNodeConstructor(this, {\n        maxDelayTime\n      });\n    }\n\n    createDynamicsCompressor() {\n      return new dynamicsCompressorNodeConstructor(this);\n    }\n\n    createGain() {\n      return new gainNodeConstructor(this);\n    }\n\n    createIIRFilter(feedforward, feedback) {\n      return new iIRFilterNodeConstructor(this, {\n        feedback,\n        feedforward\n      });\n    }\n\n    createOscillator() {\n      return new oscillatorNodeConstructor(this);\n    }\n\n    createPanner() {\n      return new pannerNodeConstructor(this);\n    }\n\n    createPeriodicWave(real, imag, constraints = {\n      disableNormalization: false\n    }) {\n      return new periodicWaveConstructor(this, { ...constraints,\n        imag,\n        real\n      });\n    }\n\n    createStereoPanner() {\n      return new stereoPannerNodeConstructor(this);\n    }\n\n    createWaveShaper() {\n      return new waveShaperNodeConstructor(this);\n    }\n\n    decodeAudioData(audioData, successCallback, errorCallback) {\n      return decodeAudioData(this._nativeContext, audioData).then(audioBuffer => {\n        if (typeof successCallback === 'function') {\n          successCallback(audioBuffer);\n        }\n\n        return audioBuffer;\n      }).catch(err => {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  Q: 1,\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 350,\n  gain: 0,\n  type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class BiquadFilterNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;\n      super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer); // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT); // Bug #78: Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n\n      this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n      /*\n       * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value\n       * for minValue.\n       */\n\n      this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0); // Bug #79: Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n\n      this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n      this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n    }\n\n    get detune() {\n      return this._detune;\n    }\n\n    get frequency() {\n      return this._frequency;\n    }\n\n    get gain() {\n      return this._gain;\n    }\n\n    get Q() {\n      return this._Q;\n    }\n\n    get type() {\n      return this._nativeBiquadFilterNode.type;\n    }\n\n    set type(value) {\n      this._nativeBiquadFilterNode.type = value;\n    }\n\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse); // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.\n\n\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeBiquadFilterNodes = new WeakMap();\n\n    const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        const options = {\n          Q: nativeBiquadFilterNode.Q.value,\n          channelCount: nativeBiquadFilterNode.channelCount,\n          channelCountMode: nativeBiquadFilterNode.channelCountMode,\n          channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n          detune: nativeBiquadFilterNode.detune.value,\n          frequency: nativeBiquadFilterNode.frequency.value,\n          gain: nativeBiquadFilterNode.gain.value,\n          type: nativeBiquadFilterNode.type\n        };\n        nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n      return nativeBiquadFilterNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeBiquadFilterNode !== undefined) {\n          return Promise.resolve(renderedNativeBiquadFilterNode);\n        }\n\n        return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createCacheTestResult = (ongoingTests, testResults) => {\n  return (tester, test) => {\n    const cachedTestResult = testResults.get(tester);\n\n    if (cachedTestResult !== undefined) {\n      return cachedTestResult;\n    }\n\n    const ongoingTest = ongoingTests.get(tester);\n\n    if (ongoingTest !== undefined) {\n      return ongoingTest;\n    }\n\n    try {\n      const synchronousTestResult = test();\n\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(() => false).then(finalTestResult => {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelMergerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfInputs: nativeAudioNode.numberOfInputs\n        };\n        nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n      return nativeAudioNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 6,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'discrete',\n  numberOfOutputs: 6\n};\n\nconst sanitizedOptions = options => {\n  return { ...options,\n    channelCount: options.numberOfOutputs\n  };\n};\n\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelSplitterNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n      const channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;\n      super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfOutputs: nativeAudioNode.numberOfOutputs\n        };\n        nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n      return nativeAudioNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createConnectAudioParam = renderInputsOfAudioParam => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n  };\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = createIndexSizeError => {\n  return (outputAudioNodes, destination, output = 0, input = 0) => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n      throw createIndexSizeError();\n    }\n\n    if (isNativeAudioNode(destination)) {\n      return outputAudioNode.connect(destination, 0, input);\n    }\n\n    return outputAudioNode.connect(destination, 0);\n  };\n};","export const createConnectedNativeAudioBufferSourceNodeFactory = createNativeAudioBufferSourceNode => {\n  return (nativeContext, nativeAudioNode) => {\n    const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.loop = true;\n    nativeAudioBufferSourceNode.connect(nativeAudioNode);\n    nativeAudioBufferSourceNode.start();\n    return () => {\n      nativeAudioBufferSourceNode.stop();\n      nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n    };\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class ConstantSourceNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;\n      super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n      this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n      this._nativeConstantSourceNode = nativeConstantSourceNode;\n      /*\n       * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n       * minValue for GainNodes.\n       */\n\n      this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._onended = null;\n    }\n\n    get offset() {\n      return this._offset;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeConstantSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeConstantSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    start(when = 0) {\n      this._nativeConstantSourceNode.start(when);\n\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.start = when;\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeConstantSourceNode.stop(when);\n\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeConstantSourceNodes = new WeakMap();\n    let start = null;\n    let stop = null;\n\n    const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeConstantSourceNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeConstantSourceNode.channelCount,\n          channelCountMode: nativeConstantSourceNode.channelCountMode,\n          channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n          offset: nativeConstantSourceNode.offset.value\n        };\n        nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeConstantSourceNode.start(start);\n        }\n\n        if (stop !== null) {\n          nativeConstantSourceNode.stop(stop);\n        }\n      }\n\n      renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n      return nativeConstantSourceNode;\n    };\n\n    return {\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeConstantSourceNode !== undefined) {\n          return Promise.resolve(renderedNativeConstantSourceNode);\n        }\n\n        return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createConvertNumberToUnsignedLong = unit32Array => {\n  return value => {\n    unit32Array[0] = value;\n    return unit32Array[0];\n  };\n};","const DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ConvolverNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;\n      super(context, false, nativeConvolverNode, convolverNodeRenderer);\n      this._isBufferNullified = false;\n      this._nativeConvolverNode = nativeConvolverNode;\n    }\n\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n\n      return this._nativeConvolverNode.buffer;\n    }\n\n    set buffer(value) {\n      this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.\n\n      if (value === null && this._nativeConvolverNode.buffer !== null) {\n        const nativeContext = this._nativeConvolverNode.context;\n        this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        this._isBufferNullified = true;\n      } else {\n        this._isBufferNullified = false;\n      }\n    }\n\n    get normalize() {\n      return this._nativeConvolverNode.normalize;\n    }\n\n    set normalize(value) {\n      this._nativeConvolverNode.normalize = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeConvolverNodes = new WeakMap();\n\n    const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeConvolverNode = getNativeAudioNode(proxy); // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n      if (!nativeConvolverNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeConvolverNode.buffer,\n          channelCount: nativeConvolverNode.channelCount,\n          channelCountMode: nativeConvolverNode.channelCountMode,\n          channelInterpretation: nativeConvolverNode.channelInterpretation,\n          disableNormalization: !nativeConvolverNode.normalize\n        };\n        nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n      if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n      }\n\n      return nativeConvolverNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeConvolverNode !== undefined) {\n          return Promise.resolve(renderedNativeConvolverNode);\n        }\n\n        return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n  return (numberOfChannels, length, sampleRate) => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      throw new Error('Missing the native OfflineAudioContext constructor.');\n    }\n\n    try {\n      return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n    } catch (err) {\n      // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n      // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n      // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n      if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n        throw createNotSupportedError();\n      }\n\n      throw err;\n    }\n  };\n};","export const createDataCloneError = () => {\n  try {\n    return new DOMException('', 'DataCloneError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 25;\n    err.name = 'DataCloneError';\n    return err;\n  }\n};","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n  return (audioNode, count) => {\n    const cycleCounter = cycleCounters.get(audioNode);\n\n    if (cycleCounter === undefined) {\n      throw new Error('Missing the expected cycle count.');\n    }\n\n    const nativeContext = getNativeContext(audioNode.context);\n    const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n    if (cycleCounter === count) {\n      cycleCounters.delete(audioNode);\n\n      if (!isOffline && isActiveAudioNode(audioNode)) {\n        const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n        const {\n          outputs\n        } = getAudioNodeConnections(audioNode);\n\n        for (const output of outputs) {\n          if (isAudioNodeOutputConnection(output)) {\n            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n            connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n          } else {\n            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n            nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n          }\n        }\n      }\n    } else {\n      cycleCounters.set(audioNode, cycleCounter - count);\n    }\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  delayTime: 0,\n  maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class DelayNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;\n      super(context, false, nativeDelayNode, delayNodeRenderer); // Bug #161: Edge does not export the correct values for maxValue and minValue.\n\n      this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n    }\n\n    get delayTime() {\n      return this._delayTime;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return maxDelayTime => {\n    const renderedNativeDelayNodes = new WeakMap();\n\n    const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeDelayNode = getNativeAudioNode(proxy); // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n      if (!nativeDelayNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeDelayNode.channelCount,\n          channelCountMode: nativeDelayNode.channelCountMode,\n          channelInterpretation: nativeDelayNode.channelInterpretation,\n          delayTime: nativeDelayNode.delayTime.value,\n          maxDelayTime\n        };\n        nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n      if (!nativeDelayNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n      return nativeDelayNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeDelayNode !== undefined) {\n          return Promise.resolve(renderedNativeDelayNode);\n        }\n\n        return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createDeleteUnrenderedAudioWorkletNode = getUnrenderedAudioWorkletNodes => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n  };\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\n\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n  const outputAudioNode = outputAudioNodes[output];\n\n  if (outputAudioNode === undefined) {\n    throw createIndexSizeError();\n  }\n\n  return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs = createIndexSizeError => {\n  return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n    if (destinationOrOutput === undefined) {\n      return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect());\n    }\n\n    if (typeof destinationOrOutput === 'number') {\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n    }\n\n    if (isNativeAudioNode(destinationOrOutput)) {\n      if (output === undefined) {\n        return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect(destinationOrOutput));\n      }\n\n      if (input === undefined) {\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n      }\n\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n    }\n\n    if (output === undefined) {\n      return outputAudioNodes.forEach(outputAudioNode => outputAudioNode.disconnect(destinationOrOutput));\n    }\n\n    return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n  };\n};","const DEFAULT_OPTIONS = {\n  attack: 0.003,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  knee: 30,\n  ratio: 12,\n  release: 0.25,\n  threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n  return class DynamicsCompressorNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;\n      super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer); // Bug #110: Edge does not export the correct values for maxValue and minValue.\n\n      this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n      this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n      this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n      this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n      this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n      this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n    }\n\n    get attack() {\n      return this._attack;\n    }\n    /*\n     * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n     * to be overwritten here.\n     */\n\n\n    get channelCount() {\n      return this._nativeDynamicsCompressorNode.channelCount;\n    }\n\n    set channelCount(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n      this._nativeDynamicsCompressorNode.channelCount = value;\n\n      if (value > 2) {\n        this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n        throw createNotSupportedError();\n      }\n    }\n    /*\n     * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n     * overwritten here.\n     */\n\n\n    get channelCountMode() {\n      return this._nativeDynamicsCompressorNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n      this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n      if (value === 'max') {\n        this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n        throw createNotSupportedError();\n      }\n    }\n\n    get knee() {\n      return this._knee;\n    }\n\n    get ratio() {\n      return this._ratio;\n    }\n\n    get reduction() {\n      // Bug #111: Safari returns an AudioParam instead of a number.\n      if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n        return this._nativeDynamicsCompressorNode.reduction.value;\n      }\n\n      return this._nativeDynamicsCompressorNode.reduction;\n    }\n\n    get release() {\n      return this._release;\n    }\n\n    get threshold() {\n      return this._threshold;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeDynamicsCompressorNodes = new WeakMap();\n\n    const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n       * created again.\n       */\n\n      const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        const options = {\n          attack: nativeDynamicsCompressorNode.attack.value,\n          channelCount: nativeDynamicsCompressorNode.channelCount,\n          channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n          channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n          knee: nativeDynamicsCompressorNode.knee.value,\n          ratio: nativeDynamicsCompressorNode.ratio.value,\n          release: nativeDynamicsCompressorNode.release.value,\n          threshold: nativeDynamicsCompressorNode.threshold.value\n        };\n        nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n      return nativeDynamicsCompressorNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeDynamicsCompressorNode !== undefined) {\n          return Promise.resolve(renderedNativeDynamicsCompressorNode);\n        }\n\n        return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createEncodingError = () => {\n  try {\n    return new DOMException('', 'EncodingError');\n  } catch (err) {\n    // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 0;\n    err.name = 'EncodingError';\n    return err;\n  }\n};","export const createEvaluateSource = window => {\n  return source => new Promise((resolve, reject) => {\n    if (window === null) {\n      reject(new SyntaxError());\n      return;\n    }\n\n    const head = window.document.head;\n\n    if (head === null) {\n      reject(new SyntaxError());\n    } else {\n      const script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n\n      const blob = new Blob([source], {\n        type: 'application/javascript'\n      });\n      const url = URL.createObjectURL(blob);\n      const originalOnErrorHandler = window.onerror;\n\n      const removeErrorEventListenerAndRevokeUrl = () => {\n        window.onerror = originalOnErrorHandler;\n        URL.revokeObjectURL(url);\n      };\n\n      window.onerror = (message, src, lineno, colno, error) => {\n        // @todo Edge thinks the source is the one of the html document.\n        if (src === url || src === window.location.href && lineno === 1 && colno === 1) {\n          removeErrorEventListenerAndRevokeUrl();\n          reject(error);\n          return false;\n        }\n\n        if (originalOnErrorHandler !== null) {\n          return originalOnErrorHandler(message, src, lineno, colno, error);\n        }\n      };\n\n      script.onerror = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        reject(new SyntaxError());\n      };\n\n      script.onload = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        resolve();\n      };\n\n      script.src = url;\n      script.type = 'module';\n      head.appendChild(script);\n    }\n  });\n};","export const createEventTargetConstructor = wrapEventListener => {\n  return class EventTarget {\n    constructor(_nativeEventTarget) {\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n\n    addEventListener(type, listener, options) {\n      if (listener !== null) {\n        let wrappedEventListener = this._listeners.get(listener);\n\n        if (wrappedEventListener === undefined) {\n          wrappedEventListener = wrapEventListener(this, listener);\n\n          if (typeof listener === 'function') {\n            this._listeners.set(listener, wrappedEventListener);\n          }\n        }\n\n        this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n      }\n    }\n\n    dispatchEvent(event) {\n      return this._nativeEventTarget.dispatchEvent(event);\n    }\n\n    removeEventListener(type, listener, options) {\n      const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n      this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n    }\n\n  };\n};","export const createExposeCurrentFrameAndCurrentTime = window => {\n  return (currentTime, sampleRate, fn) => {\n    Object.defineProperties(window, {\n      currentFrame: {\n        configurable: true,\n\n        get() {\n          return Math.round(currentTime * sampleRate);\n        }\n\n      },\n      currentTime: {\n        configurable: true,\n\n        get() {\n          return currentTime;\n        }\n\n      }\n    });\n\n    try {\n      return fn();\n    } finally {\n      if (window !== null) {\n        delete window.currentFrame;\n        delete window.currentTime;\n      }\n    }\n  };\n};","export const createFetchSource = createAbortError => {\n  return async url => {\n    try {\n      const response = await fetch(url);\n\n      if (response.ok) {\n        return response.text();\n      }\n    } catch {}\n    /* Ignore errors. */\n    // tslint:disable-line:no-empty\n\n\n    throw createAbortError();\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class GainNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      super(context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get gain() {\n      return this._gain;\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeGainNodes = new WeakMap();\n\n    const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeGainNode = getNativeAudioNode(proxy); // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n      if (!nativeGainNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeGainNode.channelCount,\n          channelCountMode: nativeGainNode.channelCountMode,\n          channelInterpretation: nativeGainNode.channelInterpretation,\n          gain: nativeGainNode.gain.value\n        };\n        nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n      if (!nativeGainNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n      return nativeGainNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeGainNode !== undefined) {\n          return Promise.resolve(renderedNativeGainNode);\n        }\n\n        return createGainNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createGetAudioNodeRenderer = getAudioNodeConnections => {\n  return audioNode => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n    if (audioNodeConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n    }\n\n    return audioNodeConnections.renderer;\n  };\n};","export const createGetAudioParamRenderer = getAudioParamConnections => {\n  return audioParam => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n\n    if (audioParamConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n    }\n\n    return audioParamConnections.renderer;\n  };\n};","import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n  return nativeContext => {\n    /*\n     * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n     * backupNativeContext in that case.\n     */\n    if (nativeContext.state === 'closed' && nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor !== null) {\n          // @todo Copy the attached AudioWorkletProcessors and other settings.\n          const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n          BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n          return bckpNtveCntxt;\n        }\n      } else {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        } // @todo Copy the attached AudioWorkletProcessors and other settings.\n\n\n        const bckpNtveCntxt = new nativeAudioContextConstructor();\n        BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n        return bckpNtveCntxt;\n      }\n    }\n\n    return null;\n  };\n};","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = contextStore => {\n  return context => {\n    const nativeContext = contextStore.get(context);\n\n    if (nativeContext === undefined) {\n      throw createInvalidStateError();\n    }\n\n    return nativeContext;\n  };\n};","export const createGetUnrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore => {\n  return nativeContext => {\n    const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n    if (unrenderedAudioWorkletNodes === undefined) {\n      throw new Error('The context has no set of AudioWorkletNodes.');\n    }\n\n    return unrenderedAudioWorkletNodes;\n  };\n};","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\n\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n  const feedbackLength = feedback.length;\n  const feedforwardLength = feedforward.length;\n  const minLength = Math.min(feedbackLength, feedforwardLength);\n\n  if (feedback[0] !== 1) {\n    for (let i = 0; i < feedbackLength; i += 1) {\n      feedforward[i] /= feedback[0];\n    }\n\n    for (let i = 1; i < feedforwardLength; i += 1) {\n      feedback[i] /= feedback[0];\n    }\n  }\n\n  const bufferLength = 32;\n  const xBuffer = new Float32Array(bufferLength);\n  const yBuffer = new Float32Array(bufferLength);\n  const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n  const numberOfChannels = renderedBuffer.numberOfChannels;\n\n  for (let i = 0; i < numberOfChannels; i += 1) {\n    const input = renderedBuffer.getChannelData(i);\n    const output = filteredBuffer.getChannelData(i);\n    xBuffer.fill(0);\n    yBuffer.fill(0);\n    filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n  }\n\n  return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return (feedback, feedforward) => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let filteredBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioBufferSourceNode = null;\n      let nativeIIRFilterNode = getNativeAudioNode(proxy); // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext); // Bug #9: Safari does not support IIRFilterNodes.\n\n      if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n      } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n        nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, ntvCntxt => {\n          return ntvCntxt.createIIRFilter(feedforward, feedback);\n        });\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n\n      if (nativeAudioBufferSourceNode !== null) {\n        if (filteredBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          }\n\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor( // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n          proxy.context.destination.channelCount, // Bug #17: Safari does not yet expose the length.\n          proxy.context.length, nativeOfflineAudioContext.sampleRate);\n\n          filteredBufferPromise = (async () => {\n            await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n            const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n            return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n          })();\n        }\n\n        const filteredBuffer = await filteredBufferPromise;\n        nativeAudioBufferSourceNode.buffer = filteredBuffer;\n        nativeAudioBufferSourceNode.start(0);\n        return nativeAudioBufferSourceNode;\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n      return nativeIIRFilterNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n  return isOffline => {\n    return (audioNode, count) => {\n      const cycleCounter = cycleCounters.get(audioNode);\n\n      if (cycleCounter === undefined) {\n        if (!isOffline && isActiveAudioNode(audioNode)) {\n          const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n          const {\n            outputs\n          } = getAudioNodeConnections(audioNode);\n\n          for (const output of outputs) {\n            if (isAudioNodeOutputConnection(output)) {\n              const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n              disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        }\n\n        cycleCounters.set(audioNode, count);\n      } else {\n        cycleCounters.set(audioNode, cycleCounter + count);\n      }\n    };\n  };\n};","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n  };\n};","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n  return anything => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n  return anything => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n  };\n};","export const createIsNativeAudioContext = nativeAudioContextConstructor => {\n  return anything => {\n    return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n  };\n};","export const createIsNativeAudioNode = window => {\n  return anything => {\n    return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n  };\n};","export const createIsNativeAudioParam = window => {\n  return anything => {\n    return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n  };\n};","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n  return anything => {\n    return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n  };\n};","export const createIsNativeOfflineAudioContext = nativeOfflineAudioContextConstructor => {\n  return anything => {\n    return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n  };\n};","export const createIsSecureContext = window => window !== null && window.isSecureContext;","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n  if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n    const results = await Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);\n    return results.every(result => result);\n  }\n\n  return false;\n};","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n\n      super(context, true, nativeMediaElementAudioSourceNode, null); // Bug #63: Edge does not expose the mediaElement yet.\n\n      this._mediaElement = options.mediaElement;\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement === undefined ? this._mediaElement : this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      super(context, false, nativeMediaStreamAudioDestinationNode, null);\n      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n    }\n\n    get stream() {\n      return this._nativeMediaStreamAudioDestinationNode.stream;\n    }\n\n  };\n};","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options); // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      super(context, true, nativeMediaStreamAudioSourceNode, null);\n      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n    }\n\n    get mediaStream() {\n      return this._nativeMediaStreamAudioSourceNode.mediaStream;\n    }\n\n  };\n};","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n  return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n      super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n    }\n\n  };\n};","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n  return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(options = {}) {\n      if (nativeAudioContextConstructor === null) {\n        throw new Error('Missing the native AudioContext constructor.');\n      }\n\n      const nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.\n\n      if (nativeAudioContext === null) {\n        throw createUnknownError();\n      } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n\n\n      if (!isValidLatencyHint(options.latencyHint)) {\n        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n      } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n\n\n      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n        throw createNotSupportedError();\n      }\n\n      super(nativeAudioContext, 2);\n      const {\n        latencyHint\n      } = options;\n      const {\n        sampleRate\n      } = nativeAudioContext; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n\n      this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :\n      /*\n       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n       * ScriptProcessorNode.\n       */\n      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;\n      this._nativeAudioContext = nativeAudioContext;\n      this._state = null;\n      /*\n       * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n       * changes to 'running'.\n       */\n\n      if (nativeAudioContext.state === 'running') {\n        this._state = 'suspended';\n\n        const revokeState = () => {\n          if (this._state === 'suspended') {\n            this._state = null;\n          }\n\n          nativeAudioContext.removeEventListener('statechange', revokeState);\n        };\n\n        nativeAudioContext.addEventListener('statechange', revokeState);\n      }\n    }\n\n    get baseLatency() {\n      return this._baseLatency;\n    }\n\n    get state() {\n      return this._state !== null ? this._state : this._nativeAudioContext.state;\n    }\n\n    close() {\n      // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n      if (this.state === 'closed') {\n        return this._nativeAudioContext.close().then(() => {\n          throw createInvalidStateError();\n        });\n      } // Bug #34: If the state was set to suspended before it should be revoked now.\n\n\n      if (this._state === 'suspended') {\n        this._state = null;\n      }\n\n      return this._nativeAudioContext.close();\n      /*\n       * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n       * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n       */\n    }\n\n    resume() {\n      if (this._state === 'suspended') {\n        return new Promise((resolve, reject) => {\n          const resolvePromise = () => {\n            this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n            if (this._nativeAudioContext.state === 'running') {\n              resolve();\n            } else {\n              this.resume().then(resolve, reject);\n            }\n          };\n\n          this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n        });\n      }\n\n      return this._nativeAudioContext.resume().catch(err => {\n        // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined || err.code === 15) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n    suspend() {\n      return this._nativeAudioContext.suspend().catch(err => {\n        // Bug #56: Safari invokes the catch handler but without an error.\n        if (err === undefined) {\n          throw createInvalidStateError();\n        }\n\n        throw err;\n      });\n    }\n\n  };\n};","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n  return class MinimalBaseAudioContext extends eventTargetConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext);\n      this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(this, _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n\n      const sampleRate = _nativeContext.sampleRate;\n      Object.defineProperty(_nativeContext, 'sampleRate', {\n        get: () => sampleRate\n      });\n\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n\n      this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n      this._listener = createAudioListener(this, _nativeContext);\n      this._onstatechange = null;\n    }\n\n    get currentTime() {\n      return this._nativeContext.currentTime;\n    }\n\n    get destination() {\n      return this._destination;\n    }\n\n    get listener() {\n      return this._listener;\n    }\n\n    get onstatechange() {\n      return this._onstatechange;\n    }\n\n    set onstatechange(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeContext.onstatechange = wrappedListener;\n      const nativeOnStateChange = this._nativeContext.onstatechange;\n      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n    }\n\n    get sampleRate() {\n      return this._nativeContext.sampleRate;\n    }\n\n    get state() {\n      return this._nativeContext.state;\n    }\n\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n  return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n    constructor(options) {\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n\n      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n        nativeOfflineAudioContext.addEventListener('statechange', (() => {\n          let i = 0;\n\n          const delayStateChangeEvent = event => {\n            if (this._state === 'running') {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                event.stopImmediatePropagation();\n\n                this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n\n          return delayStateChangeEvent;\n        })());\n      }\n\n      super(nativeOfflineAudioContext, numberOfChannels);\n      this._length = length;\n      this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      this._state = null;\n    }\n\n    get length() {\n      // Bug #17: Safari does not yet expose the length.\n      if (this._nativeOfflineAudioContext.length === undefined) {\n        return this._length;\n      }\n\n      return this._nativeOfflineAudioContext.length;\n    }\n\n    get state() {\n      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n    }\n\n    startRendering() {\n      /*\n       * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n       * the state of the nativeOfflineAudioContext might no transition to running immediately.\n       */\n      if (this._state === 'running') {\n        return Promise.reject(createInvalidStateError());\n      }\n\n      this._state = 'running';\n      return startRendering(this.destination, this._nativeOfflineAudioContext).then(audioBuffer => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        return audioBuffer;\n      }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n      .catch(err => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        throw err;\n      });\n    }\n\n    _waitForThePromiseToSettle(event) {\n      if (this._state === null) {\n        this._nativeOfflineAudioContext.dispatchEvent(event);\n      } else {\n        setTimeout(() => this._waitForThePromiseToSettle(event));\n      }\n    }\n\n  };\n};","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n  return (nativeAudioNode, whenConnected, whenDisconnected) => {\n    const connections = new Set();\n\n    nativeAudioNode.connect = (connect => {\n      return (destination, output = 0, input = 0) => {\n        const wasDisconnected = connections.size === 0;\n\n        if (isNativeAudioNode(destination)) {\n          // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n          connect.call(nativeAudioNode, destination, output, input);\n          insertElementInSet(connections, [destination, output, input], connection => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n\n          if (wasDisconnected) {\n            whenConnected();\n          }\n\n          return destination;\n        }\n\n        connect.call(nativeAudioNode, destination, output);\n        insertElementInSet(connections, [destination, output], connection => connection[0] === destination && connection[1] === output, true);\n\n        if (wasDisconnected) {\n          whenConnected();\n        }\n\n        return;\n      };\n    })(nativeAudioNode.connect);\n\n    nativeAudioNode.disconnect = (disconnect => {\n      return (destinationOrOutput, output, input) => {\n        const wasConnected = connections.size > 0;\n\n        if (destinationOrOutput === undefined) {\n          disconnect.apply(nativeAudioNode);\n          connections.clear();\n        } else if (typeof destinationOrOutput === 'number') {\n          // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n          disconnect.call(nativeAudioNode, destinationOrOutput);\n\n          for (const connection of connections) {\n            if (connection[1] === destinationOrOutput) {\n              connections.delete(connection);\n            }\n          }\n        } else {\n          if (isNativeAudioNode(destinationOrOutput)) {\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n          } else {\n            // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n            disconnect.call(nativeAudioNode, destinationOrOutput, output);\n          }\n\n          for (const connection of connections) {\n            if (connection[0] === destinationOrOutput && (output === undefined || connection[1] === output) && (input === undefined || connection[2] === input)) {\n              connections.delete(connection);\n            }\n          }\n        }\n\n        const isDisconnected = connections.size === 0;\n\n        if (wasConnected && isDisconnected) {\n          whenDisconnected();\n        }\n      };\n    })(nativeAudioNode.disconnect);\n\n    return nativeAudioNode;\n  };\n};","export const createNativeAudioBufferConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('AudioBuffer')) {\n    return window.AudioBuffer;\n  }\n\n  return null;\n};","export const createNativeAudioContextConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('AudioContext')) {\n    return window.AudioContext;\n  }\n\n  return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n  return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n    const nativeAudioDestinationNode = nativeContext.destination; // Bug #132: Edge & Safari do not have the correct channelCount.\n\n    if (nativeAudioDestinationNode.channelCount !== channelCount) {\n      try {\n        nativeAudioDestinationNode.channelCount = channelCount;\n      } catch {// Bug #169: Safari throws an error on each attempt to change the channelCount.\n      }\n    } // Bug #83: Edge & Safari do not have the correct channelCountMode.\n\n\n    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n      nativeAudioDestinationNode.channelCountMode = 'explicit';\n    } // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n\n\n    if (nativeAudioDestinationNode.maxChannelCount === 0) {\n      Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n        value: channelCount\n      });\n    } // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n\n\n    const gainNode = createNativeGainNode(nativeContext, {\n      channelCount,\n      channelCountMode: nativeAudioDestinationNode.channelCountMode,\n      channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n      gain: 1\n    });\n    overwriteAccessors(gainNode, 'channelCount', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n\n      try {\n        nativeAudioDestinationNode.channelCount = value;\n      } catch (err) {\n        // Bug #169: Safari throws an error on each attempt to change the channelCount.\n        if (value > nativeAudioDestinationNode.maxChannelCount) {\n          throw err;\n        }\n      }\n    });\n    overwriteAccessors(gainNode, 'channelCountMode', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelCountMode = value;\n    });\n    overwriteAccessors(gainNode, 'channelInterpretation', get => () => get.call(gainNode), set => value => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelInterpretation = value;\n    });\n    Object.defineProperty(gainNode, 'maxChannelCount', {\n      get: () => nativeAudioDestinationNode.maxChannelCount\n    }); // @todo This should be disconnected when the context is closed.\n\n    gainNode.connect(nativeAudioDestinationNode);\n    return gainNode;\n  };\n};","export const createNativeAudioNodeFactory = getBackupNativeContext => {\n  return (nativeContext, factoryFunction) => {\n    // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n    const backupNativeContext = getBackupNativeContext(nativeContext);\n\n    if (backupNativeContext !== null) {\n      return factoryFunction(backupNativeContext);\n    }\n\n    return factoryFunction(nativeContext);\n  };\n};","export const createNativeAudioWorkletNodeConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBiquadFilter());\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n  return (nativeContext, options) => {\n    const nativeChannelMergerNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createChannelMerger(options.numberOfInputs);\n    }); // Bug #15: Safari does not return the default properties.\n\n    if (nativeChannelMergerNode.channelCount !== 1 && nativeChannelMergerNode.channelCountMode !== 'explicit') {\n      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n    }\n\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    const nativeConstantSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createConstantSource();\n    });\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n  return (nativeContext, {\n    offset,\n    ...audioNodeOptions\n  }) => {\n    const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n    const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n    const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: offset\n    }); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n\n    const channelData = audioBuffer.getChannelData(0); // Bug #95: Safari does not play or loop one sample buffers.\n\n    channelData[0] = 1;\n    channelData[1] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.loop = true;\n    const nativeConstantSourceNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return gainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        gainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return gainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        gainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return gainNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        gainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return gainNode.context;\n      },\n\n      get inputs() {\n        return [];\n      },\n\n      get numberOfInputs() {\n        return audioBufferSourceNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return gainNode.numberOfOutputs;\n      },\n\n      get offset() {\n        return gainNode.gain;\n      },\n\n      get onended() {\n        return audioBufferSourceNode.onended;\n      },\n\n      set onended(value) {\n        audioBufferSourceNode.onended = value;\n      },\n\n      addEventListener(...args) {\n        return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return audioBufferSourceNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n      },\n\n      start(when = 0) {\n        audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n      },\n\n      stop(when = 0) {\n        audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n      }\n\n    };\n\n    const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode); // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, audioBufferSourceNode);\n    return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) => {\n  return (nativeContext, options) => {\n    const nativeConvolverNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createConvolver());\n\n    try {\n      // Bug #166: Opera does not allow yet to set the channelCount to 1.\n      nativeConvolverNode.channelCount = 1;\n    } catch (err) {\n      return createNativeConvolverNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativeConvolverNode, options); // The normalize property needs to be set before setting the buffer.\n\n    if (options.disableNormalization === nativeConvolverNode.normalize) {\n      nativeConvolverNode.normalize = !options.disableNormalization;\n    }\n\n    assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer'); // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCount', get => () => get.call(nativeConvolverNode), set => value => {\n      if (value > 2) {\n        throw createNotSupportedError();\n      }\n\n      return set.call(nativeConvolverNode, value);\n    }); // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    overwriteAccessors(nativeConvolverNode, 'channelCountMode', get => () => get.call(nativeConvolverNode), set => value => {\n      if (value === 'max') {\n        throw createNotSupportedError();\n      }\n\n      return set.call(nativeConvolverNode, value);\n    });\n    return nativeConvolverNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConvolverNodeFakerFactory = (createNativeAudioNode, createNativeGainNode, monitorConnections) => {\n  return (nativeContext, {\n    buffer,\n    channelCount,\n    channelCountMode,\n    channelInterpretation,\n    disableNormalization\n  }) => {\n    const convolverNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createConvolver());\n    assignNativeAudioNodeOptions(convolverNode, {\n      // Bug #166: Opera does not allow yet to set the channelCount to 1.\n      channelCount: Math.max(channelCount, 2),\n      // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n      channelCountMode: channelCountMode === 'max' ? channelCountMode : 'clamped-max',\n      channelInterpretation\n    });\n    const gainNode = createNativeGainNode(nativeContext, {\n      channelCount,\n      channelCountMode,\n      channelInterpretation,\n      gain: 1\n    });\n    const nativeConvolverNodeFaker = {\n      get buffer() {\n        return convolverNode.buffer;\n      },\n\n      set buffer(value) {\n        convolverNode.buffer = value;\n      },\n\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return gainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        // Bug #166: Opera does not allow yet to set the channelCount to 1.\n        if (value > 2) {\n          convolverNode.channelCount = value;\n        }\n\n        gainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return gainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n        if (value === 'max') {\n          convolverNode.channelCountMode = value;\n        }\n\n        gainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return convolverNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        convolverNode.channelInterpretation = value;\n        gainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return convolverNode.context;\n      },\n\n      get inputs() {\n        return [convolverNode];\n      },\n\n      get numberOfInputs() {\n        return convolverNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return convolverNode.numberOfOutputs;\n      },\n\n      get normalize() {\n        return convolverNode.normalize;\n      },\n\n      set normalize(value) {\n        convolverNode.normalize = value;\n      },\n\n      addEventListener(...args) {\n        return convolverNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return convolverNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return convolverNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    }; // The normalize property needs to be set before setting the buffer.\n\n    if (disableNormalization === nativeConvolverNodeFaker.normalize) {\n      nativeConvolverNodeFaker.normalize = !disableNormalization;\n    }\n\n    if (buffer !== nativeConvolverNodeFaker.buffer) {\n      nativeConvolverNodeFaker.buffer = buffer;\n    }\n\n    const whenConnected = () => convolverNode.connect(gainNode);\n\n    const whenDisconnected = () => convolverNode.disconnect(gainNode);\n\n    return monitorConnections(interceptConnections(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeDelayNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDelay(options.maxDelayTime));\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDynamicsCompressor());\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options); // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n    return nativeDynamicsCompressorNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeGainNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createGain());\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n  return (nativeContext, baseLatency, options) => {\n    // Bug #9: Safari does not support IIRFilterNodes.\n    if (nativeContext.createIIRFilter === undefined) {\n      return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n    }\n\n    const nativeIIRFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n    });\n    assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n    return nativeIIRFilterNode;\n  };\n};","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\n\nfunction divide(a, b) {\n  const denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a, b) {\n  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient, z) {\n  let result = [0, 0];\n\n  for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n    result = multiply(result, z);\n    result[0] += coefficient[i];\n  }\n\n  return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n  return (nativeContext, baseLatency, {\n    channelCount,\n    channelCountMode,\n    channelInterpretation,\n    feedback,\n    feedforward\n  }) => {\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (feedback.length === 0 || feedback.length > 20) {\n      throw createNotSupportedError();\n    }\n\n    if (feedback[0] === 0) {\n      throw createInvalidStateError();\n    }\n\n    if (feedforward.length === 0 || feedforward.length > 20) {\n      throw createNotSupportedError();\n    }\n\n    if (feedforward[0] === 0) {\n      throw createInvalidStateError();\n    }\n\n    if (feedback[0] !== 1) {\n      for (let i = 0; i < feedforwardLength; i += 1) {\n        feedforward[i] /= feedback[0];\n      }\n\n      for (let i = 1; i < feedbackLength; i += 1) {\n        feedback[i] /= feedback[0];\n      }\n    }\n\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n    scriptProcessorNode.channelCount = channelCount;\n    scriptProcessorNode.channelCountMode = channelCountMode;\n    scriptProcessorNode.channelInterpretation = channelInterpretation;\n    const bufferLength = 32;\n    const bufferIndexes = [];\n    const xBuffers = [];\n    const yBuffers = [];\n\n    for (let i = 0; i < channelCount; i += 1) {\n      bufferIndexes.push(0);\n      const xBuffer = new Float32Array(bufferLength);\n      const yBuffer = new Float32Array(bufferLength);\n      xBuffer.fill(0);\n      yBuffer.fill(0);\n      xBuffers.push(xBuffer);\n      yBuffers.push(yBuffer);\n    }\n\n    scriptProcessorNode.onaudioprocess = event => {\n      const inputBuffer = event.inputBuffer;\n      const outputBuffer = event.outputBuffer;\n      const numberOfChannels = inputBuffer.numberOfChannels;\n\n      for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = inputBuffer.getChannelData(i);\n        const output = outputBuffer.getChannelData(i);\n        bufferIndexes[i] = filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n      }\n    };\n\n    const nyquist = nativeContext.sampleRate / 2;\n    const nativeIIRFilterNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n\n      get channelCount() {\n        return scriptProcessorNode.channelCount;\n      },\n\n      set channelCount(value) {\n        scriptProcessorNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return scriptProcessorNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        scriptProcessorNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return scriptProcessorNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        scriptProcessorNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return scriptProcessorNode.context;\n      },\n\n      get inputs() {\n        return [scriptProcessorNode];\n      },\n\n      get numberOfInputs() {\n        return scriptProcessorNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return scriptProcessorNode.numberOfOutputs;\n      },\n\n      addEventListener(...args) {\n        // @todo Dissallow adding an audioprocess listener.\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n\n      getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n          throw createInvalidAccessError();\n        }\n\n        const length = frequencyHz.length;\n\n        for (let i = 0; i < length; i += 1) {\n          const omega = -Math.PI * (frequencyHz[i] / nyquist);\n          const z = [Math.cos(omega), Math.sin(omega)];\n          const numerator = evaluatePolynomial(feedforward, z);\n          const denominator = evaluatePolynomial(feedback, z);\n          const response = divide(numerator, denominator);\n          magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n          phaseResponse[i] = Math.atan2(response[1], response[0]);\n        }\n      },\n\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n  };\n};","export const createNativeMediaElementAudioSourceNodeFactory = createNativeAudioNode => {\n  return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n    return ntvDCntxt.createMediaElementSource(options.mediaElement);\n  });\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeAudioContext, options) => {\n    // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.\n    if (nativeAudioContext.createMediaStreamDestination === undefined) {\n      throw createNotSupportedError();\n    }\n\n    const nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      return ntvDCntxt.createMediaStreamDestination();\n    });\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options); // Bug #174: Safari does expose a wrong numberOfOutputs.\n\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n      Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', {\n        get: () => 0\n      });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n  };\n};","export const createNativeMediaStreamAudioSourceNodeFactory = createNativeAudioNode => {\n  return (nativeAudioContext, {\n    mediaStream\n  }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      /*\n       * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n       * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n       */\n      const filteredAudioStreamTracks = audioStreamTracks.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0).slice(0, 1);\n      return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    }); // Bug #63: Edge does not expose the mediaStream yet.\n\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', {\n      value: mediaStream\n    });\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n  return (nativeAudioContext, {\n    mediaStreamTrack\n  }) => {\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return createNativeAudioNode(nativeAudioContext, ntvDCntxt => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n    } // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n\n\n    return createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      const mediaStream = new MediaStream([mediaStreamTrack]);\n      const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n\n      if (mediaStreamTrack.kind !== 'audio') {\n        throw createInvalidStateError();\n      } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n\n      if (isNativeOfflineAudioContext(ntvDCntxt)) {\n        throw new TypeError();\n      }\n\n      return nativeMediaStreamAudioSourceNode;\n    });\n  };\n};","export const createNativeOfflineAudioContextConstructor = window => {\n  if (window === null) {\n    return null;\n  }\n\n  if (window.hasOwnProperty('OfflineAudioContext')) {\n    return window.OfflineAudioContext;\n  }\n\n  return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n  return (nativeContext, options) => {\n    const nativeOscillatorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n    assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n    if (options.periodicWave !== undefined) {\n      nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n    } else {\n      assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n    } // Bug #44: Only Chrome & Opera throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n    } // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeOscillatorNode);\n    return nativeOscillatorNode;\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n  return (nativeContext, options) => {\n    const nativePannerNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createPanner()); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n\n    if (nativePannerNode.orientationX === undefined) {\n      return createNativePannerNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n    return nativePannerNode;\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n  return (nativeContext, {\n    coneInnerAngle,\n    coneOuterAngle,\n    coneOuterGain,\n    distanceModel,\n    maxDistance,\n    orientationX,\n    orientationY,\n    orientationZ,\n    panningModel,\n    positionX,\n    positionY,\n    positionZ,\n    refDistance,\n    rolloffFactor,\n    ...audioNodeOptions\n  }) => {\n    const pannerNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createPanner()); // Bug #125: Safari does not throw an error yet.\n\n    if (audioNodeOptions.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #126: Safari does not throw an error yet.\n\n\n    if (audioNodeOptions.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n    const SINGLE_CHANNEL_OPTIONS = {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete'\n    };\n    const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      channelInterpretation: 'speakers',\n      numberOfInputs: 6\n    });\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 1\n    });\n    const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    });\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n    const waveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      curve: new Float32Array([1, 1]),\n      oversample: 'none'\n    });\n    let lastOrientation = [orientationX, orientationY, orientationZ];\n    let lastPosition = [positionX, positionY, positionZ];\n\n    scriptProcessorNode.onaudioprocess = ({\n      inputBuffer\n    }) => {\n      const orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0]];\n\n      if (orientation.some((value, index) => value !== lastOrientation[index])) {\n        pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n        lastOrientation = orientation;\n      }\n\n      const positon = [inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];\n\n      if (positon.some((value, index) => value !== lastPosition[index])) {\n        pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n        lastPosition = positon;\n      }\n    };\n\n    Object.defineProperty(orientationYGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(orientationZGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionXGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionYGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    Object.defineProperty(positionZGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    const nativePannerNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return pannerNode.channelCount;\n      },\n\n      set channelCount(value) {\n        // Bug #125: Safari does not throw an error yet.\n        if (value > 2) {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCount = value;\n        pannerNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return pannerNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        // Bug #126: Safari does not throw an error yet.\n        if (value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCountMode = value;\n        pannerNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return pannerNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        pannerNode.channelInterpretation = value;\n      },\n\n      get coneInnerAngle() {\n        return pannerNode.coneInnerAngle;\n      },\n\n      set coneInnerAngle(value) {\n        pannerNode.coneInnerAngle = value;\n      },\n\n      get coneOuterAngle() {\n        return pannerNode.coneOuterAngle;\n      },\n\n      set coneOuterAngle(value) {\n        pannerNode.coneOuterAngle = value;\n      },\n\n      get coneOuterGain() {\n        return pannerNode.coneOuterGain;\n      },\n\n      set coneOuterGain(value) {\n        // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n        if (value < 0 || value > 1) {\n          throw createInvalidStateError();\n        }\n\n        pannerNode.coneOuterGain = value;\n      },\n\n      get context() {\n        return pannerNode.context;\n      },\n\n      get distanceModel() {\n        return pannerNode.distanceModel;\n      },\n\n      set distanceModel(value) {\n        pannerNode.distanceModel = value;\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get maxDistance() {\n        return pannerNode.maxDistance;\n      },\n\n      set maxDistance(value) {\n        // Bug #128: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.maxDistance = value;\n      },\n\n      get numberOfInputs() {\n        return pannerNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return pannerNode.numberOfOutputs;\n      },\n\n      get orientationX() {\n        return orientationXGainNode.gain;\n      },\n\n      get orientationY() {\n        return orientationYGainNode.gain;\n      },\n\n      get orientationZ() {\n        return orientationZGainNode.gain;\n      },\n\n      get panningModel() {\n        return pannerNode.panningModel;\n      },\n\n      set panningModel(value) {\n        pannerNode.panningModel = value; // Bug #123: Edge does not support HRTF as panningModel.\n\n        if (pannerNode.panningModel !== value && value === 'HRTF') {\n          throw createNotSupportedError();\n        }\n      },\n\n      get positionX() {\n        return positionXGainNode.gain;\n      },\n\n      get positionY() {\n        return positionYGainNode.gain;\n      },\n\n      get positionZ() {\n        return positionZGainNode.gain;\n      },\n\n      get refDistance() {\n        return pannerNode.refDistance;\n      },\n\n      set refDistance(value) {\n        // Bug #129: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.refDistance = value;\n      },\n\n      get rolloffFactor() {\n        return pannerNode.rolloffFactor;\n      },\n\n      set rolloffFactor(value) {\n        // Bug #130: Edge & Safari do not throw an error yet.\n        if (value < 0) {\n          throw new RangeError();\n        }\n\n        pannerNode.rolloffFactor = value;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n\n    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n    }\n\n    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n    }\n\n    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n      nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n    }\n\n    if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n      nativePannerNodeFaker.distanceModel = distanceModel;\n    }\n\n    if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n      nativePannerNodeFaker.maxDistance = maxDistance;\n    }\n\n    if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n      nativePannerNodeFaker.orientationX.value = orientationX;\n    }\n\n    if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n      nativePannerNodeFaker.orientationY.value = orientationY;\n    }\n\n    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n      nativePannerNodeFaker.orientationZ.value = orientationZ;\n    }\n\n    if (panningModel !== nativePannerNodeFaker.panningModel) {\n      nativePannerNodeFaker.panningModel = panningModel;\n    }\n\n    if (positionX !== nativePannerNodeFaker.positionX.value) {\n      nativePannerNodeFaker.positionX.value = positionX;\n    }\n\n    if (positionY !== nativePannerNodeFaker.positionY.value) {\n      nativePannerNodeFaker.positionY.value = positionY;\n    }\n\n    if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n      nativePannerNodeFaker.positionZ.value = positionZ;\n    }\n\n    if (refDistance !== nativePannerNodeFaker.refDistance) {\n      nativePannerNodeFaker.refDistance = refDistance;\n    }\n\n    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n      nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n    }\n\n    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n      pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n    }\n\n    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n      pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n    }\n\n    const whenConnected = () => {\n      inputGainNode.connect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n    };\n\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n      disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.disconnect(orientationXGainNode);\n      orientationXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationYGainNode);\n      orientationYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationZGainNode);\n      orientationZGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionXGainNode);\n      positionXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionYGainNode);\n      positionYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionZGainNode);\n      positionZGainNode.disconnect(channelMergerNode);\n      channelMergerNode.disconnect(scriptProcessorNode);\n      scriptProcessorNode.disconnect(nativeContext.destination);\n    };\n\n    return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n  };\n};","export const createNativePeriodicWaveFactory = getBackupNativeContext => {\n  return (nativeContext, {\n    disableNormalization,\n    imag,\n    real\n  }) => {\n    // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n    const backupNativeContext = getBackupNativeContext(nativeContext); // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n\n    const wrappedImag = new Float32Array(imag);\n    const wrappedReal = new Float32Array(real);\n\n    if (backupNativeContext !== null) {\n      return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n        disableNormalization\n      });\n    }\n\n    return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, {\n      disableNormalization\n    });\n  };\n};","export const createNativeScriptProcessorNodeFactory = createNativeAudioNode => {\n  return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n    });\n  };\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n  return (nativeContext, options) => createNativeAudioNode(nativeContext, ntvCntxt => {\n    const channelCountMode = options.channelCountMode;\n    /*\n     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n     * which supports it and therefore it can't be supported at all.\n     */\n\n    if (channelCountMode === 'clamped-max') {\n      throw createNotSupportedError();\n    } // Bug #105: Safari does not support the StereoPannerNode.\n\n\n    if (nativeContext.createStereoPanner === undefined) {\n      return createNativeStereoPannerNodeFaker(nativeContext, options);\n    }\n\n    const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n    assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n    /*\n     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n     * which supports it and therefore it can't be supported at all.\n     */\n\n    Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n      get: () => channelCountMode,\n      set: value => {\n        if (value !== channelCountMode) {\n          throw createNotSupportedError();\n        }\n      }\n    });\n    return nativeStereoPannerNode;\n  });\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n  // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n  const CURVE_SIZE = 16385;\n  const DC_CURVE = new Float32Array([1, 1]);\n  const HALF_PI = Math.PI / 2;\n  const SINGLE_CHANNEL_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete'\n  };\n  const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS,\n    oversample: 'none'\n  };\n\n  const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      const x = i / (CURVE_SIZE - 1) * HALF_PI;\n      leftWaveShaperCurve[i] = Math.cos(x);\n      rightWaveShaperCurve[i] = Math.sin(x);\n    }\n\n    const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftWaveShaperCurve\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: DC_CURVE\n    });\n    const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightWaveShaperCurve\n    });\n    return {\n      connectGraph() {\n        inputGainNode.connect(leftGainNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        inputGainNode.connect(rightGainNode);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.connect(leftGainNode.gain);\n        rightWaveShaperNode.connect(rightGainNode.gain);\n        leftGainNode.connect(channelMergerNode, 0, 0);\n        rightGainNode.connect(channelMergerNode, 0, 1);\n      },\n\n      disconnectGraph() {\n        inputGainNode.disconnect(leftGainNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n        inputGainNode.disconnect(rightGainNode);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.disconnect(leftGainNode.gain);\n        rightWaveShaperNode.disconnect(rightGainNode.gain);\n        leftGainNode.disconnect(channelMergerNode, 0, 0);\n        rightGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n\n    };\n  };\n\n  const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      if (i > centerIndex) {\n        const x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n        rightInputForLeftOutputWaveShaperCurve[i] = 0;\n        rightInputForRightOutputWaveShaperCurve[i] = 1;\n      } else {\n        const x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = 1;\n        leftInputForRightOutputWaveShaperCurve[i] = 0;\n        rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n      }\n    }\n\n    const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n      channelCount: 2,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      numberOfOutputs: 2\n    });\n    const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForLeftOutputWaveShaperCurve\n    });\n    const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForRightOutputWaveShaperCurve\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: DC_CURVE\n    });\n    const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForLeftOutputWaveShaperCurve\n    });\n    const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS,\n      gain: 0\n    }); // Bug #119: Safari does not fully support the WaveShaperNode.\n\n    const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForRightOutputWaveShaperCurve\n    });\n    return {\n      connectGraph() {\n        inputGainNode.connect(channelSplitterNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n      },\n\n      disconnectGraph() {\n        inputGainNode.disconnect(channelSplitterNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n        channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);\n        channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);\n        channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n\n    };\n  };\n\n  const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n    if (channelCount === 1) {\n      return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n\n    if (channelCount === 2) {\n      return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n\n    throw createNotSupportedError();\n  };\n\n  return (nativeContext, {\n    channelCount,\n    channelCountMode,\n    pan,\n    ...audioNodeOptions\n  }) => {\n    if (channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...audioNodeOptions,\n      channelCount: 1,\n      channelCountMode,\n      numberOfInputs: 2\n    });\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      channelCount,\n      channelCountMode,\n      gain: 1\n    });\n    const panGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: pan\n    });\n    let {\n      connectGraph,\n      disconnectGraph\n    } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n    Object.defineProperty(panGainNode.gain, 'defaultValue', {\n      get: () => 0\n    });\n    const nativeStereoPannerNodeFakerFactory = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return inputGainNode.channelCount;\n      },\n\n      set channelCount(value) {\n        if (inputGainNode.channelCount !== value) {\n          if (isConnected) {\n            disconnectGraph();\n          }\n\n          ({\n            connectGraph,\n            disconnectGraph\n          } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n\n          if (isConnected) {\n            connectGraph();\n          }\n        }\n\n        inputGainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return inputGainNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        if (value === 'clamped-max' || value === 'max') {\n          throw createNotSupportedError();\n        }\n\n        inputGainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return inputGainNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return inputGainNode.context;\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get numberOfInputs() {\n        return inputGainNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return inputGainNode.numberOfOutputs;\n      },\n\n      get pan() {\n        return panGainNode.gain;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    let isConnected = false;\n\n    const whenConnected = () => {\n      connectGraph();\n      isConnected = true;\n    };\n\n    const whenDisconnected = () => {\n      disconnectGraph();\n      isConnected = false;\n    };\n\n    return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) => {\n  return (nativeContext, options) => {\n    const nativeWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n\n    try {\n      // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n      // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n      nativeWaveShaperNode.curve = new Float32Array([1]);\n      return createNativeWaveShaperNodeFaker(nativeContext, options);\n    } catch {\n      /* Ignore errors. */\n    }\n\n    assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n    const curve = options.curve; // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n\n    if (curve !== null && curve.length < 2) {\n      throw createInvalidStateError();\n    }\n\n    assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'curve');\n    assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    overwriteAccessors(nativeWaveShaperNode, 'curve', get => () => get.call(nativeWaveShaperNode), set => value => {\n      set.call(nativeWaveShaperNode, value);\n\n      if (isConnected) {\n        if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n          disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n        } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n          disconnectNativeAudioBufferSourceNode();\n          disconnectNativeAudioBufferSourceNode = null;\n        }\n      }\n\n      return value;\n    });\n\n    const whenConnected = () => {\n      isConnected = true;\n\n      if (isDCCurve(nativeWaveShaperNode.curve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n      }\n    };\n\n    const whenDisconnected = () => {\n      isConnected = false;\n\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n\n    return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n  };\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) => {\n  return (nativeContext, {\n    curve,\n    oversample,\n    ...audioNodeOptions\n  }) => {\n    const negativeWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n    const positiveWaveShaperNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createWaveShaper());\n    assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n    assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n    const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: -1\n    });\n    const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: 1\n    });\n    const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions,\n      gain: -1\n    });\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    let unmodifiedCurve = null;\n    const nativeWaveShaperNodeFaker = {\n      get bufferSize() {\n        return undefined;\n      },\n\n      get channelCount() {\n        return negativeWaveShaperNode.channelCount;\n      },\n\n      set channelCount(value) {\n        inputGainNode.channelCount = value;\n        invertGainNode.channelCount = value;\n        negativeWaveShaperNode.channelCount = value;\n        outputGainNode.channelCount = value;\n        positiveWaveShaperNode.channelCount = value;\n        revertGainNode.channelCount = value;\n      },\n\n      get channelCountMode() {\n        return negativeWaveShaperNode.channelCountMode;\n      },\n\n      set channelCountMode(value) {\n        inputGainNode.channelCountMode = value;\n        invertGainNode.channelCountMode = value;\n        negativeWaveShaperNode.channelCountMode = value;\n        outputGainNode.channelCountMode = value;\n        positiveWaveShaperNode.channelCountMode = value;\n        revertGainNode.channelCountMode = value;\n      },\n\n      get channelInterpretation() {\n        return negativeWaveShaperNode.channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        invertGainNode.channelInterpretation = value;\n        negativeWaveShaperNode.channelInterpretation = value;\n        outputGainNode.channelInterpretation = value;\n        positiveWaveShaperNode.channelInterpretation = value;\n        revertGainNode.channelInterpretation = value;\n      },\n\n      get context() {\n        return negativeWaveShaperNode.context;\n      },\n\n      get curve() {\n        return unmodifiedCurve;\n      },\n\n      set curve(value) {\n        // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n          throw createInvalidStateError();\n        }\n\n        if (value === null) {\n          negativeWaveShaperNode.curve = value;\n          positiveWaveShaperNode.curve = value;\n        } else {\n          const curveLength = value.length;\n          const negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          const positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          negativeCurve[0] = value[0];\n          positiveCurve[0] = -value[curveLength - 1];\n          const length = Math.ceil((curveLength + 1) / 2);\n          const centerIndex = (curveLength + 1) / 2 - 1;\n\n          for (let i = 1; i < length; i += 1) {\n            const theoreticIndex = i / length * centerIndex;\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n            positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n          }\n\n          negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n          negativeWaveShaperNode.curve = negativeCurve;\n          positiveWaveShaperNode.curve = positiveCurve;\n        }\n\n        unmodifiedCurve = value;\n\n        if (isConnected) {\n          if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n          } else if (disconnectNativeAudioBufferSourceNode !== null) {\n            disconnectNativeAudioBufferSourceNode();\n            disconnectNativeAudioBufferSourceNode = null;\n          }\n        }\n      },\n\n      get inputs() {\n        return [inputGainNode];\n      },\n\n      get numberOfInputs() {\n        return negativeWaveShaperNode.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return negativeWaveShaperNode.numberOfOutputs;\n      },\n\n      get oversample() {\n        return negativeWaveShaperNode.oversample;\n      },\n\n      set oversample(value) {\n        negativeWaveShaperNode.oversample = value;\n        positiveWaveShaperNode.oversample = value;\n      },\n\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n\n    if (curve !== nativeWaveShaperNodeFaker.curve) {\n      nativeWaveShaperNodeFaker.curve = curve;\n    }\n\n    if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n      nativeWaveShaperNodeFaker.oversample = oversample;\n    }\n\n    const whenConnected = () => {\n      inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n      inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n      isConnected = true;\n\n      if (isDCCurve(unmodifiedCurve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n      }\n    };\n\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(negativeWaveShaperNode);\n      negativeWaveShaperNode.disconnect(outputGainNode);\n      inputGainNode.disconnect(invertGainNode);\n      invertGainNode.disconnect(positiveWaveShaperNode);\n      positiveWaveShaperNode.disconnect(revertGainNode);\n      revertGainNode.disconnect(outputGainNode);\n      isConnected = false;\n\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n\n    return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n  return class OfflineAudioContext extends baseAudioContextConstructor {\n    constructor(a, b, c) {\n      let options;\n\n      if (typeof a === 'number' && b !== undefined && c !== undefined) {\n        options = {\n          length: b,\n          numberOfChannels: a,\n          sampleRate: c\n        };\n      } else if (typeof a === 'object') {\n        options = a;\n      } else {\n        throw new Error('The given parameters are not valid.');\n      }\n\n      const {\n        length,\n        numberOfChannels,\n        sampleRate\n      } = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n\n      if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n        nativeOfflineAudioContext.addEventListener('statechange', (() => {\n          let i = 0;\n\n          const delayStateChangeEvent = event => {\n            if (this._state === 'running') {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                event.stopImmediatePropagation();\n\n                this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n\n          return delayStateChangeEvent;\n        })());\n      }\n\n      super(nativeOfflineAudioContext, numberOfChannels);\n      this._length = length;\n      this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      this._state = null;\n    }\n\n    get length() {\n      // Bug #17: Safari does not yet expose the length.\n      if (this._nativeOfflineAudioContext.length === undefined) {\n        return this._length;\n      }\n\n      return this._nativeOfflineAudioContext.length;\n    }\n\n    get state() {\n      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n    }\n\n    startRendering() {\n      /*\n       * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n       * the state of the nativeOfflineAudioContext might no transition to running immediately.\n       */\n      if (this._state === 'running') {\n        return Promise.reject(createInvalidStateError());\n      }\n\n      this._state = 'running';\n      return startRendering(this.destination, this._nativeOfflineAudioContext).then(audioBuffer => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        return audioBuffer;\n      }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n      .catch(err => {\n        this._state = null;\n        /*\n         * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n         * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n         */\n\n        throw err;\n      });\n    }\n\n    _waitForThePromiseToSettle(event) {\n      if (this._state === null) {\n        this._nativeOfflineAudioContext.dispatchEvent(event);\n      } else {\n        setTimeout(() => this._waitForThePromiseToSettle(event));\n      }\n    }\n\n  };\n};","import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 440,\n  type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n  return class OscillatorNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;\n      const nyquist = context.sampleRate / 2;\n      super(context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n\n      this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      this._nativeOscillatorNode = nativeOscillatorNode;\n      this._onended = null;\n      this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n    }\n\n    get detune() {\n      return this._detune;\n    }\n\n    get frequency() {\n      return this._frequency;\n    }\n\n    get onended() {\n      return this._onended;\n    }\n\n    set onended(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeOscillatorNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeOscillatorNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n\n    get type() {\n      return this._nativeOscillatorNode.type;\n    }\n\n    set type(value) {\n      this._nativeOscillatorNode.type = value; // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n\n      if (value === 'custom') {\n        throw createInvalidStateError();\n      }\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = null;\n      }\n    }\n\n    setPeriodicWave(periodicWave) {\n      this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = periodicWave;\n      }\n    }\n\n    start(when = 0) {\n      this._nativeOscillatorNode.start(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.start = when;\n      } else {\n        setInternalStateToActive(this);\n\n        const resetInternalStateToPassive = () => {\n          this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n          setTimeout(() => setInternalStateToPassive(this), 1000);\n        };\n\n        this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n      }\n    }\n\n    stop(when = 0) {\n      this._nativeOscillatorNode.stop(when);\n\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.stop = when;\n      }\n    }\n\n  };\n};","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeOscillatorNodes = new WeakMap();\n    let periodicWave = null;\n    let start = null;\n    let stop = null;\n\n    const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeOscillatorNode = getNativeAudioNode(proxy); // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeOscillatorNode.channelCount,\n          channelCountMode: nativeOscillatorNode.channelCountMode,\n          channelInterpretation: nativeOscillatorNode.channelInterpretation,\n          detune: nativeOscillatorNode.detune.value,\n          frequency: nativeOscillatorNode.frequency.value,\n          periodicWave: periodicWave === null ? undefined : periodicWave,\n          type: nativeOscillatorNode.type\n        };\n        nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n        if (start !== null) {\n          nativeOscillatorNode.start(start);\n        }\n\n        if (stop !== null) {\n          nativeOscillatorNode.stop(stop);\n        }\n      }\n\n      renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n      return nativeOscillatorNode;\n    };\n\n    return {\n      set periodicWave(value) {\n        periodicWave = value;\n      },\n\n      set start(value) {\n        start = value;\n      },\n\n      set stop(value) {\n        stop = value;\n      },\n\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeOscillatorNode !== undefined) {\n          return Promise.resolve(renderedNativeOscillatorNode);\n        }\n\n        return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  coneInnerAngle: 360,\n  coneOuterAngle: 360,\n  coneOuterGain: 0,\n  distanceModel: 'inverse',\n  maxDistance: 10000,\n  orientationX: 1,\n  orientationY: 0,\n  orientationZ: 0,\n  panningModel: 'equalpower',\n  positionX: 0,\n  positionY: 0,\n  positionZ: 0,\n  refDistance: 1,\n  rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class PannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;\n      super(context, false, nativePannerNode, pannerNodeRenderer);\n      this._nativePannerNode = nativePannerNode; // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n\n      this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get coneInnerAngle() {\n      return this._nativePannerNode.coneInnerAngle;\n    }\n\n    set coneInnerAngle(value) {\n      this._nativePannerNode.coneInnerAngle = value;\n    }\n\n    get coneOuterAngle() {\n      return this._nativePannerNode.coneOuterAngle;\n    }\n\n    set coneOuterAngle(value) {\n      this._nativePannerNode.coneOuterAngle = value;\n    }\n\n    get coneOuterGain() {\n      return this._nativePannerNode.coneOuterGain;\n    }\n\n    set coneOuterGain(value) {\n      this._nativePannerNode.coneOuterGain = value;\n    }\n\n    get distanceModel() {\n      return this._nativePannerNode.distanceModel;\n    }\n\n    set distanceModel(value) {\n      this._nativePannerNode.distanceModel = value;\n    }\n\n    get maxDistance() {\n      return this._nativePannerNode.maxDistance;\n    }\n\n    set maxDistance(value) {\n      this._nativePannerNode.maxDistance = value;\n    }\n\n    get orientationX() {\n      return this._orientationX;\n    }\n\n    get orientationY() {\n      return this._orientationY;\n    }\n\n    get orientationZ() {\n      return this._orientationZ;\n    }\n\n    get panningModel() {\n      return this._nativePannerNode.panningModel;\n    }\n\n    set panningModel(value) {\n      this._nativePannerNode.panningModel = value;\n    }\n\n    get positionX() {\n      return this._positionX;\n    }\n\n    get positionY() {\n      return this._positionY;\n    }\n\n    get positionZ() {\n      return this._positionZ;\n    }\n\n    get refDistance() {\n      return this._nativePannerNode.refDistance;\n    }\n\n    set refDistance(value) {\n      this._nativePannerNode.refDistance = value;\n    }\n\n    get rolloffFactor() {\n      return this._nativePannerNode.rolloffFactor;\n    }\n\n    set rolloffFactor(value) {\n      this._nativePannerNode.rolloffFactor = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return () => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let renderedBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeGainNode = null;\n      let nativePannerNode = getNativeAudioNode(proxy);\n      const commonAudioNodeOptions = {\n        channelCount: nativePannerNode.channelCount,\n        channelCountMode: nativePannerNode.channelCountMode,\n        channelInterpretation: nativePannerNode.channelInterpretation\n      };\n      const commonNativePannerNodeOptions = { ...commonAudioNodeOptions,\n        coneInnerAngle: nativePannerNode.coneInnerAngle,\n        coneOuterAngle: nativePannerNode.coneOuterAngle,\n        coneOuterGain: nativePannerNode.coneOuterGain,\n        distanceModel: nativePannerNode.distanceModel,\n        maxDistance: nativePannerNode.maxDistance,\n        panningModel: nativePannerNode.panningModel,\n        refDistance: nativePannerNode.refDistance,\n        rolloffFactor: nativePannerNode.rolloffFactor\n      }; // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n\n      if ('bufferSize' in nativePannerNode) {\n        nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n      } else if (!nativePannerNodeIsOwnedByContext) {\n        const options = { ...commonNativePannerNodeOptions,\n          orientationX: nativePannerNode.orientationX.value,\n          orientationY: nativePannerNode.orientationY.value,\n          orientationZ: nativePannerNode.orientationZ.value,\n          positionX: nativePannerNode.positionX.value,\n          positionY: nativePannerNode.positionY.value,\n          positionZ: nativePannerNode.positionZ.value\n        };\n        nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n      if (nativeGainNode !== null) {\n        if (renderedBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          }\n\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, // Bug #17: Safari does not yet expose the length.\n          proxy.context.length, nativeOfflineAudioContext.sampleRate);\n          const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n          });\n          nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n          renderedBufferPromise = (async () => {\n            const nativeConstantSourceNodes = await Promise.all([proxy.orientationX, proxy.orientationY, proxy.orientationZ, proxy.positionX, proxy.positionY, proxy.positionZ].map(async (audioParam, index) => {\n              const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                offset: index === 0 ? 1 : 0\n              });\n              await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n              return nativeConstantSourceNode;\n            }));\n\n            for (let i = 0; i < 6; i += 1) {\n              nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n              nativeConstantSourceNodes[i].start(0);\n            }\n\n            return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n          })();\n        }\n\n        const renderedBuffer = await renderedBufferPromise;\n        const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n        const channelDatas = [];\n\n        for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n          channelDatas.push(renderedBuffer.getChannelData(i));\n        }\n\n        let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n        let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n        let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n          gain: 1\n        });\n        let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, { ...commonNativePannerNodeOptions,\n          orientationX: lastOrientation[0],\n          orientationY: lastOrientation[1],\n          orientationZ: lastOrientation[2],\n          positionX: lastPosition[0],\n          positionY: lastPosition[1],\n          positionZ: lastPosition[2]\n        });\n        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n        partialPannerNode.connect(nativeGainNode);\n\n        for (let i = 128; i < renderedBuffer.length; i += 128) {\n          const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n          const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n          if (orientation.some((value, index) => value !== lastOrientation[index]) || positon.some((value, index) => value !== lastPosition[index])) {\n            lastOrientation = orientation;\n            lastPosition = positon;\n            const currentTime = i / nativeOfflineAudioContext.sampleRate;\n            gateGainNode.gain.setValueAtTime(0, currentTime);\n            gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions,\n              gain: 0\n            });\n            partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, { ...commonNativePannerNodeOptions,\n              orientationX: lastOrientation[0],\n              orientationY: lastOrientation[1],\n              orientationZ: lastOrientation[2],\n              positionX: lastPosition[0],\n              positionY: lastPosition[1],\n              positionZ: lastPosition[2]\n            });\n            gateGainNode.gain.setValueAtTime(1, currentTime);\n            inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n            partialPannerNode.connect(nativeGainNode);\n          }\n        }\n\n        return nativeGainNode;\n      }\n\n      if (!nativePannerNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n        await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n        await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n      }\n\n      if (isNativeAudioNodeFaker(nativePannerNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n      }\n\n      return nativePannerNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n          return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","const DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n  return class PeriodicWave {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n      return periodicWave;\n    }\n\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n    }\n\n  };\n};","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n    const audioParamRenderer = getAudioParamRenderer(audioParam);\n    audioParamRenderer.replay(nativeAudioParam);\n    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n  };\n};","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n  return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n    const nextTrace = [...trace, audioNode];\n    await Promise.all(audioNodeConnections.activeInputs.map((connections, input) => Array.from(connections).filter(([source]) => !nextTrace.includes(source)).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n      const destination = audioNode.context.destination;\n\n      if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n        renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n      }\n    })).reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n  };\n};","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n  return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n    await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n\n      if (!isPartOfACycle(source)) {\n        renderedNativeAudioNode.connect(nativeAudioParam, output);\n      }\n    }));\n  };\n};","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n  return nativeOfflineAudioContext => {\n    // Bug #21: Safari does not support promises yet.\n    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n      // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n      return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then(isOfflineAudioContextCurrentTimeSupported => {\n        if (!isOfflineAudioContextCurrentTimeSupported) {\n          const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n          nativeOfflineAudioContext.oncomplete = () => {\n            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n            scriptProcessorNode.disconnect();\n          };\n\n          scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n\n          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n        }\n\n        return nativeOfflineAudioContext.startRendering();\n      });\n    }\n\n    return new Promise(resolve => {\n      // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n      const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'discrete',\n        gain: 0\n      });\n\n      nativeOfflineAudioContext.oncomplete = event => {\n        gainNode.disconnect();\n        resolve(event.renderedBuffer);\n      };\n\n      gainNode.connect(nativeOfflineAudioContext.destination);\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  const trace = [];\n  return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext, trace)\n  /*\n   * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n   * destination.\n   */\n  .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map(audioWorkletNode => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace)))).then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext)).then(audioBuffer => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n    if (typeof audioBuffer.copyFromChannel !== 'function') {\n      wrapAudioBufferCopyChannelMethods(audioBuffer);\n      wrapAudioBufferGetChannelDataMethod(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n    } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n      wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n    }\n\n    audioBufferStore.add(audioBuffer);\n    return audioBuffer;\n  });\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer); // Bug #106: Edge does not export a maxValue and minValue property.\n\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n    }\n\n    get pan() {\n      return this._pan;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeStereoPannerNodes = new WeakMap();\n\n    const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeStereoPannerNode = getNativeAudioNode(proxy);\n      /*\n       * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n       * again.\n       */\n\n      const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeStereoPannerNode.channelCount,\n          channelCountMode: nativeStereoPannerNode.channelCountMode,\n          channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n          pan: nativeStereoPannerNode.pan.value\n        };\n        nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n      } else {\n        await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n      }\n\n      if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n      }\n\n      return nativeStereoPannerNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeStereoPannerNode !== undefined) {\n          return Promise.resolve(renderedNativeStereoPannerNode);\n        }\n\n        return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = nativeAudioBufferConstructor => {\n  return () => {\n    if (nativeAudioBufferConstructor === null) {\n      return false;\n    }\n\n    try {\n      new nativeAudioBufferConstructor({\n        length: 1,\n        sampleRate: 44100\n      }); // tslint:disable-line:no-unused-expression\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n\n    if (nativeAudioBuffer.copyToChannel === undefined) {\n      return true;\n    }\n\n    const source = new Float32Array(2);\n\n    try {\n      nativeAudioBuffer.copyFromChannel(source, 0, 0);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.start();\n\n    try {\n      nativeAudioBufferSourceNode.start();\n    } catch {\n      return true;\n    }\n\n    return false;\n  };\n};","// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n    const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n    audioBuffer.getChannelData(0)[0] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.start(0, 0, 0);\n    audioBufferSourceNode.connect(offlineAudioContext.destination); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      offlineAudioContext.oncomplete = ({\n        renderedBuffer\n      }) => {\n        // Bug #5: Safari does not support copyFromChannel().\n        resolve(renderedBuffer.getChannelData(0)[0] === 0);\n      };\n\n      offlineAudioContext.startRendering();\n    });\n  };\n};","export const createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n      nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.start();\n\n    try {\n      nativeAudioBufferSourceNode.stop();\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestAudioContextCloseMethodSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    } // Try to check the prototype before constructing the AudioContext.\n\n\n    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n      return true;\n    }\n\n    const audioContext = new nativeAudioContextConstructor();\n    const isAudioContextClosable = audioContext.close !== undefined;\n\n    try {\n      audioContext.close();\n    } catch {// Ignore errors.\n    }\n\n    return isAudioContextClosable;\n  };\n};","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      let isPending = true;\n\n      const resolvePromise = err => {\n        if (isPending) {\n          isPending = false;\n          offlineAudioContext.startRendering();\n          resolve(err instanceof TypeError);\n        }\n      };\n\n      let promise; // Bug #26: Safari throws a synchronous error.\n\n      try {\n        promise = offlineAudioContext // Bug #1: Safari requires a successCallback.\n        .decodeAudioData(null, () => {// Ignore the success callback.\n        }, resolvePromise);\n      } catch (err) {\n        resolvePromise(err);\n      } // Bug #21: Safari does not support promises yet.\n\n\n      if (promise !== undefined) {\n        // Bug #6 Chrome does not call the errorCallback\n        promise.catch(resolvePromise);\n      }\n    });\n  };\n};","export const createTestAudioContextOptionsSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n\n    let audioContext;\n\n    try {\n      audioContext = new nativeAudioContextConstructor({\n        latencyHint: 'balanced'\n      });\n    } catch {\n      return false;\n    }\n\n    audioContext.close();\n    return true;\n  };\n};","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeGainNode = nativeOfflineAudioContext.createGain();\n    const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n    nativeGainNode.disconnect(nativeGainNode);\n    return isSupported;\n  };\n};","export const createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n\n    try {\n      nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  };\n};","export const createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n      nativeAudioBufferSourceNode.stop();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n};","export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createNativeAudioNode => {\n  return nativeContext => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createOscillator());\n\n    try {\n      nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n      return err instanceof RangeError;\n    }\n\n    return false;\n  };\n};","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n  return async () => {\n    // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n    if (nativeAudioWorkletNodeConstructor === null) {\n      return true;\n    }\n\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n      type: 'application/javascript; charset=utf-8'\n    });\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n    const url = URL.createObjectURL(blob);\n    let isCallingProcess = false;\n\n    try {\n      await offlineAudioContext.audioWorklet.addModule(url);\n      const gainNode = offlineAudioContext.createGain();\n      const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n        numberOfOutputs: 0\n      });\n\n      audioWorkletNode.port.onmessage = () => isCallingProcess = true;\n\n      gainNode.connect(audioWorkletNode);\n      await offlineAudioContext.startRendering();\n    } catch {// Ignore errors.\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n\n    return isCallingProcess;\n  };\n};","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeChannelMergerNode = createNativeAudioNode(offlineAudioContext, ntvCntxt => ntvCntxt.createChannelMerger());\n\n    try {\n      nativeChannelMergerNode.channelCount = 2;\n    } catch {\n      return true;\n    }\n\n    return false;\n  };\n};","export const createTestConstantSourceNodeAccurateSchedulingSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return true;\n    }\n\n    const nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, ntvCntxt => ntvCntxt.createConstantSource());\n    /*\n     * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n     * the implementation of Firefox right now, but it could probably be done in a better way.\n     */\n\n    return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n  };\n};","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    const nativeConvolverNode = offlineAudioContext.createConvolver();\n    nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n\n    try {\n      nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n    } catch {\n      return false;\n    }\n\n    return true;\n  };\n};","export const createTestIsSecureContextSupport = window => {\n  return () => window !== null && window.hasOwnProperty('isSecureContext');\n};","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    }\n\n    const audioContext = new nativeAudioContextConstructor();\n\n    try {\n      audioContext.createMediaStreamSource(new MediaStream());\n      return false;\n    } catch (err) {\n      return true;\n    }\n  };\n};","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n\n    const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    }); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(resolve => {\n      nativeOfflineAudioContext.oncomplete = () => {\n        gainNode.disconnect();\n        resolve(nativeOfflineAudioContext.currentTime !== 0);\n      };\n\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    /*\n     * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n     * support the tested behaviour.\n     */\n\n    if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n      return Promise.resolve(true);\n    } // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return Promise.resolve(true);\n    }\n\n    const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n    const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n    constantSourceNode.channelCount = 1;\n    constantSourceNode.offset.value = 1;\n    stereoPanner.channelCount = 1;\n    constantSourceNode.start();\n    constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n    return nativeOfflineAudioContext.startRendering().then(buffer => buffer.getChannelData(0)[0] !== 1);\n  };\n};","const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  curve: null,\n  oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class WaveShaperNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null; // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n\n      super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n      this._isCurveNullified = false;\n      this._nativeWaveShaperNode = nativeWaveShaperNode;\n    }\n\n    get curve() {\n      if (this._isCurveNullified) {\n        return null;\n      }\n\n      return this._nativeWaveShaperNode.curve;\n    }\n\n    set curve(value) {\n      // Bug #103: Safari does not allow to set the curve to null.\n      if (value === null) {\n        this._isCurveNullified = true;\n        this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n      } else {\n        // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (value.length < 2) {\n          throw createInvalidStateError();\n        }\n\n        this._isCurveNullified = false;\n        this._nativeWaveShaperNode.curve = value;\n      }\n    }\n\n    get oversample() {\n      return this._nativeWaveShaperNode.oversample;\n    }\n\n    set oversample(value) {\n      this._nativeWaveShaperNode.oversample = value;\n    }\n\n  };\n};","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n  return () => {\n    const renderedNativeWaveShaperNodes = new WeakMap();\n\n    const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeWaveShaperNode = getNativeAudioNode(proxy); // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n\n      const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n      if (!nativeWaveShaperNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeWaveShaperNode.channelCount,\n          channelCountMode: nativeWaveShaperNode.channelCountMode,\n          channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n          curve: nativeWaveShaperNode.curve,\n          oversample: nativeWaveShaperNode.oversample\n        };\n        nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n      }\n\n      renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n      if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n      } else {\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n      }\n\n      return nativeWaveShaperNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeWaveShaperNode !== undefined) {\n          return Promise.resolve(renderedNativeWaveShaperNode);\n        }\n\n        return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","export const createWindow = () => typeof window === 'undefined' ? null : window;","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n  return audioBuffer => {\n    audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError();\n      }\n\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const destinationLength = destination.length;\n\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n        destination[i] = channelData[i + bufferOffset];\n      }\n    };\n\n    audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError();\n      }\n\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const sourceLength = source.length;\n\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n        channelData[i + bufferOffset] = source[i];\n      }\n    };\n  };\n};","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = convertNumberToUnsignedLong => {\n  return audioBuffer => {\n    audioBuffer.copyFromChannel = (copyFromChannel => {\n      return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n        if (bufferOffset < audioBuffer.length) {\n          return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyFromChannel);\n\n    audioBuffer.copyToChannel = (copyToChannel => {\n      return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n        if (bufferOffset < audioBuffer.length) {\n          return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyToChannel);\n  };\n};","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = overwriteAccessors => {\n  return (nativeAudioBufferSourceNode, nativeContext) => {\n    const nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n\n    if (nativeAudioBufferSourceNode.buffer === null) {\n      nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n    }\n\n    overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', get => () => {\n      const value = get.call(nativeAudioBufferSourceNode);\n      return value === nullifiedBuffer ? null : value;\n    }, set => value => {\n      return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n    });\n  };\n};","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createNativeAudioNode => {\n  return (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createGain());\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = (disconnect => {\n      return () => {\n        // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n        disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n      };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = (stop => {\n      let isStopped = false;\n      return (when = 0) => {\n        if (isStopped) {\n          try {\n            stop.call(nativeAudioScheduledSourceNode, when);\n          } catch {\n            nativeGainNode.gain.setValueAtTime(0, when);\n          }\n        } else {\n          stop.call(nativeAudioScheduledSourceNode, when);\n          isStopped = true;\n        }\n      };\n    })(nativeAudioScheduledSourceNode.stop);\n  };\n};","export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n  return (nativeContext, channelMergerNode) => {\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit';\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: () => 1,\n      set: () => {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: () => 'explicit',\n      set: () => {\n        throw createInvalidStateError();\n      }\n    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n\n    const audioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n\n    const whenConnected = () => {\n      const length = channelMergerNode.numberOfInputs;\n\n      for (let i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n    monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise(resolve => {\n  const arrayBuffer = new ArrayBuffer(0);\n  const {\n    port1,\n    port2\n  } = new MessageChannel();\n\n  port1.onmessage = ({\n    data\n  }) => resolve(data !== null);\n\n  port2.postMessage(arrayBuffer, [arrayBuffer]);\n});","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      const buffer = nativeAudioBufferSourceNode.buffer; // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n\n      const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset); // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n\n      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n        start.call(nativeAudioBufferSourceNode, when, 0, 0);\n      } else {\n        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n      }\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","export const isAudioWorkletNode = audioNode => {\n  return 'port' in audioNode;\n};","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n  const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n  if (!eventListeners.delete(eventListener)) {\n    throw new Error('Missing the expected event listener.');\n  }\n};","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = audioNode => {\n  return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};","export const pickElementFromSet = (set, predicate) => {\n  const matchingElements = Array.from(set).filter(predicate);\n\n  if (matchingElements.length > 1) {\n    throw Error('More than one element was found.');\n  }\n\n  if (matchingElements.length === 0) {\n    throw Error('No element was found.');\n  }\n\n  const [matchingElement] = matchingElements;\n  set.delete(matchingElement);\n  return matchingElement;\n};","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive'; // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\n\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every(connections => connections.size === 0)) {\n    setInternalStateToPassive(audioNode);\n  }\n};","export const testAudioNodeDisconnectMethodSupport = nativeAudioContext => {\n  return new Promise(resolve => {\n    const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n    const dummy = nativeAudioContext.createGain(); // Bug #95: Safari does not play one sample buffers.\n\n    const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n    const channelData = ones.getChannelData(0);\n    channelData[0] = 1;\n    channelData[1] = 1;\n    const source = nativeAudioContext.createBufferSource();\n    source.buffer = ones;\n    source.loop = true;\n    source.connect(analyzer).connect(nativeAudioContext.destination);\n    source.connect(dummy);\n    source.disconnect(dummy);\n\n    analyzer.onaudioprocess = event => {\n      const chnnlDt = event.inputBuffer.getChannelData(0);\n\n      if (Array.prototype.some.call(chnnlDt, sample => sample === 1)) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n\n      source.stop();\n      analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n      source.disconnect(analyzer);\n      analyzer.disconnect(nativeAudioContext.destination);\n    };\n\n    source.start();\n  });\n};","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n  const counts = new Map();\n\n  for (const cycle of cycles) {\n    for (const audioNode of cycle) {\n      const count = counts.get(audioNode);\n      counts.set(audioNode, count === undefined ? 1 : count + 1);\n    }\n  }\n\n  counts.forEach((count, audioNode) => visitor(audioNode, count));\n};","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = nativeAudioNode => {\n  const connections = new Map();\n\n  nativeAudioNode.connect = (connect => {\n    return (destination, output = 0, input = 0) => {\n      const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output); // Save the new connection only if the calls to connect above didn't throw an error.\n\n      const connectionsToDestination = connections.get(destination);\n\n      if (connectionsToDestination === undefined) {\n        connections.set(destination, [{\n          input,\n          output\n        }]);\n      } else {\n        if (connectionsToDestination.every(connection => connection.input !== input || connection.output !== output)) {\n          connectionsToDestination.push({\n            input,\n            output\n          });\n        }\n      }\n\n      return returnValue;\n    };\n  })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n  nativeAudioNode.disconnect = (disconnect => {\n    return (destinationOrOutput, output, input) => {\n      disconnect.apply(nativeAudioNode);\n\n      if (destinationOrOutput === undefined) {\n        connections.clear();\n      } else if (typeof destinationOrOutput === 'number') {\n        for (const [destination, connectionsToDestination] of connections) {\n          const filteredConnections = connectionsToDestination.filter(connection => connection.output !== destinationOrOutput);\n\n          if (filteredConnections.length === 0) {\n            connections.delete(destination);\n          } else {\n            connections.set(destination, filteredConnections);\n          }\n        }\n      } else if (connections.has(destinationOrOutput)) {\n        if (output === undefined) {\n          connections.delete(destinationOrOutput);\n        } else {\n          const connectionsToDestination = connections.get(destinationOrOutput);\n\n          if (connectionsToDestination !== undefined) {\n            const filteredConnections = connectionsToDestination.filter(connection => connection.output !== output && (connection.input !== input || input === undefined));\n\n            if (filteredConnections.length === 0) {\n              connections.delete(destinationOrOutput);\n            } else {\n              connections.set(destinationOrOutput, filteredConnections);\n            }\n          }\n        }\n      }\n\n      for (const [destination, connectionsToDestination] of connections) {\n        connectionsToDestination.forEach(connection => {\n          if (isNativeAudioNode(destination)) {\n            nativeAudioNode.connect(destination, connection.output, connection.input);\n          } else {\n            nativeAudioNode.connect(destination, connection.output);\n          }\n        });\n      }\n    };\n  })(nativeAudioNode.disconnect);\n};","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { getValueForKey } from '../helpers/get-value-for-key';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { pickElementFromSet } from '../helpers/pick-element-from-set';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\n\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n  insertElementInSet(activeInputs[input], [source, output, eventListener], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n  insertElementInSet(activeInputs, [source, output, eventListener], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n  return pickElementFromSet(activeInputs[input], activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n  return pickElementFromSet(activeInputs, activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n  const passiveInputConnections = passiveInputs.get(source);\n\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, input, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, input, eventListener], passiveInputConnection => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n  }\n};\n\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n  const passiveInputConnections = passiveInputs.get(source);\n\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, eventListener], passiveInputConnection => passiveInputConnection[0] === output, ignoreDuplicates);\n  }\n};\n\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, passiveInputConnection => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n\n  return matchingConnection;\n};\n\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, passiveInputConnection => passiveInputConnection[0] === output);\n\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n\n  return matchingConnection;\n};\n\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioNodeConnections(destination);\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n  const eventListeners = getEventListenersOfAudioNode(source);\n\n  const eventListener = isActive => {\n    const nativeDestinationAudioNode = getNativeAudioNode(destination);\n    const nativeSourceAudioNode = getNativeAudioNode(source);\n\n    if (isActive) {\n      const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n      addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n      }\n\n      if (isPassiveAudioNode(destination)) {\n        setInternalStateToActive(destination);\n      }\n    } else {\n      const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n      addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n      }\n\n      if (isActiveAudioNode(destination)) {\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n      }\n    }\n  };\n\n  if (insertElementInSet(outputs, [destination, output, input], outputConnection => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n    eventListeners.add(eventListener);\n\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n\n  if (insertElementInSet(outputs, [destination, output, input], outputConnection => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n    const {\n      activeInputs\n    } = getAudioNodeConnections(destination);\n    addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioParamConnections(destination);\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n  const eventListeners = getEventListenersOfAudioNode(source);\n\n  const eventListener = isActive => {\n    const nativeAudioNode = getNativeAudioNode(source);\n    const nativeAudioParam = getNativeAudioParam(destination);\n\n    if (isActive) {\n      const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n      addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        nativeAudioNode.connect(nativeAudioParam, output);\n      }\n    } else {\n      const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n      addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n      if (!isPartOfACycle(source)) {\n        nativeAudioNode.disconnect(nativeAudioParam, output);\n      }\n    }\n  };\n\n  if (insertElementInSet(outputs, [destination, output], outputConnection => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n    eventListeners.add(eventListener);\n\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n  const {\n    outputs\n  } = getAudioNodeConnections(source);\n\n  if (insertElementInSet(outputs, [destination, output], outputConnection => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n    const {\n      activeInputs\n    } = getAudioParamConnections(destination);\n    addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n    return true;\n  }\n\n  return false;\n};\n\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n  for (const activeInputConnection of activeInputConnections) {\n    if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n      activeInputConnections.delete(activeInputConnection);\n      return activeInputConnection;\n    }\n  }\n\n  return null;\n};\n\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioNodeConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n    return [passiveInputConnection[2], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n  const {\n    activeInputs,\n    passiveInputs\n  } = getAudioParamConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n    return [passiveInputConnection[1], false];\n  }\n\n  return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isPartOfACycle(source)) {\n      disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n    }\n  }\n\n  if (isActiveAudioNode(destination)) {\n    const {\n      activeInputs\n    } = getAudioNodeConnections(destination);\n    setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n  }\n};\n\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n\n    if (isActive && !isPartOfACycle(source)) {\n      getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n    }\n  }\n};\n\nconst deleteAnyConnection = source => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, ...outputConnection);\n    }\n\n    destinations.push(outputConnection[0]);\n  }\n\n  audioNodeConnectionsOfSource.outputs.clear();\n  return destinations;\n};\n\nconst deleteConnectionAtOutput = (source, output) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (outputConnection[1] === output) {\n      if (isAudioNodeOutputConnection(outputConnection)) {\n        deleteInputsOfAudioNode(source, ...outputConnection);\n      } else {\n        deleteInputsOfAudioParam(source, ...outputConnection);\n      }\n\n      destinations.push(outputConnection[0]);\n      audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    }\n  }\n\n  return destinations;\n};\n\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  return Array.from(audioNodeConnectionsOfSource.outputs).filter(outputConnection => outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input)).map(outputConnection => {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, ...outputConnection);\n    }\n\n    audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    return outputConnection[0];\n  });\n};\n\nexport const createAudioNodeConstructor = (addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n  return class AudioNode extends eventTargetConstructor {\n    constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n      super(nativeAudioNode);\n      this._context = context;\n      this._nativeAudioNode = nativeAudioNode;\n      const nativeContext = getNativeContext(context); // Bug #12: Safari does not support to disconnect a specific destination.\n\n      if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n        return testAudioNodeDisconnectMethodSupport(nativeContext);\n      })) {\n        wrapAudioNodeDisconnectMethod(nativeAudioNode);\n      }\n\n      AUDIO_NODE_STORE.set(this, nativeAudioNode);\n      EVENT_LISTENERS.set(this, new Set());\n\n      if (isActive) {\n        setInternalStateToActive(this);\n      }\n\n      addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n    }\n\n    get channelCount() {\n      return this._nativeAudioNode.channelCount;\n    }\n\n    set channelCount(value) {\n      this._nativeAudioNode.channelCount = value;\n    }\n\n    get channelCountMode() {\n      return this._nativeAudioNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      this._nativeAudioNode.channelCountMode = value;\n    }\n\n    get channelInterpretation() {\n      return this._nativeAudioNode.channelInterpretation;\n    }\n\n    set channelInterpretation(value) {\n      this._nativeAudioNode.channelInterpretation = value;\n    }\n\n    get context() {\n      return this._context;\n    }\n\n    get numberOfInputs() {\n      return this._nativeAudioNode.numberOfInputs;\n    }\n\n    get numberOfOutputs() {\n      return this._nativeAudioNode.numberOfOutputs;\n    }\n\n    connect(destination, output = 0, input = 0) {\n      // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n      if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n        throw createIndexSizeError();\n      }\n\n      const nativeContext = getNativeContext(this._context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n      if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n        throw createInvalidAccessError();\n      }\n\n      if (isAudioNode(destination)) {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n        try {\n          const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n\n          if (isOffline || isPassiveAudioNode(this)) {\n            this._nativeAudioNode.disconnect(...connection);\n          } else if (isPassiveAudioNode(destination)) {\n            setInternalStateToActive(destination);\n          } // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n          // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n\n\n          if (isAudioWorkletNode(destination)) {\n            const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);\n\n            if (auxiliaryGainNodes === undefined) {\n              const nativeGainNode = nativeContext.createGain();\n              nativeGainNode.connect(connection[0], 0, connection[2]);\n              auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n            } else if (auxiliaryGainNodes.get(input) === undefined) {\n              const nativeGainNode = nativeContext.createGain();\n              nativeGainNode.connect(connection[0], 0, connection[2]);\n              auxiliaryGainNodes.set(input, nativeGainNode);\n            }\n          }\n        } catch (err) {\n          // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n          if (err.code === 12) {\n            throw createInvalidAccessError();\n          }\n\n          throw err;\n        }\n\n        const isNewConnectionToAudioNode = isOffline ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input) : addConnectionToAudioNodeOfAudioContext(this, destination, output, input); // Bug #164: Only Firefox detects cycles so far.\n\n        if (isNewConnectionToAudioNode) {\n          const cycles = detectCycles([this], destination);\n          visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n        }\n\n        return destination;\n      }\n\n      const nativeAudioParam = getNativeAudioParam(destination);\n      /*\n       * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n       * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n       * Safari.\n       */\n\n      if (nativeAudioParam.name === 'playbackRate') {\n        throw createNotSupportedError();\n      }\n\n      try {\n        this._nativeAudioNode.connect(nativeAudioParam, output);\n\n        if (isOffline || isPassiveAudioNode(this)) {\n          this._nativeAudioNode.disconnect(nativeAudioParam, output);\n        }\n      } catch (err) {\n        // Bug #58: Only Firefox does throw an InvalidStateError yet.\n        if (err.code === 12) {\n          throw createInvalidAccessError();\n        }\n\n        throw err;\n      }\n\n      const isNewConnectionToAudioParam = isOffline ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output) : addConnectionToAudioParamOfAudioContext(this, destination, output); // Bug #164: Only Firefox detects cycles so far.\n\n      if (isNewConnectionToAudioParam) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n      }\n    }\n\n    disconnect(destinationOrOutput, output, input) {\n      let destinations;\n\n      if (destinationOrOutput === undefined) {\n        destinations = deleteAnyConnection(this);\n      } else if (typeof destinationOrOutput === 'number') {\n        if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n          throw createIndexSizeError();\n        }\n\n        destinations = deleteConnectionAtOutput(this, destinationOrOutput);\n      } else {\n        if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n          throw createIndexSizeError();\n        }\n\n        if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n          throw createIndexSizeError();\n        }\n\n        destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);\n\n        if (destinations.length === 0) {\n          throw createInvalidAccessError();\n        }\n      } // Bug #164: Only Firefox detects cycles so far.\n\n\n      for (const destination of destinations) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n      }\n    }\n\n  };\n};","export const cloneAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  return new Promise((resolve, reject) => {\n    const {\n      port1,\n      port2\n    } = new MessageChannel();\n\n    port1.onmessage = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n\n    port1.onmessageerror = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      reject(data);\n    }; // This will throw an error if the audioWorkletNodeOptions are not clonable.\n\n\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n  const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n  return new processorConstructor(clonedAudioWorkletNodeOptions);\n};","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) => {\n  return (nativeContext, baseLatency, processorConstructor, options) => {\n    if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n      throw createNotSupportedError();\n    }\n\n    if (options.outputChannelCount !== undefined) {\n      // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n      if (options.outputChannelCount.some(channelCount => channelCount < 1)) {\n        throw createNotSupportedError();\n      }\n\n      if (options.outputChannelCount.length !== options.numberOfOutputs) {\n        throw createIndexSizeError();\n      }\n    } // Bug #61: This is not part of the standard but required for the faker to work.\n\n\n    if (options.channelCountMode !== 'explicit') {\n      throw createNotSupportedError();\n    }\n\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length; // Bug #61: This is not part of the standard but required for the faker to work.\n\n    if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n      throw createNotSupportedError();\n    }\n\n    const messageChannel = new MessageChannel();\n    const gainNodes = [];\n    const inputChannelSplitterNodes = [];\n\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes.push(createNativeGainNode(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: options.channelCountMode,\n        channelInterpretation: options.channelInterpretation,\n        gain: 1\n      }));\n      inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'discrete',\n        numberOfOutputs: options.channelCount\n      }));\n    }\n\n    const constantSourceNodes = [];\n\n    if (processorConstructor.parameterDescriptors !== undefined) {\n      for (const {\n        defaultValue,\n        maxValue,\n        minValue,\n        name\n      } of processorConstructor.parameterDescriptors) {\n        const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n          channelCount: 1,\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue\n        });\n        Object.defineProperties(constantSourceNode.offset, {\n          defaultValue: {\n            get: () => defaultValue === undefined ? 0 : defaultValue\n          },\n          maxValue: {\n            get: () => maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue\n          },\n          minValue: {\n            get: () => minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue\n          }\n        });\n        constantSourceNodes.push(constantSourceNode);\n      }\n    }\n\n    const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'speakers',\n      numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n    });\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n    Math.max(1, numberOfOutputChannels));\n    const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n      channelCount: Math.max(1, numberOfOutputChannels),\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      numberOfOutputs: Math.max(1, numberOfOutputChannels)\n    });\n    const outputChannelMergerNodes = [];\n\n    for (let i = 0; i < options.numberOfOutputs; i += 1) {\n      outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'speakers',\n        numberOfInputs: options.outputChannelCount[i]\n      }));\n    }\n\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n      for (let j = 0; j < options.channelCount; j += 1) {\n        inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n      }\n    }\n\n    const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(({\n      name\n    }, index) => {\n      const constantSourceNode = constantSourceNodes[index];\n      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n      constantSourceNode.start(0);\n      return [name, constantSourceNode.offset];\n    }));\n    inputChannelMergerNode.connect(scriptProcessorNode);\n    let channelInterpretation = options.channelInterpretation;\n    let onprocessorerror = null; // Bug #87: Expose at least one output to make this node connectable.\n\n    const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n    const nativeAudioWorkletNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n\n      get channelCount() {\n        return options.channelCount;\n      },\n\n      set channelCount(_) {\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        throw createInvalidStateError();\n      },\n\n      get channelCountMode() {\n        return options.channelCountMode;\n      },\n\n      set channelCountMode(_) {\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        throw createInvalidStateError();\n      },\n\n      get channelInterpretation() {\n        return channelInterpretation;\n      },\n\n      set channelInterpretation(value) {\n        for (const gainNode of gainNodes) {\n          gainNode.channelInterpretation = value;\n        }\n\n        channelInterpretation = value;\n      },\n\n      get context() {\n        return scriptProcessorNode.context;\n      },\n\n      get inputs() {\n        return gainNodes;\n      },\n\n      get numberOfInputs() {\n        return options.numberOfInputs;\n      },\n\n      get numberOfOutputs() {\n        return options.numberOfOutputs;\n      },\n\n      get onprocessorerror() {\n        return onprocessorerror;\n      },\n\n      set onprocessorerror(value) {\n        if (typeof onprocessorerror === 'function') {\n          nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n        }\n\n        onprocessorerror = typeof value === 'function' ? value : null;\n\n        if (typeof onprocessorerror === 'function') {\n          nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n        }\n      },\n\n      get parameters() {\n        return parameterMap;\n      },\n\n      get port() {\n        return messageChannel.port2;\n      },\n\n      addEventListener(...args) {\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n\n      connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n      disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n\n    };\n    const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n\n    messageChannel.port1.addEventListener = (addEventListener => {\n      return (...args) => {\n        if (args[0] === 'message') {\n          const unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;\n\n          if (unpatchedEventListener !== null) {\n            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n            if (patchedEventListener !== undefined) {\n              args[1] = patchedEventListener;\n            } else {\n              args[1] = event => {\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n              };\n\n              patchedEventListeners.set(unpatchedEventListener, args[1]);\n            }\n          }\n        }\n\n        return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.addEventListener);\n\n    messageChannel.port1.removeEventListener = (removeEventListener => {\n      return (...args) => {\n        if (args[0] === 'message') {\n          const patchedEventListener = patchedEventListeners.get(args[1]);\n\n          if (patchedEventListener !== undefined) {\n            patchedEventListeners.delete(args[1]);\n            args[1] = patchedEventListener;\n          }\n        }\n\n        return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.removeEventListener);\n\n    let onmessage = null;\n    Object.defineProperty(messageChannel.port1, 'onmessage', {\n      get: () => onmessage,\n      set: value => {\n        if (typeof onmessage === 'function') {\n          messageChannel.port1.removeEventListener('message', onmessage);\n        }\n\n        onmessage = typeof value === 'function' ? value : null;\n\n        if (typeof onmessage === 'function') {\n          messageChannel.port1.addEventListener('message', onmessage);\n          messageChannel.port1.start();\n        }\n      }\n    });\n    processorConstructor.prototype.port = messageChannel.port1;\n    let audioWorkletProcessor = null;\n    const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n    audioWorkletProcessorPromise.then(dWrkltPrcssr => audioWorkletProcessor = dWrkltPrcssr);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce((prmtrs, {\n      name\n    }) => ({ ...prmtrs,\n      [name]: new Float32Array(128)\n    }), {});\n    let isActive = true;\n\n    const disconnectOutputsGraph = () => {\n      if (options.numberOfOutputs > 0) {\n        scriptProcessorNode.disconnect(outputChannelSplitterNode);\n      }\n\n      for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n        const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n        for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n          outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n        }\n\n        outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n      }\n    };\n\n    scriptProcessorNode.onaudioprocess = ({\n      inputBuffer,\n      outputBuffer\n    }) => {\n      if (audioWorkletProcessor !== null) {\n        for (let i = 0; i < bufferSize; i += 128) {\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.channelCount; k += 1) {\n              copyFromChannel(inputBuffer, inputs[j], k, k, i);\n            }\n          }\n\n          if (processorConstructor.parameterDescriptors !== undefined) {\n            processorConstructor.parameterDescriptors.forEach(({\n              name\n            }, index) => {\n              copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n          }\n\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n              // The byteLength will be 0 when the ArrayBuffer was transferred.\n              if (outputs[j][k].byteLength === 0) {\n                outputs[j][k] = new Float32Array(128);\n              }\n            }\n          }\n\n          try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n              const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);\n\n              if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                return [];\n              }\n\n              return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            isActive = activeSourceFlag;\n\n            for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n              for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n              }\n\n              outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n            }\n          } catch (error) {\n            isActive = false;\n            nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n              error\n            }));\n          }\n\n          if (!isActive) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n              gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n              for (let k = 0; k < options.channelCount; k += 1) {\n                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n              }\n            }\n\n            if (processorConstructor.parameterDescriptors !== undefined) {\n              const length = processorConstructor.parameterDescriptors.length;\n\n              for (let j = 0; j < length; j += 1) {\n                const constantSourceNode = constantSourceNodes[j];\n                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                constantSourceNode.stop();\n              }\n            }\n\n            inputChannelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n            if (isConnected) {\n              disconnectOutputsGraph();\n            } else {\n              disconnectFakeGraph();\n            }\n\n            break;\n          }\n        }\n      }\n    };\n\n    let isConnected = false; // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n\n    const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode)\n    /*\n     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here\n     * to make sure to connect the right destination.\n     */\n    .connect(nativeGainNode.context.destination);\n\n    const disconnectFakeGraph = () => {\n      scriptProcessorNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    const whenConnected = () => {\n      if (isActive) {\n        disconnectFakeGraph();\n\n        if (options.numberOfOutputs > 0) {\n          scriptProcessorNode.connect(outputChannelSplitterNode);\n        }\n\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n          for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n        }\n      }\n\n      isConnected = true;\n    };\n\n    const whenDisconnected = () => {\n      if (isActive) {\n        connectFakeGraph();\n        disconnectOutputsGraph();\n      }\n\n      isConnected = false;\n    };\n\n    connectFakeGraph();\n    return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n  };\n};","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n  if (nodeToProcessorMap === undefined) {\n    nodeToProcessorMap = new WeakMap();\n    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n  }\n\n  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n  return audioWorkletProcessorPromise;\n};","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioBufferSourceNodeStartMethodDurationParameter } from '../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n  return (nativeContext, options = {}) => {\n    const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createBufferSource());\n    assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate'); // Bug #71: Edge does not allow to set the buffer to null.\n\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer'); // Bug #149: Safari does not yet support the detune AudioParam.\n\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart'); // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n    } // Bug #92: Chrome & Edge do not respect the duration parameter yet.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n      wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n    } // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n\n\n    if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n      wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n    return nativeAudioBufferSourceNode;\n  };\n};","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    let isScheduled = false;\n    return (when = 0, offset = 0, duration) => {\n      if (isScheduled) {\n        throw createInvalidStateError();\n      }\n\n      start.call(nativeAudioBufferSourceNode, when, offset, duration);\n      isScheduled = true;\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","export const wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n  let endTime = Number.POSITIVE_INFINITY;\n  let stopTime = Number.POSITIVE_INFINITY;\n\n  nativeAudioScheduledSourceNode.start = ((start, stop) => {\n    return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n      start.call(nativeAudioScheduledSourceNode, when, offset);\n\n      if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n        const actualStartTime = Math.max(when, nativeContext.currentTime); // @todo The playbackRate could of course also have been automated and is not always fixed.\n\n        const durationInBufferTime = duration / nativeAudioScheduledSourceNode.playbackRate.value;\n        endTime = actualStartTime + durationInBufferTime;\n        stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n      }\n    };\n  })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n\n  nativeAudioScheduledSourceNode.stop = (stop => {\n    return (when = 0) => {\n      stopTime = Math.max(when, nativeContext.currentTime);\n      stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = nativeAnalyserNode => {\n  return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n  return (nativeContext, options) => {\n    const nativeAnalyserNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createAnalyser()); // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n\n    assignNativeAudioNodeOptions(nativeAnalyserNode, options); // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n\n    if (!(options.maxDecibels > options.minDecibels)) {\n      throw createIndexSizeError();\n    }\n\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant'); // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n\n    if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n    }\n\n    return nativeAnalyserNode;\n  };\n};","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = nativeAnalyserNode => {\n  nativeAnalyserNode.getFloatTimeDomainData = array => {\n    const byteTimeDomainData = new Uint8Array(array.length);\n    nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n    const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n    for (let i = 0; i < length; i += 1) {\n      array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n    }\n\n    return array;\n  };\n};","const handler = {\n  construct() {\n    return handler;\n  }\n\n};\nexport const isConstructible = constructible => {\n  try {\n    const proxy = new Proxy(constructible, handler);\n    new proxy(); // tslint:disable-line:no-unused-expression\n  } catch {\n    return false;\n  }\n\n  return true;\n};","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source, url) => {\n  const importStatements = [];\n  let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n  let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n  while (result !== null) {\n    const unresolvedUrl = result[1].slice(1, -1);\n    const importStatementWithResolvedUrl = result[0].replace(/([\\s]+)?;?$/, '').replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n    importStatements.push(importStatementWithResolvedUrl);\n    sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n    result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n  }\n\n  return [importStatements.join(';'), sourceWithoutImportStatements];\n};","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\n\nconst verifyParameterDescriptors = parameterDescriptors => {\n  if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n    throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n  }\n};\n\nconst verifyProcessorCtor = processorCtor => {\n  if (!isConstructible(processorCtor)) {\n    throw new TypeError('The given value for processorCtor should be a constructor.');\n  }\n\n  if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n    throw new TypeError('The given value for processorCtor should have a prototype.');\n  }\n};\n\nexport const createAddAudioWorkletModule = (createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) => {\n  return (context, moduleURL, options = {\n    credentials: 'omit'\n  }) => {\n    const nativeContext = getNativeContext(context);\n    const absoluteUrl = new URL(moduleURL, window.location.href).toString(); // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n\n    if (nativeContext.audioWorklet !== undefined) {\n      return fetchSource(moduleURL).then(source => {\n        const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n        /*\n         * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is\n         * connected.\n         *\n         * This is the unminified version of the code used below:\n         *\n         * ```js\n         * `${ importStatements };\n         * ((registerProcessor) => {${ sourceWithoutImportStatements }\n         * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n         *\n         *     process (inputs, outputs, parameters) {\n         *         return super.process(\n         *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n         *             outputs,\n         *             parameters\n         *         );\n         *     }\n         *\n         * }))`\n         * ```\n         */\n\n        const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`; // tslint:disable-line:max-line-length\n\n        const blob = new Blob([wrappedSource], {\n          type: 'application/javascript; charset=utf-8'\n        });\n        const url = URL.createObjectURL(blob);\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        const nativeContextOrBackupNativeContext = backupNativeContext !== null ? backupNativeContext : nativeContext;\n        return nativeContextOrBackupNativeContext.audioWorklet.addModule(url, options).then(() => URL.revokeObjectURL(url)) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n        .catch(err => {\n          URL.revokeObjectURL(url);\n\n          if (err.code === undefined || err.name === 'SyntaxError') {\n            err.code = 12;\n          }\n\n          throw err;\n        });\n      });\n    }\n\n    const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n    if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n      return Promise.resolve();\n    }\n\n    const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n    if (ongoingRequestsOfContext !== undefined) {\n      const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n      if (promiseOfOngoingRequest !== undefined) {\n        return promiseOfOngoingRequest;\n      }\n    }\n\n    const promise = fetchSource(moduleURL).then(source => {\n      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n      /*\n       * This is the unminified version of the code used below:\n       *\n       * ```js\n       * ${ importStatements };\n       * ((a, b) => {\n       *     (a[b] = a[b] || [ ]).push(\n       *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n       *             ${ sourceWithoutImportStatements }\n       *         }\n       *     );\n       * })(window, '_AWGS');\n       * ```\n       */\n      // tslint:disable-next-line:max-line-length\n\n      const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`; // @todo Evaluating the given source code is a possible security problem.\n\n      return evaluateSource(wrappedSource);\n    }).then(() => {\n      const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n\n      if (evaluateAudioWorkletGlobalScope === undefined) {\n        throw new SyntaxError();\n      }\n\n      exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {}, undefined, (name, processorCtor) => {\n        if (name.trim() === '') {\n          throw createNotSupportedError();\n        }\n\n        const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n        if (nodeNameToProcessorConstructorMap !== undefined) {\n          if (nodeNameToProcessorConstructorMap.has(name)) {\n            throw createNotSupportedError();\n          }\n\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n        } else {\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n        }\n      }, nativeContext.sampleRate, undefined, undefined));\n    }).catch(err => {\n      if (err.code === undefined || err.name === 'SyntaxError') {\n        err.code = 12;\n      }\n\n      throw err;\n    });\n\n    if (ongoingRequestsOfContext === undefined) {\n      ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n    } else {\n      ongoingRequestsOfContext.set(moduleURL, promise);\n    }\n\n    promise.then(() => {\n      const rslvdRqstsFCntxt = resolvedRequests.get(context);\n\n      if (rslvdRqstsFCntxt === undefined) {\n        resolvedRequests.set(context, new Set([moduleURL]));\n      } else {\n        rslvdRqstsFCntxt.add(moduleURL);\n      }\n    }).catch(() => {}) // tslint:disable-line:no-empty\n    // @todo Use finally when it becomes available in all supported browsers.\n    .then(() => {\n      const ngngRqstsFCntxt = ongoingRequests.get(context);\n\n      if (ngngRqstsFCntxt !== undefined) {\n        ngngRqstsFCntxt.delete(moduleURL);\n      }\n    });\n    return promise;\n  };\n};","export const isDelayNode = audioNode => {\n  return 'delayTime' in audioNode;\n};","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n  return function detectCycles(chain, nextLink) {\n    const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n\n    if (isDelayNode(audioNode)) {\n      return [];\n    }\n\n    if (chain[0] === audioNode) {\n      return [chain];\n    }\n\n    if (chain.includes(audioNode)) {\n      return [];\n    }\n\n    const {\n      outputs\n    } = getAudioNodeConnections(audioNode);\n    return Array.from(outputs).map(outputConnection => detectCycles([...chain, audioNode], outputConnection[0])).reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n  };\n};","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n  return (anyContext, audioData) => {\n    const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext); // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n\n    if (detachedArrayBuffers.has(audioData)) {\n      const err = createDataCloneError();\n      return Promise.reject(err);\n    } // The audioData parameter maybe of a type which can't be added to a WeakSet.\n\n\n    try {\n      detachedArrayBuffers.add(audioData);\n    } catch {} // Ignore errors.\n    // Bug #21: Safari does not support promises yet.\n\n\n    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n      // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n      const nativeContextOrBackupNativeContext = nativeContext.state === 'closed' && nativeOfflineAudioContextConstructor !== null && isNativeOfflineAudioContext(nativeContext) ? new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) : nativeContext;\n      const promise = nativeContextOrBackupNativeContext.decodeAudioData(audioData).catch(err => {\n        // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n        if (err instanceof DOMException && err.name === 'NotSupportedError') {\n          throw new TypeError();\n        }\n\n        throw err;\n      });\n      return promise.then(audioBuffer => {\n        // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n          wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n      });\n    } // Bug #21: Safari does not return a Promise yet.\n\n\n    return new Promise((resolve, reject) => {\n      const complete = () => {\n        // Bug #133: Safari does neuter the ArrayBuffer.\n        try {\n          detachArrayBuffer(audioData);\n        } catch {\n          /* Ignore errors. */\n        }\n      };\n\n      const fail = err => {\n        reject(err);\n        complete();\n      }; // Bug #26: Safari throws a synchronous error.\n\n\n      try {\n        // Bug #1: Safari requires a successCallback.\n        nativeContext.decodeAudioData(audioData, audioBuffer => {\n          // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n          // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n          if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n          }\n\n          audioBufferStore.add(audioBuffer);\n          complete();\n          resolve(audioBuffer);\n        }, err => {\n          // Bug #4: Safari returns null instead of an error.\n          if (err === null) {\n            fail(createEncodingError());\n          } else {\n            fail(err);\n          }\n        });\n      } catch (err) {\n        fail(err);\n      }\n    });\n  };\n};","export const detachArrayBuffer = arrayBuffer => {\n  const {\n    port1\n  } = new MessageChannel();\n  port1.postMessage(arrayBuffer, [arrayBuffer]);\n};","export const testClonabilityOfAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  const {\n    port1\n  } = new MessageChannel();\n\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n  }\n};","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n  return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n    if (nativeAudioWorkletNodeConstructor !== null) {\n      try {\n        const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n          return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n        });\n        const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n\n        let onprocessorerror = null;\n        Object.defineProperties(nativeAudioWorkletNode, {\n          /*\n           * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n           * browsers have no native implementation to achieve a consistent behavior.\n           */\n          channelCount: {\n            get: () => options.channelCount,\n            set: () => {\n              throw createInvalidStateError();\n            }\n          },\n          channelCountMode: {\n            get: () => 'explicit',\n            set: () => {\n              throw createInvalidStateError();\n            }\n          },\n          // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.\n          onprocessorerror: {\n            get: () => onprocessorerror,\n            set: value => {\n              if (typeof onprocessorerror === 'function') {\n                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n              }\n\n              onprocessorerror = typeof value === 'function' ? value : null;\n\n              if (typeof onprocessorerror === 'function') {\n                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n              }\n            }\n          }\n        });\n\n        nativeAudioWorkletNode.addEventListener = (addEventListener => {\n          return (...args) => {\n            if (args[0] === 'processorerror') {\n              const unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;\n\n              if (unpatchedEventListener !== null) {\n                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                if (patchedEventListener !== undefined) {\n                  args[1] = patchedEventListener;\n                } else {\n                  args[1] = event => {\n                    unpatchedEventListener(new ErrorEvent(args[0], { ...event,\n                      error: new Error()\n                    }));\n                  };\n\n                  patchedEventListeners.set(unpatchedEventListener, args[1]);\n                }\n              }\n            }\n\n            return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n          };\n        })(nativeAudioWorkletNode.addEventListener);\n\n        nativeAudioWorkletNode.removeEventListener = (removeEventListener => {\n          return (...args) => {\n            if (args[0] === 'processorerror') {\n              const patchedEventListener = patchedEventListeners.get(args[1]);\n\n              if (patchedEventListener !== undefined) {\n                patchedEventListeners.delete(args[1]);\n                args[1] = patchedEventListener;\n              }\n            }\n\n            return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n          };\n        })(nativeAudioWorkletNode.removeEventListener);\n        /*\n         * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has\n         * an output.\n         */\n\n\n        if (options.numberOfOutputs !== 0) {\n          const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n          });\n          nativeAudioWorkletNode.connect(nativeGainNode)\n          /*\n           * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n           * used here to make sure to connect the right destination.\n           */\n          .connect(nativeGainNode.context.destination);\n\n          const whenConnected = () => nativeGainNode.disconnect();\n          /*\n           * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n           * used here to make sure to connect the right destination.\n           */\n\n\n          const whenDisconnected = () => nativeGainNode.connect(nativeGainNode.context.destination); // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n\n\n          return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n        }\n\n        return nativeAudioWorkletNode;\n      } catch (err) {\n        // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.\n        if (err.code === 11) {\n          throw createNotSupportedError();\n        }\n\n        throw err;\n      }\n    } // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n\n\n    if (processorConstructor === undefined) {\n      throw createNotSupportedError();\n    }\n\n    testClonabilityOfAudioWorkletNodeOptions(options);\n    return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n  };\n};","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\n\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n  // Ceil the length to the next full render quantum.\n  // Bug #17: Safari does not yet expose the length.\n  const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n  const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n  const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n  const processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n  if (processorConstructor === undefined) {\n    throw new Error('Missing the processor constructor.');\n  }\n\n  const audioNodeConnections = getAudioNodeConnections(proxy);\n  const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n  const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n  const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n  const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs,\n    [name]: new Float32Array(128)\n  }), {});\n\n  for (let i = 0; i < length; i += 128) {\n    if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n      for (let j = 0; j < options.numberOfInputs; j += 1) {\n        for (let k = 0; k < options.channelCount; k += 1) {\n          copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n        }\n      }\n    }\n\n    if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n      processorConstructor.parameterDescriptors.forEach(({\n        name\n      }, index) => {\n        copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n      });\n    }\n\n    for (let j = 0; j < options.numberOfInputs; j += 1) {\n      for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (outputs[j][k].byteLength === 0) {\n          outputs[j][k] = new Float32Array(128);\n        }\n      }\n    }\n\n    try {\n      const potentiallyEmptyInputs = inputs.map((input, index) => {\n        if (audioNodeConnections.activeInputs[index].size === 0) {\n          return [];\n        }\n\n        return input;\n      });\n      const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n\n      if (processedBuffer !== null) {\n        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n          for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n            copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n        }\n      }\n\n      if (!activeSourceFlag) {\n        break;\n      }\n    } catch (error) {\n      proxy.dispatchEvent(new ErrorEvent('processorerror', {\n        error\n      }));\n      break;\n    }\n  }\n\n  return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n  return (name, options, processorConstructor) => {\n    const renderedNativeAudioNodes = new WeakMap();\n    let processedBufferPromise = null;\n\n    const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n      let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n      let nativeOutputNodes = null;\n      const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext); // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n\n      if (nativeAudioWorkletNodeConstructor === null) {\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n          channelCount: Math.max(1, numberOfOutputChannels),\n          channelCountMode: 'explicit',\n          channelInterpretation: 'discrete',\n          numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n\n        for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n          outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: options.outputChannelCount[i]\n          }));\n        }\n\n        const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n          channelCount: options.channelCount,\n          channelCountMode: options.channelCountMode,\n          channelInterpretation: options.channelInterpretation,\n          gain: 1\n        });\n        outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n        outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n        nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n      } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n      }\n\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n\n      if (nativeOutputNodes !== null) {\n        if (processedBufferPromise === null) {\n          if (processorConstructor === undefined) {\n            throw new Error('Missing the processor constructor.');\n          }\n\n          if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n          } // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n\n\n          const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n          const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n          const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n          const renderBuffer = async () => {\n            const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, // Ceil the length to the next full render quantum.\n            // Bug #17: Safari does not yet expose the length.\n            Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n            const gainNodes = [];\n            const inputChannelSplitterNodes = [];\n\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n              }));\n              inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n              }));\n            }\n\n            const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async audioParam => {\n              const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                offset: audioParam.value\n              });\n              await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n              return constantSourceNode;\n            }));\n            const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n              channelCount: 1,\n              channelCountMode: 'explicit',\n              channelInterpretation: 'speakers',\n              numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n            });\n\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n              for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n              }\n            }\n\n            for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n              constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n              constantSourceNode.start(0);\n            }\n\n            inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n            await Promise.all(gainNodes.map(gainNode => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n            return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n          };\n\n          processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime);\n        }\n\n        const processedBuffer = await processedBufferPromise;\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n        const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n        if (processedBuffer !== null) {\n          audioBufferSourceNode.buffer = processedBuffer;\n          audioBufferSourceNode.start(0);\n        }\n\n        audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n          for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n\n          outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n        }\n\n        return outputGainNode;\n      }\n\n      if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await renderAutomation(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n          nativeAudioWorkletNode.parameters.get(nm), trace);\n        }\n      } else {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await connectAudioParam(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n          nativeAudioWorkletNode.parameters.get(nm), trace);\n        }\n      }\n\n      await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n      return nativeAudioWorkletNode;\n    };\n\n    return {\n      render(proxy, nativeOfflineAudioContext, trace) {\n        deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n        const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n        if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n          return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n        }\n\n        return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n    };\n  };\n};","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n  const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n  const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n  return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = channelSplitterNode => {\n  const channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n\n  Object.defineProperty(channelSplitterNode, 'channelCount', {\n    get: () => channelCount,\n    set: value => {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n   * explicit.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n    get: () => 'explicit',\n    set: value => {\n      if (value !== 'explicit') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n   * discrete.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n    get: () => 'discrete',\n    set: value => {\n      if (value !== 'discrete') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNodeFactory = createNativeAudioNode => {\n  return (nativeContext, options) => {\n    const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n    }); // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Edge & Safari do not have the correct channelCountMode.\n    // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options); // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n  };\n};","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = nativeIIRFilterNode => {\n  nativeIIRFilterNode.getFrequencyResponse = (getFrequencyResponse => {\n    return (frequencyHz, magResponse, phaseResponse) => {\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n\n      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n    };\n  })(nativeIIRFilterNode.getFrequencyResponse);\n};","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class IIRFilterNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n      const iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;\n      super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n      // @todo Write a test which allows other browsers to remain unpatched.\n\n      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n      this._nativeIIRFilterNode = nativeIIRFilterNode;\n    }\n\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n    }\n\n  };\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// const Tone = require(\"tone\");\n// import Synth from 'tone/Tone/instrument/Synth';\nimport * as Tone from \"tone\";\n\n\nconst synth = new Tone.PolySynth({\n    \"oscillator\": {\n        \"type\": \"sine\"\n    },\n    \"envelope\": {\n        \"attack\": 0.1,\n        \"decay\": 0.15,\n        \"sustain\": 10.0,\n        \"release\": 5.4\n    }\n});\n\nconst gain = new Tone.Gain(0.5);\ngain.toMaster();\n\nsynth.connect(gain);\n\nlet index = 0;\n\n\nconst check = document.body.querySelectorAll('input');\nconst play = document.body.querySelector('.play-btn');\nconst pause = document.body.querySelector('.pause-btn');\nconst rows = document.body.querySelectorAll('.note-container > div');\nconst tempo = document.body.querySelector('.tempo-control')\nconst clear = document.body.querySelector('.clear-btn');\nconst reset = document.body.querySelector('.rewind-btn');\n// const notes = ['C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'A#4', 'B4', 'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5', 'G#5', 'A5', 'A#5', 'B5']\nconst notes = ['C6', 'B5', 'A#5', 'A5', 'G#5', 'G5', 'F#5', 'F5', 'E5', 'D#5', 'D5', 'C#5', 'C5', 'B4', 'A#4', 'A4', 'G#4', 'G4', 'F#4', 'F4', 'E4', 'D#4', 'D4', 'C#4', 'C4']\n\nTone.Transport.scheduleRepeat(repeat, '8n');\nTone.Transport.bpm.value = 128;\n\nplay.addEventListener('click', async () => {\n    // debugger\n    Tone.start()\n    Tone.Transport.start()\n});\n\npause.addEventListener('click', async () => {\n    Tone.Transport.stop()\n});\n\ntempo.addEventListener('change', e => {\n    Tone.Transport.bpm.rampTo(e.target.value, 0.1);\n});\n\nreset.addEventListener('click', e => {\n    index = 0;\n    spans.forEach(span => span.classList.remove('highlight'))\n})\n\nclear.addEventListener('click', e => {\n    for (let i = 0; i < check.length; i++) {\n        if (check[i].checked === true) {\n            check[i].checked = false\n        }\n    }\n})\n\nfunction repeat(time) {\n    let step = index % 16;\n    for (let i = 0; i < rows.length; i++) {\n        let note = notes[i];\n        let row = rows[i];\n        let input = row.querySelector(`label:nth-child(${step + 1})`);\n        let checkbox = input.querySelector('input');\n        // debugger\n        if (checkbox.checked) {\n            // debugger\n            // if (i <= 8 || i === 11) {\n            //     synth.triggerAttackRelease(note, '8n', time).volume.value = 3;\n            // } else {\n            //     synth.triggerAttackRelease('8n', time).volume.value = 3;\n            // }\n            synth.triggerAttackRelease(note, '8n', time).volume.value = 3;\n        }\n    }\n    index++;\n};","const ToneNote = require(\"tone\");\nimport { Synth, Gain } from 'tone'\n// import ToneNote from \"Tone\";\n\nconst synthNote = new ToneNote.PolySynth({\n    \"oscillator\": {\n        \"type\": \"sine\"\n    },\n    \"envelope\": {\n        \"attack\": 0.1,\n        \"decay\": 0.15,\n        \"sustain\": 0.3,\n        \"release\": 0.4\n    }\n})\n\nconst gainNote = new ToneNote.Gain(0.5)\ngainNote.toMaster()\n\nsynthNote.connect(gainNote)\n\n\nconst c4 = document.querySelectorAll('.checkbox-row25');\nconst cSh4 = document.querySelectorAll('.checkbox-row24');\nconst d4 = document.querySelectorAll('.checkbox-row23');\nconst dSh4 = document.querySelectorAll('.checkbox-row22');\nconst e4 = document.querySelectorAll('.checkbox-row21');\nconst f4 = document.querySelectorAll('.checkbox-row20');\nconst fSh4 = document.querySelectorAll('.checkbox-row19');\nconst g4 = document.querySelectorAll('.checkbox-row18');\nconst gSh4 = document.querySelectorAll('.checkbox-row17');\nconst a4 = document.querySelectorAll('.checkbox-row16');\nconst aSh4 = document.querySelectorAll('.checkbox-row15');\nconst b4 = document.querySelectorAll('.checkbox-row14');\nconst c5 = document.querySelectorAll('.checkbox-row13');\nconst cSh5 = document.querySelectorAll('.checkbox-row12');\nconst d5 = document.querySelectorAll('.checkbox-row11');\nconst dSh5 = document.querySelectorAll('.checkbox-row10');\nconst e5 = document.querySelectorAll('.checkbox-row9');\nconst f5 = document.querySelectorAll('.checkbox-row8');\nconst fSh5 = document.querySelectorAll('.checkbox-row7');\nconst g5 = document.querySelectorAll('.checkbox-row6');\nconst gSh5 = document.querySelectorAll('.checkbox-row5');\nconst a5 = document.querySelectorAll('.checkbox-row4');\nconst aSh5 = document.querySelectorAll('.checkbox-row3');\nconst b5 = document.querySelectorAll('.checkbox-row2');\nconst c6 = document.querySelectorAll('.checkbox-row1');\n\nfor (let i = 0; i < c4.length; i++) {\n    c4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('C4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < cSh4.length; i++) {\n    cSh4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('C#4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < d4.length; i++) {\n    d4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('D4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < dSh4.length; i++) {\n    dSh4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('D#4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < e4.length; i++) {\n    e4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('E4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < f4.length; i++) {\n    f4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('F4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < fSh4.length; i++) {\n    fSh4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('F#4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < g4.length; i++) {\n    g4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('G4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < gSh4.length; i++) {\n    gSh4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('G#4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < a4.length; i++) {\n    a4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('A4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < aSh4.length; i++) {\n    aSh4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('A#4', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < b4.length; i++) {\n    b4[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('B4', '8n').volume.value = 3;\n    });\n}\n\n\nfor (let i = 0; i < c5.length; i++) {\n    c5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('C5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < cSh5.length; i++) {\n    cSh5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('C#5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < d5.length; i++) {\n    d5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('D5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < dSh5.length; i++) {\n    dSh5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('D#5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < e5.length; i++) {\n    e5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('E5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < f5.length; i++) {\n    f5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('F5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < fSh5.length; i++) {\n    fSh5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('F#5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < g5.length; i++) {\n    g5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('G5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < gSh5.length; i++) {\n    gSh5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('G#5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < a5.length; i++) {\n    a5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('A5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < aSh5.length; i++) {\n    aSh5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('A#5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < b5.length; i++) {\n    b5[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('B5', '8n').volume.value = 3;\n    });\n}\n\nfor (let i = 0; i < c6.length; i++) {\n    c6[i].addEventListener('click', async () => {\n        await ToneNote.start();\n        synthNote.triggerAttackRelease('C6', '8n').volume.value = 3;\n    });\n}\n"],"sourceRoot":""}